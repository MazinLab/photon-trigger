// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="postage_filter_w_interconn_postage_filter_w_interconn,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.671570,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=2568,HLS_SYN_LUT=2270,HLS_VERSION=2022_1}" *)

module postage_filter_w_interconn (
        ap_clk,
        ap_rst_n,
        postage_stream_TDATA,
        postage_stream_TVALID,
        postage_stream_TREADY,
        postage_stream_TKEEP,
        postage_stream_TSTRB,
        postage_stream_TUSER,
        postage_stream_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TUSER,
        out_r_TLAST,
        overflow,
        overflow_ap_vld,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [191:0] postage_stream_TDATA;
input   postage_stream_TVALID;
output   postage_stream_TREADY;
input  [23:0] postage_stream_TKEEP;
input  [23:0] postage_stream_TSTRB;
input  [12:0] postage_stream_TUSER;
input  [0:0] postage_stream_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [2:0] out_r_TUSER;
output  [0:0] out_r_TLAST;
output   overflow;
output   overflow_ap_vld;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

reg overflow_ap_vld;

 reg    ap_rst_n_inv;
wire   [11:0] monitor_0;
wire   [11:0] monitor_1;
wire   [11:0] monitor_2;
wire   [11:0] monitor_3;
wire   [11:0] monitor_4;
wire   [11:0] monitor_5;
wire   [11:0] monitor_6;
wire   [11:0] monitor_7;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6;
reg   [7:0] sending_i;
reg   [0:0] packet_in_flight;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1;
reg   [7:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0;
wire   [31:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0;
reg    postage_stream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    out_r_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] trunc_ln164_1_reg_2345;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] trunc_ln164_1_reg_2345_pp0_iter4_reg;
wire   [8:0] group_V_fu_534_p1;
reg   [8:0] group_V_reg_2006;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
wire    regslice_both_out_r_V_data_V_U_apdone_blk;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] trigger_V_reg_2018;
reg   [31:0] x_reg_2030;
reg   [31:0] x_1_reg_2042;
reg   [31:0] x_2_reg_2054;
reg   [31:0] x_3_reg_2066;
wire   [1:0] lane_V_fu_588_p1;
reg   [1:0] lane_V_reg_2078;
reg   [8:0] gid_V_reg_2084;
wire   [1:0] lane_V_1_fu_602_p1;
reg   [1:0] lane_V_1_reg_2089;
reg   [8:0] gid_V_1_reg_2095;
wire   [1:0] lane_V_2_fu_616_p1;
reg   [1:0] lane_V_2_reg_2100;
reg   [8:0] gid_V_2_reg_2106;
wire   [1:0] lane_V_3_fu_630_p1;
reg   [1:0] lane_V_3_reg_2111;
reg   [8:0] gid_V_3_reg_2117;
wire   [1:0] lane_V_4_fu_644_p1;
reg   [1:0] lane_V_4_reg_2122;
reg   [8:0] gid_V_4_reg_2128;
wire   [1:0] lane_V_5_fu_658_p1;
reg   [1:0] lane_V_5_reg_2133;
reg   [8:0] gid_V_5_reg_2139;
wire   [1:0] lane_V_6_fu_672_p1;
reg   [1:0] lane_V_6_reg_2144;
reg   [8:0] gid_V_6_reg_2150;
wire   [1:0] lane_V_7_fu_686_p1;
reg   [1:0] lane_V_7_reg_2155;
reg   [8:0] gid_V_7_reg_2161;
wire   [31:0] DataIn_assign_fu_700_p6;
reg   [31:0] DataIn_assign_reg_2166;
wire   [0:0] icmp_ln1065_fu_709_p2;
reg   [0:0] icmp_ln1065_reg_2171;
wire   [0:0] tmp_last_fu_723_p2;
reg   [0:0] tmp_last_reg_2176;
wire   [0:0] icmp_ln238_fu_729_p2;
reg   [0:0] icmp_ln238_reg_2181;
wire   [31:0] DataIn_assign_1_fu_767_p6;
reg   [31:0] DataIn_assign_1_reg_2188;
wire   [0:0] icmp_ln1065_1_fu_776_p2;
reg   [0:0] icmp_ln1065_1_reg_2193;
wire   [0:0] tmp_last_1_fu_790_p2;
reg   [0:0] tmp_last_1_reg_2198;
wire   [0:0] icmp_ln238_1_fu_796_p2;
reg   [0:0] icmp_ln238_1_reg_2203;
wire   [31:0] DataIn_assign_2_fu_834_p6;
reg   [31:0] DataIn_assign_2_reg_2210;
wire   [0:0] icmp_ln1065_2_fu_843_p2;
reg   [0:0] icmp_ln1065_2_reg_2215;
wire   [0:0] tmp_last_2_fu_857_p2;
reg   [0:0] tmp_last_2_reg_2220;
wire   [0:0] icmp_ln238_2_fu_863_p2;
reg   [0:0] icmp_ln238_2_reg_2225;
wire   [31:0] DataIn_assign_3_fu_901_p6;
reg   [31:0] DataIn_assign_3_reg_2232;
wire   [0:0] icmp_ln1065_3_fu_910_p2;
reg   [0:0] icmp_ln1065_3_reg_2237;
wire   [0:0] tmp_last_3_fu_924_p2;
reg   [0:0] tmp_last_3_reg_2242;
wire   [0:0] icmp_ln238_3_fu_930_p2;
reg   [0:0] icmp_ln238_3_reg_2247;
wire   [31:0] DataIn_assign_4_fu_968_p6;
reg   [31:0] DataIn_assign_4_reg_2254;
wire   [0:0] icmp_ln1065_4_fu_977_p2;
reg   [0:0] icmp_ln1065_4_reg_2259;
wire   [0:0] tmp_last_4_fu_991_p2;
reg   [0:0] tmp_last_4_reg_2264;
wire   [0:0] icmp_ln238_4_fu_997_p2;
reg   [0:0] icmp_ln238_4_reg_2269;
wire   [31:0] DataIn_assign_5_fu_1035_p6;
reg   [31:0] DataIn_assign_5_reg_2276;
wire   [0:0] icmp_ln1065_5_fu_1044_p2;
reg   [0:0] icmp_ln1065_5_reg_2281;
wire   [0:0] tmp_last_5_fu_1058_p2;
reg   [0:0] tmp_last_5_reg_2286;
wire   [0:0] icmp_ln238_5_fu_1064_p2;
reg   [0:0] icmp_ln238_5_reg_2291;
wire   [31:0] DataIn_assign_6_fu_1102_p6;
reg   [31:0] DataIn_assign_6_reg_2298;
wire   [0:0] icmp_ln1065_6_fu_1111_p2;
reg   [0:0] icmp_ln1065_6_reg_2303;
wire   [0:0] tmp_last_6_fu_1125_p2;
reg   [0:0] tmp_last_6_reg_2308;
wire   [0:0] icmp_ln238_6_fu_1131_p2;
reg   [0:0] icmp_ln238_6_reg_2313;
wire   [31:0] DataIn_assign_7_fu_1169_p6;
reg   [31:0] DataIn_assign_7_reg_2320;
wire   [0:0] icmp_ln1065_7_fu_1178_p2;
reg   [0:0] icmp_ln1065_7_reg_2325;
wire   [0:0] tmp_last_7_fu_1192_p2;
reg   [0:0] tmp_last_7_reg_2330;
wire   [0:0] icmp_ln238_7_fu_1198_p2;
reg   [0:0] icmp_ln238_7_reg_2335;
wire   [0:0] trunc_ln164_1_fu_1952_p1;
reg   [31:0] foo_data_reg_2352;
reg   [2:0] foo_user_V_reg_2357;
wire   [0:0] foo_last_fu_1986_p3;
reg   [0:0] foo_last_reg_2362;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [72:0] ap_phi_mux_empty_56_phi_fu_508_p16;
wire   [72:0] tmp_20_fu_1902_p5;
wire   [72:0] ap_phi_reg_pp0_iter3_empty_56_reg_505;
wire   [2:0] trunc_ln164_fu_1652_p1;
wire   [72:0] tmp_25_fu_1865_p5;
wire   [72:0] tmp_27_fu_1828_p5;
wire   [72:0] tmp_29_fu_1791_p5;
wire   [72:0] tmp_31_fu_1754_p5;
wire   [72:0] tmp_33_fu_1717_p5;
wire   [72:0] tmp_35_fu_1680_p5;
wire   [72:0] tmp_s_fu_1939_p5;
wire   [7:0] nexttocap_fu_717_p2;
wire   [0:0] p_Result_s_fu_755_p2;
wire   [7:0] nexttocap_1_fu_784_p2;
wire   [0:0] p_Result_1_fu_822_p2;
wire   [7:0] sending_plus1_fu_1644_p3;
wire   [0:0] packet_in_flight_load_load_fu_1956_p1;
wire   [7:0] nexttocap_2_fu_851_p2;
wire   [0:0] p_Result_2_fu_889_p2;
wire   [7:0] nexttocap_3_fu_918_p2;
wire   [0:0] p_Result_3_fu_956_p2;
wire   [7:0] nexttocap_4_fu_985_p2;
wire   [0:0] p_Result_4_fu_1023_p2;
wire   [7:0] nexttocap_5_fu_1052_p2;
wire   [0:0] p_Result_5_fu_1090_p2;
wire   [7:0] nexttocap_6_fu_1119_p2;
wire   [0:0] p_Result_6_fu_1157_p2;
wire   [7:0] nexttocap_7_fu_1186_p2;
wire   [0:0] p_Result_7_fu_1224_p2;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write;
reg    ap_block_pp0_stage0_01001;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_428_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_434_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_440_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_446_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_452_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_458_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_464_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read;
wire   [0:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_470_p2_0;
wire   [35:0] postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout;
wire    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n;
reg    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read;
wire   [3:0] zext_ln825_fu_741_p1;
wire   [3:0] shl_ln825_fu_744_p2;
wire   [3:0] and_ln825_fu_750_p2;
wire   [3:0] zext_ln825_1_fu_808_p1;
wire   [3:0] shl_ln825_1_fu_811_p2;
wire   [3:0] and_ln825_1_fu_817_p2;
wire   [3:0] zext_ln825_2_fu_875_p1;
wire   [3:0] shl_ln825_2_fu_878_p2;
wire   [3:0] and_ln825_2_fu_884_p2;
wire   [3:0] zext_ln825_3_fu_942_p1;
wire   [3:0] shl_ln825_3_fu_945_p2;
wire   [3:0] and_ln825_3_fu_951_p2;
wire   [3:0] zext_ln825_4_fu_1009_p1;
wire   [3:0] shl_ln825_4_fu_1012_p2;
wire   [3:0] and_ln825_4_fu_1018_p2;
wire   [3:0] zext_ln825_5_fu_1076_p1;
wire   [3:0] shl_ln825_5_fu_1079_p2;
wire   [3:0] and_ln825_5_fu_1085_p2;
wire   [3:0] zext_ln825_6_fu_1143_p1;
wire   [3:0] shl_ln825_6_fu_1146_p2;
wire   [3:0] and_ln825_6_fu_1152_p2;
wire   [3:0] zext_ln825_7_fu_1210_p1;
wire   [3:0] shl_ln825_7_fu_1213_p2;
wire   [3:0] and_ln825_7_fu_1219_p2;
wire   [40:0] tmp_fu_1262_p4;
wire   [40:0] or_ln185_fu_1271_p2;
wire   [0:0] tmp_2_fu_1287_p3;
wire   [2:0] tmp_1_fu_1277_p4;
wire   [40:0] tmp_3_fu_1314_p4;
wire   [40:0] or_ln185_1_fu_1323_p2;
wire   [0:0] tmp_5_fu_1339_p3;
wire   [2:0] tmp_4_fu_1329_p4;
wire   [40:0] tmp_6_fu_1366_p4;
wire   [40:0] or_ln185_2_fu_1375_p2;
wire   [0:0] tmp_8_fu_1391_p3;
wire   [2:0] tmp_7_fu_1381_p4;
wire   [40:0] tmp_9_fu_1418_p4;
wire   [40:0] or_ln185_3_fu_1427_p2;
wire   [0:0] tmp_11_fu_1443_p3;
wire   [2:0] tmp_10_fu_1433_p4;
wire   [40:0] tmp_12_fu_1470_p4;
wire   [40:0] or_ln185_4_fu_1479_p2;
wire   [0:0] tmp_14_fu_1495_p3;
wire   [2:0] tmp_13_fu_1485_p4;
wire   [40:0] tmp_15_fu_1522_p4;
wire   [40:0] or_ln185_5_fu_1531_p2;
wire   [0:0] tmp_17_fu_1547_p3;
wire   [2:0] tmp_16_fu_1537_p4;
wire   [40:0] tmp_18_fu_1574_p4;
wire   [40:0] or_ln185_6_fu_1583_p2;
wire   [0:0] tmp_21_fu_1599_p3;
wire   [2:0] tmp_19_fu_1589_p4;
wire   [4:0] tmp_22_fu_1622_p4;
wire   [0:0] icmp_ln254_fu_1632_p2;
wire   [7:0] add_ln254_fu_1638_p2;
wire   [34:0] empty_54_fu_1672_p1;
wire   [0:0] tmp_36_fu_1664_p3;
wire   [39:0] tmp_34_cast_fu_1676_p1;
wire   [34:0] empty_53_fu_1709_p1;
wire   [0:0] tmp_34_fu_1701_p3;
wire   [39:0] tmp_32_cast_fu_1713_p1;
wire   [34:0] empty_52_fu_1746_p1;
wire   [0:0] tmp_32_fu_1738_p3;
wire   [39:0] tmp_30_cast_fu_1750_p1;
wire   [34:0] empty_51_fu_1783_p1;
wire   [0:0] tmp_30_fu_1775_p3;
wire   [39:0] tmp_28_cast_fu_1787_p1;
wire   [34:0] empty_50_fu_1820_p1;
wire   [0:0] tmp_28_fu_1812_p3;
wire   [39:0] tmp_26_cast_fu_1824_p1;
wire   [34:0] empty_49_fu_1857_p1;
wire   [0:0] tmp_26_fu_1849_p3;
wire   [39:0] tmp_24_cast_fu_1861_p1;
wire   [34:0] empty_48_fu_1894_p1;
wire   [0:0] tmp_24_fu_1886_p3;
wire   [39:0] tmp_23_cast_fu_1898_p1;
wire   [34:0] empty_55_fu_1931_p1;
wire   [0:0] tmp_23_fu_1923_p3;
wire   [39:0] tmp_22_cast_fu_1935_p1;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_postage_stream_V_data_V_U_apdone_blk;
wire   [191:0] postage_stream_TDATA_int_regslice;
wire    postage_stream_TVALID_int_regslice;
reg    postage_stream_TREADY_int_regslice;
wire    regslice_both_postage_stream_V_data_V_U_ack_in;
wire    regslice_both_postage_stream_V_keep_V_U_apdone_blk;
wire   [23:0] postage_stream_TKEEP_int_regslice;
wire    regslice_both_postage_stream_V_keep_V_U_vld_out;
wire    regslice_both_postage_stream_V_keep_V_U_ack_in;
wire    regslice_both_postage_stream_V_strb_V_U_apdone_blk;
wire   [23:0] postage_stream_TSTRB_int_regslice;
wire    regslice_both_postage_stream_V_strb_V_U_vld_out;
wire    regslice_both_postage_stream_V_strb_V_U_ack_in;
wire    regslice_both_postage_stream_V_user_V_U_apdone_blk;
wire   [12:0] postage_stream_TUSER_int_regslice;
wire    regslice_both_postage_stream_V_user_V_U_vld_out;
wire    regslice_both_postage_stream_V_user_V_U_ack_in;
wire    regslice_both_postage_stream_V_last_V_U_apdone_blk;
wire   [0:0] postage_stream_TLAST_int_regslice;
wire    regslice_both_postage_stream_V_last_V_U_vld_out;
wire    regslice_both_postage_stream_V_last_V_U_ack_in;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_V_data_V_U_vld_out;
wire    regslice_both_out_r_V_keep_V_U_apdone_blk;
wire    regslice_both_out_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_keep_V_U_vld_out;
wire    regslice_both_out_r_V_strb_V_U_apdone_blk;
wire    regslice_both_out_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_strb_V_U_vld_out;
wire    regslice_both_out_r_V_user_V_U_apdone_blk;
wire    regslice_both_out_r_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_user_V_U_vld_out;
wire    regslice_both_out_r_V_last_V_U_apdone_blk;
wire    regslice_both_out_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_last_V_U_vld_out;
reg    ap_condition_1456;
reg    ap_condition_1445;
reg    ap_condition_1434;
reg    ap_condition_1423;
reg    ap_condition_1412;
reg    ap_condition_1401;
reg    ap_condition_1390;
reg    ap_condition_1379;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 = 8'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 = 8'd0;
#0 sending_i = 8'd0;
#0 packet_in_flight = 1'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 = 8'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 = 8'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 = 8'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 = 8'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 = 8'd0;
#0 postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture = 8'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0),
    .d0(DataIn_assign_reg_2166),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0),
    .d0(DataIn_assign_1_reg_2188),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0),
    .d0(DataIn_assign_2_reg_2210),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0),
    .d0(DataIn_assign_3_reg_2232),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0),
    .d0(DataIn_assign_4_reg_2254),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0),
    .d0(DataIn_assign_5_reg_2276),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0),
    .d0(DataIn_assign_6_reg_2298),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0)
);

postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(4'd8),
    .ce0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0),
    .we0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0),
    .d0(DataIn_assign_7_reg_2320),
    .q0(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0)
);

postage_filter_w_interconn_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .monitor_0(monitor_0),
    .monitor_1(monitor_1),
    .monitor_2(monitor_2),
    .monitor_3(monitor_3),
    .monitor_4(monitor_4),
    .monitor_5(monitor_5),
    .monitor_6(monitor_6),
    .monitor_7(monitor_7)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_reg_2078),
    .dout(DataIn_assign_fu_700_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_1_reg_2089),
    .dout(DataIn_assign_1_fu_767_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_2_reg_2100),
    .dout(DataIn_assign_2_fu_834_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_3_reg_2111),
    .dout(DataIn_assign_3_fu_901_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U5(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_4_reg_2122),
    .dout(DataIn_assign_4_fu_968_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_5_reg_2133),
    .dout(DataIn_assign_5_fu_1035_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_6_reg_2144),
    .dout(DataIn_assign_6_fu_1102_p6)
);

postage_filter_w_interconn_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U8(
    .din0(x_reg_2030),
    .din1(x_1_reg_2042),
    .din2(x_2_reg_2054),
    .din3(x_3_reg_2066),
    .din4(lane_V_7_reg_2155),
    .dout(DataIn_assign_7_fu_1169_p6)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read)
);

postage_filter_w_interconn_fifo_w36_d132_A postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din),
    .if_full_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n),
    .if_write(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write),
    .if_dout(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout),
    .if_empty_n(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n),
    .if_read(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 192 ))
regslice_both_postage_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_stream_TDATA),
    .vld_in(postage_stream_TVALID),
    .ack_in(regslice_both_postage_stream_V_data_V_U_ack_in),
    .data_out(postage_stream_TDATA_int_regslice),
    .vld_out(postage_stream_TVALID_int_regslice),
    .ack_out(postage_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_postage_stream_V_data_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 24 ))
regslice_both_postage_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_stream_TKEEP),
    .vld_in(postage_stream_TVALID),
    .ack_in(regslice_both_postage_stream_V_keep_V_U_ack_in),
    .data_out(postage_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_postage_stream_V_keep_V_U_vld_out),
    .ack_out(postage_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_postage_stream_V_keep_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 24 ))
regslice_both_postage_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_stream_TSTRB),
    .vld_in(postage_stream_TVALID),
    .ack_in(regslice_both_postage_stream_V_strb_V_U_ack_in),
    .data_out(postage_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_postage_stream_V_strb_V_U_vld_out),
    .ack_out(postage_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_postage_stream_V_strb_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 13 ))
regslice_both_postage_stream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_stream_TUSER),
    .vld_in(postage_stream_TVALID),
    .ack_in(regslice_both_postage_stream_V_user_V_U_ack_in),
    .data_out(postage_stream_TUSER_int_regslice),
    .vld_out(regslice_both_postage_stream_V_user_V_U_vld_out),
    .ack_out(postage_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_postage_stream_V_user_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 1 ))
regslice_both_postage_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_stream_TLAST),
    .vld_in(postage_stream_TVALID),
    .ack_in(regslice_both_postage_stream_V_last_V_U_ack_in),
    .data_out(postage_stream_TLAST_int_regslice),
    .vld_out(regslice_both_postage_stream_V_last_V_U_vld_out),
    .ack_out(postage_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_postage_stream_V_last_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(foo_data_reg_2352),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_data_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_r_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_keep_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_r_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_strb_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(foo_user_V_reg_2357),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_user_V_U_ack_in_dummy),
    .data_out(out_r_TUSER),
    .vld_out(regslice_both_out_r_V_user_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_user_V_U_apdone_blk)
);

postage_filter_w_interconn_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(foo_last_reg_2362),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_r_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1456)) begin
        if (((p_Result_7_fu_1224_p2 == 1'd0) & (icmp_ln238_7_fu_1198_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture <= 8'd127;
        end else if ((icmp_ln238_7_fu_1198_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture <= nexttocap_7_fu_1186_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1445)) begin
        if (((p_Result_6_fu_1157_p2 == 1'd0) & (icmp_ln238_6_fu_1131_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 <= 8'd127;
        end else if ((icmp_ln238_6_fu_1131_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 <= nexttocap_6_fu_1119_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1434)) begin
        if (((p_Result_5_fu_1090_p2 == 1'd0) & (icmp_ln238_5_fu_1064_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 <= 8'd127;
        end else if ((icmp_ln238_5_fu_1064_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 <= nexttocap_5_fu_1052_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1423)) begin
        if (((p_Result_4_fu_1023_p2 == 1'd0) & (icmp_ln238_4_fu_997_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 <= 8'd127;
        end else if ((icmp_ln238_4_fu_997_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 <= nexttocap_4_fu_985_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1412)) begin
        if (((p_Result_3_fu_956_p2 == 1'd0) & (icmp_ln238_3_fu_930_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 <= 8'd127;
        end else if ((icmp_ln238_3_fu_930_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 <= nexttocap_3_fu_918_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1401)) begin
        if (((p_Result_2_fu_889_p2 == 1'd0) & (icmp_ln238_2_fu_863_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 <= 8'd127;
        end else if ((icmp_ln238_2_fu_863_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 <= nexttocap_2_fu_851_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1390)) begin
        if (((p_Result_1_fu_822_p2 == 1'd0) & (icmp_ln238_1_fu_796_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 <= 8'd127;
        end else if ((icmp_ln238_1_fu_796_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 <= nexttocap_1_fu_784_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1379)) begin
        if (((p_Result_s_fu_755_p2 == 1'd0) & (icmp_ln238_fu_729_p2 == 1'd1))) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 <= 8'd127;
        end else if ((icmp_ln238_fu_729_p2 == 1'd0)) begin
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 <= nexttocap_fu_717_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        DataIn_assign_1_reg_2188 <= DataIn_assign_1_fu_767_p6;
        DataIn_assign_2_reg_2210 <= DataIn_assign_2_fu_834_p6;
        DataIn_assign_3_reg_2232 <= DataIn_assign_3_fu_901_p6;
        DataIn_assign_4_reg_2254 <= DataIn_assign_4_fu_968_p6;
        DataIn_assign_5_reg_2276 <= DataIn_assign_5_fu_1035_p6;
        DataIn_assign_6_reg_2298 <= DataIn_assign_6_fu_1102_p6;
        DataIn_assign_7_reg_2320 <= DataIn_assign_7_fu_1169_p6;
        DataIn_assign_reg_2166 <= DataIn_assign_fu_700_p6;
        gid_V_1_reg_2095 <= {{monitor_1[10:2]}};
        gid_V_2_reg_2106 <= {{monitor_2[10:2]}};
        gid_V_3_reg_2117 <= {{monitor_3[10:2]}};
        gid_V_4_reg_2128 <= {{monitor_4[10:2]}};
        gid_V_5_reg_2139 <= {{monitor_5[10:2]}};
        gid_V_6_reg_2150 <= {{monitor_6[10:2]}};
        gid_V_7_reg_2161 <= {{monitor_7[10:2]}};
        gid_V_reg_2084 <= {{monitor_0[10:2]}};
        group_V_reg_2006 <= group_V_fu_534_p1;
        icmp_ln1065_1_reg_2193 <= icmp_ln1065_1_fu_776_p2;
        icmp_ln1065_2_reg_2215 <= icmp_ln1065_2_fu_843_p2;
        icmp_ln1065_3_reg_2237 <= icmp_ln1065_3_fu_910_p2;
        icmp_ln1065_4_reg_2259 <= icmp_ln1065_4_fu_977_p2;
        icmp_ln1065_5_reg_2281 <= icmp_ln1065_5_fu_1044_p2;
        icmp_ln1065_6_reg_2303 <= icmp_ln1065_6_fu_1111_p2;
        icmp_ln1065_7_reg_2325 <= icmp_ln1065_7_fu_1178_p2;
        icmp_ln1065_reg_2171 <= icmp_ln1065_fu_709_p2;
        lane_V_1_reg_2089 <= lane_V_1_fu_602_p1;
        lane_V_2_reg_2100 <= lane_V_2_fu_616_p1;
        lane_V_3_reg_2111 <= lane_V_3_fu_630_p1;
        lane_V_4_reg_2122 <= lane_V_4_fu_644_p1;
        lane_V_5_reg_2133 <= lane_V_5_fu_658_p1;
        lane_V_6_reg_2144 <= lane_V_6_fu_672_p1;
        lane_V_7_reg_2155 <= lane_V_7_fu_686_p1;
        lane_V_reg_2078 <= lane_V_fu_588_p1;
        tmp_last_1_reg_2198 <= tmp_last_1_fu_790_p2;
        tmp_last_2_reg_2220 <= tmp_last_2_fu_857_p2;
        tmp_last_3_reg_2242 <= tmp_last_3_fu_924_p2;
        tmp_last_4_reg_2264 <= tmp_last_4_fu_991_p2;
        tmp_last_5_reg_2286 <= tmp_last_5_fu_1058_p2;
        tmp_last_6_reg_2308 <= tmp_last_6_fu_1125_p2;
        tmp_last_7_reg_2330 <= tmp_last_7_fu_1192_p2;
        tmp_last_reg_2176 <= tmp_last_fu_723_p2;
        trigger_V_reg_2018 <= {{postage_stream_TUSER_int_regslice[12:9]}};
        x_1_reg_2042 <= {{postage_stream_TDATA_int_regslice[127:96]}};
        x_2_reg_2054 <= {{postage_stream_TDATA_int_regslice[159:128]}};
        x_3_reg_2066 <= {{postage_stream_TDATA_int_regslice[191:160]}};
        x_reg_2030 <= {{postage_stream_TDATA_int_regslice[95:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln164_1_fu_1952_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        foo_data_reg_2352 <= {{ap_phi_mux_empty_56_phi_fu_508_p16[63:32]}};
        foo_last_reg_2362 <= ap_phi_mux_empty_56_phi_fu_508_p16[32'd72];
        foo_user_V_reg_2357 <= {{ap_phi_mux_empty_56_phi_fu_508_p16[66:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_1_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_1_reg_2203 <= icmp_ln238_1_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_2_fu_843_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_2_reg_2225 <= icmp_ln238_2_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_3_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_3_reg_2247 <= icmp_ln238_3_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_4_fu_977_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_4_reg_2269 <= icmp_ln238_4_fu_997_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_5_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_5_reg_2291 <= icmp_ln238_5_fu_1064_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_6_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_6_reg_2313 <= icmp_ln238_6_fu_1131_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_7_fu_1178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_7_reg_2335 <= icmp_ln238_7_fu_1198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln238_reg_2181 <= icmp_ln238_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (foo_last_fu_1986_p3 == 1'd0) & (trunc_ln164_1_fu_1952_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        packet_in_flight <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((((packet_in_flight_load_load_fu_1956_p1 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln164_1_fu_1952_p1 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (foo_last_fu_1986_p3 == 1'd1) & (trunc_ln164_1_fu_1952_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        sending_i <= sending_plus1_fu_1644_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        trunc_ln164_1_reg_2345 <= trunc_ln164_1_fu_1952_p1;
        trunc_ln164_1_reg_2345_pp0_iter4_reg <= trunc_ln164_1_reg_2345;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((trunc_ln164_fu_1652_p1 == 3'd7)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_s_fu_1939_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd6)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_35_fu_1680_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd5)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_33_fu_1717_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd4)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_31_fu_1754_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd3)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_29_fu_1791_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd2)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_27_fu_1828_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd1)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_25_fu_1865_p5;
    end else if ((trunc_ln164_fu_1652_p1 == 3'd0)) begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = tmp_20_fu_1902_p5;
    end else begin
        ap_phi_mux_empty_56_phi_fu_508_p16 = ap_phi_reg_pp0_iter3_empty_56_reg_505;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((((trunc_ln164_1_reg_2345_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((trunc_ln164_1_reg_2345 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln164_1_reg_2345 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        overflow_ap_vld = 1'b1;
    end else begin
        overflow_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_6_reg_2313 == 1'd0) & (icmp_ln1065_6_reg_2303 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_5_reg_2291 == 1'd0) & (icmp_ln1065_5_reg_2281 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_4_reg_2269 == 1'd0) & (icmp_ln1065_4_reg_2259 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_3_reg_2247 == 1'd0) & (icmp_ln1065_3_reg_2237 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_2_reg_2225 == 1'd0) & (icmp_ln1065_2_reg_2215 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_1_reg_2203 == 1'd0) & (icmp_ln1065_1_reg_2193 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_reg_2181 == 1'd0) & (icmp_ln1065_reg_2171 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n == 1'b1) & (trunc_ln164_fu_1652_p1 == 3'd7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read = 1'b0;
    end
end

always @ (*) begin
    if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln238_7_reg_2335 == 1'd0) & (icmp_ln1065_7_reg_2325 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write = 1'b1;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 = icmp_ln1065_1_reg_2193;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 = icmp_ln1065_1_reg_2193;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 = icmp_ln1065_7_reg_2325;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 = icmp_ln1065_7_reg_2325;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 = icmp_ln1065_6_reg_2303;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 = icmp_ln1065_6_reg_2303;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 = icmp_ln1065_5_reg_2281;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 = icmp_ln1065_5_reg_2281;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 = icmp_ln1065_4_reg_2259;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 = icmp_ln1065_4_reg_2259;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 = icmp_ln1065_3_reg_2237;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 = icmp_ln1065_3_reg_2237;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 = icmp_ln1065_reg_2171;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 = icmp_ln1065_reg_2171;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 = icmp_ln1065_2_reg_2215;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 = icmp_ln1065_2_reg_2215;
    end else begin
        postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        postage_stream_TDATA_blk_n = postage_stream_TVALID_int_regslice;
    end else begin
        postage_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        postage_stream_TREADY_int_regslice = 1'b1;
    end else begin
        postage_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln254_fu_1638_p2 = (sending_i + 8'd1);

assign and_ln825_1_fu_817_p2 = (trigger_V_reg_2018 & shl_ln825_1_fu_811_p2);

assign and_ln825_2_fu_884_p2 = (trigger_V_reg_2018 & shl_ln825_2_fu_878_p2);

assign and_ln825_3_fu_951_p2 = (trigger_V_reg_2018 & shl_ln825_3_fu_945_p2);

assign and_ln825_4_fu_1018_p2 = (trigger_V_reg_2018 & shl_ln825_4_fu_1012_p2);

assign and_ln825_5_fu_1085_p2 = (trigger_V_reg_2018 & shl_ln825_5_fu_1079_p2);

assign and_ln825_6_fu_1152_p2 = (trigger_V_reg_2018 & shl_ln825_6_fu_1146_p2);

assign and_ln825_7_fu_1219_p2 = (trigger_V_reg_2018 & shl_ln825_7_fu_1213_p2);

assign and_ln825_fu_750_p2 = (trigger_V_reg_2018 & shl_ln825_fu_744_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((postage_stream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345_pp0_iter4_reg == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((postage_stream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state6_io) | ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345_pp0_iter4_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((postage_stream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state6_io) | ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345_pp0_iter4_reg == 1'd1)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345 == 1'd1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (postage_stream_TVALID_int_regslice == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345 == 1'd1));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345 == 1'd1));
end

always @ (*) begin
    ap_block_state6_io = ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (trunc_ln164_1_reg_2345_pp0_iter4_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_1379 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1390 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_1_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1401 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_2_fu_843_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1412 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_3_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1423 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_4_fu_977_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1434 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_5_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1445 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_6_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1456 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_7_fu_1178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter3_empty_56_reg_505 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_48_fu_1894_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout[34:0];

assign empty_49_fu_1857_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout[34:0];

assign empty_50_fu_1820_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout[34:0];

assign empty_51_fu_1783_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout[34:0];

assign empty_52_fu_1746_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout[34:0];

assign empty_53_fu_1709_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout[34:0];

assign empty_54_fu_1672_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout[34:0];

assign empty_55_fu_1931_p1 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout[34:0];

assign foo_last_fu_1986_p3 = ap_phi_mux_empty_56_phi_fu_508_p16[32'd72];

assign group_V_fu_534_p1 = postage_stream_TUSER_int_regslice[8:0];

assign icmp_ln1065_1_fu_776_p2 = ((gid_V_1_reg_2095 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_2_fu_843_p2 = ((gid_V_2_reg_2106 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_3_fu_910_p2 = ((gid_V_3_reg_2117 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_4_fu_977_p2 = ((gid_V_4_reg_2128 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_5_fu_1044_p2 = ((gid_V_5_reg_2139 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_6_fu_1111_p2 = ((gid_V_6_reg_2150 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_7_fu_1178_p2 = ((gid_V_7_reg_2161 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_709_p2 = ((gid_V_reg_2084 == group_V_reg_2006) ? 1'b1 : 1'b0);

assign icmp_ln238_1_fu_796_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_2_fu_863_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_3_fu_930_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_4_fu_997_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_5_fu_1064_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_6_fu_1131_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_7_fu_1198_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_729_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln254_fu_1632_p2 = ((tmp_22_fu_1622_p4 != 5'd0) ? 1'b1 : 1'b0);

assign lane_V_1_fu_602_p1 = monitor_1[1:0];

assign lane_V_2_fu_616_p1 = monitor_2[1:0];

assign lane_V_3_fu_630_p1 = monitor_3[1:0];

assign lane_V_4_fu_644_p1 = monitor_4[1:0];

assign lane_V_5_fu_658_p1 = monitor_5[1:0];

assign lane_V_6_fu_672_p1 = monitor_6[1:0];

assign lane_V_7_fu_686_p1 = monitor_7[1:0];

assign lane_V_fu_588_p1 = monitor_0[1:0];

assign nexttocap_1_fu_784_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6) + $signed(8'd255));

assign nexttocap_2_fu_851_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5) + $signed(8'd255));

assign nexttocap_3_fu_918_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4) + $signed(8'd255));

assign nexttocap_4_fu_985_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3) + $signed(8'd255));

assign nexttocap_5_fu_1052_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2) + $signed(8'd255));

assign nexttocap_6_fu_1119_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1) + $signed(8'd255));

assign nexttocap_7_fu_1186_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture) + $signed(8'd255));

assign nexttocap_fu_717_p2 = ($signed(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7) + $signed(8'd255));

assign or_ln185_1_fu_1323_p2 = (tmp_3_fu_1314_p4 | 41'd8589934592);

assign or_ln185_2_fu_1375_p2 = (tmp_6_fu_1366_p4 | 41'd12884901888);

assign or_ln185_3_fu_1427_p2 = (tmp_9_fu_1418_p4 | 41'd17179869184);

assign or_ln185_4_fu_1479_p2 = (tmp_12_fu_1470_p4 | 41'd21474836480);

assign or_ln185_5_fu_1531_p2 = (tmp_15_fu_1522_p4 | 41'd25769803776);

assign or_ln185_6_fu_1583_p2 = (tmp_18_fu_1574_p4 | 41'd30064771072);

assign or_ln185_fu_1271_p2 = (tmp_fu_1262_p4 | 41'd4294967296);

assign out_r_TVALID = regslice_both_out_r_V_data_V_U_vld_out;

assign overflow = 1'd1;

assign p_Result_1_fu_822_p2 = ((and_ln825_1_fu_817_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_2_fu_889_p2 = ((and_ln825_2_fu_884_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_3_fu_956_p2 = ((and_ln825_3_fu_951_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_4_fu_1023_p2 = ((and_ln825_4_fu_1018_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_5_fu_1090_p2 = ((and_ln825_5_fu_1085_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_6_fu_1157_p2 = ((and_ln825_6_fu_1152_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_7_fu_1224_p2 = ((and_ln825_7_fu_1219_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_755_p2 = ((and_ln825_fu_750_p2 == 4'd0) ? 1'b1 : 1'b0);

assign packet_in_flight_load_load_fu_1956_p1 = packet_in_flight;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din = {{{tmp_17_fu_1547_p3}, {tmp_16_fu_1537_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_428_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din = {{{tmp_14_fu_1495_p3}, {tmp_13_fu_1485_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_434_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din = {{{tmp_11_fu_1443_p3}, {tmp_10_fu_1433_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_440_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din = {{{tmp_8_fu_1391_p3}, {tmp_7_fu_1381_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_446_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din = {{{tmp_5_fu_1339_p3}, {tmp_4_fu_1329_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_452_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din = {{{tmp_2_fu_1287_p3}, {tmp_1_fu_1277_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_458_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din = {{{tmp_last_reg_2176}, {3'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_464_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n;

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din = {{{tmp_21_fu_1599_p3}, {tmp_19_fu_1589_p4}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0}};

assign postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_470_p2_0 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n;

assign postage_stream_TREADY = regslice_both_postage_stream_V_data_V_U_ack_in;

assign sending_plus1_fu_1644_p3 = ((icmp_ln254_fu_1632_p2[0:0] == 1'b1) ? 8'd0 : add_ln254_fu_1638_p2);

assign shl_ln825_1_fu_811_p2 = 4'd1 << zext_ln825_1_fu_808_p1;

assign shl_ln825_2_fu_878_p2 = 4'd1 << zext_ln825_2_fu_875_p1;

assign shl_ln825_3_fu_945_p2 = 4'd1 << zext_ln825_3_fu_942_p1;

assign shl_ln825_4_fu_1012_p2 = 4'd1 << zext_ln825_4_fu_1009_p1;

assign shl_ln825_5_fu_1079_p2 = 4'd1 << zext_ln825_5_fu_1076_p1;

assign shl_ln825_6_fu_1146_p2 = 4'd1 << zext_ln825_6_fu_1143_p1;

assign shl_ln825_7_fu_1213_p2 = 4'd1 << zext_ln825_7_fu_1210_p1;

assign shl_ln825_fu_744_p2 = 4'd1 << zext_ln825_fu_741_p1;

assign tmp_10_fu_1433_p4 = {{or_ln185_3_fu_1427_p2[34:32]}};

assign tmp_11_fu_1443_p3 = or_ln185_3_fu_1427_p2[32'd40];

assign tmp_12_fu_1470_p4 = {{{tmp_last_5_reg_2286}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0}};

assign tmp_13_fu_1485_p4 = {{or_ln185_4_fu_1479_p2[34:32]}};

assign tmp_14_fu_1495_p3 = or_ln185_4_fu_1479_p2[32'd40];

assign tmp_15_fu_1522_p4 = {{{tmp_last_6_reg_2308}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0}};

assign tmp_16_fu_1537_p4 = {{or_ln185_5_fu_1531_p2[34:32]}};

assign tmp_17_fu_1547_p3 = or_ln185_5_fu_1531_p2[32'd40];

assign tmp_18_fu_1574_p4 = {{{tmp_last_7_reg_2330}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0}};

assign tmp_19_fu_1589_p4 = {{or_ln185_6_fu_1583_p2[34:32]}};

assign tmp_1_fu_1277_p4 = {{or_ln185_fu_1271_p2[34:32]}};

assign tmp_20_fu_1902_p5 = {{{{tmp_24_fu_1886_p3}, {tmp_23_cast_fu_1898_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_464_p2_0}};

assign tmp_21_fu_1599_p3 = or_ln185_6_fu_1583_p2[32'd40];

assign tmp_22_cast_fu_1935_p1 = empty_55_fu_1931_p1;

assign tmp_22_fu_1622_p4 = {{sending_i[7:3]}};

assign tmp_23_cast_fu_1898_p1 = empty_48_fu_1894_p1;

assign tmp_23_fu_1923_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout[32'd35];

assign tmp_24_cast_fu_1861_p1 = empty_49_fu_1857_p1;

assign tmp_24_fu_1886_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout[32'd35];

assign tmp_25_fu_1865_p5 = {{{{tmp_26_fu_1849_p3}, {tmp_24_cast_fu_1861_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_458_p2_0}};

assign tmp_26_cast_fu_1824_p1 = empty_50_fu_1820_p1;

assign tmp_26_fu_1849_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout[32'd35];

assign tmp_27_fu_1828_p5 = {{{{tmp_28_fu_1812_p3}, {tmp_26_cast_fu_1824_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_452_p2_0}};

assign tmp_28_cast_fu_1787_p1 = empty_51_fu_1783_p1;

assign tmp_28_fu_1812_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout[32'd35];

assign tmp_29_fu_1791_p5 = {{{{tmp_30_fu_1775_p3}, {tmp_28_cast_fu_1787_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_446_p2_0}};

assign tmp_2_fu_1287_p3 = or_ln185_fu_1271_p2[32'd40];

assign tmp_30_cast_fu_1750_p1 = empty_52_fu_1746_p1;

assign tmp_30_fu_1775_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout[32'd35];

assign tmp_31_fu_1754_p5 = {{{{tmp_32_fu_1738_p3}, {tmp_30_cast_fu_1750_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_440_p2_0}};

assign tmp_32_cast_fu_1713_p1 = empty_53_fu_1709_p1;

assign tmp_32_fu_1738_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout[32'd35];

assign tmp_33_fu_1717_p5 = {{{{tmp_34_fu_1701_p3}, {tmp_32_cast_fu_1713_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_434_p2_0}};

assign tmp_34_cast_fu_1676_p1 = empty_54_fu_1672_p1;

assign tmp_34_fu_1701_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout[32'd35];

assign tmp_35_fu_1680_p5 = {{{{tmp_36_fu_1664_p3}, {tmp_34_cast_fu_1676_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_428_p2_0}};

assign tmp_36_fu_1664_p3 = postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout[32'd35];

assign tmp_3_fu_1314_p4 = {{{tmp_last_2_reg_2220}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0}};

assign tmp_4_fu_1329_p4 = {{or_ln185_1_fu_1323_p2[34:32]}};

assign tmp_5_fu_1339_p3 = or_ln185_1_fu_1323_p2[32'd40];

assign tmp_6_fu_1366_p4 = {{{tmp_last_3_reg_2242}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0}};

assign tmp_7_fu_1381_p4 = {{or_ln185_2_fu_1375_p2[34:32]}};

assign tmp_8_fu_1391_p3 = or_ln185_2_fu_1375_p2[32'd40];

assign tmp_9_fu_1418_p4 = {{{tmp_last_4_reg_2264}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0}};

assign tmp_fu_1262_p4 = {{{tmp_last_1_reg_2198}, {8'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0}};

assign tmp_last_1_fu_790_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_2_fu_857_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_3_fu_924_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_4_fu_991_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_5_fu_1058_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_6_fu_1125_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_7_fu_1192_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_fu_723_p2 = ((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_s_fu_1939_p5 = {{{{tmp_23_fu_1923_p3}, {tmp_22_cast_fu_1935_p1}}, {31'd0}}, {postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_470_p2_0}};

assign trunc_ln164_1_fu_1952_p1 = ap_phi_mux_empty_56_phi_fu_508_p16[0:0];

assign trunc_ln164_fu_1652_p1 = sending_i[2:0];

assign zext_ln825_1_fu_808_p1 = lane_V_1_reg_2089;

assign zext_ln825_2_fu_875_p1 = lane_V_2_reg_2100;

assign zext_ln825_3_fu_942_p1 = lane_V_3_reg_2111;

assign zext_ln825_4_fu_1009_p1 = lane_V_4_reg_2122;

assign zext_ln825_5_fu_1076_p1 = lane_V_5_reg_2133;

assign zext_ln825_6_fu_1143_p1 = lane_V_6_reg_2144;

assign zext_ln825_7_fu_1210_p1 = lane_V_7_reg_2155;

assign zext_ln825_fu_741_p1 = lane_V_reg_2078;


reg find_kernel_block = 0;
// synthesis translate_off
`include "postage_filter_w_interconn_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //postage_filter_w_interconn

