-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity postage_filter_w_interconn is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    postage_stream_TDATA : IN STD_LOGIC_VECTOR (191 downto 0);
    postage_stream_TVALID : IN STD_LOGIC;
    postage_stream_TREADY : OUT STD_LOGIC;
    postage_stream_TKEEP : IN STD_LOGIC_VECTOR (23 downto 0);
    postage_stream_TSTRB : IN STD_LOGIC_VECTOR (23 downto 0);
    postage_stream_TUSER : IN STD_LOGIC_VECTOR (12 downto 0);
    postage_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    overflow : OUT STD_LOGIC;
    overflow_ap_vld : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of postage_filter_w_interconn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "postage_filter_w_interconn_postage_filter_w_interconn,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.671570,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=4170,HLS_SYN_LUT=3141,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv41_100000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv41_200000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_const_lv41_300000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000001100000000000000000000000000000000";
    constant ap_const_lv41_400000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_const_lv41_500000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000010100000000000000000000000000000000";
    constant ap_const_lv41_600000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000011000000000000000000000000000000000";
    constant ap_const_lv41_700000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000011100000000000000000000000000000000";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal monitor_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal packet_in_flight : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal sending_i : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal trunc_ln164_1_reg_2571 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln164_1_reg_2571_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal trunc_ln164_1_reg_2571_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal group_V_fu_639_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal group_V_reg_2180 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal regslice_both_out_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trigger_V_reg_2192 : STD_LOGIC_VECTOR (3 downto 0);
    signal trigger_V_reg_2192_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal x_reg_2204 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_2204_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_reg_2216_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_2228 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_2228_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_3_reg_2240 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_3_reg_2240_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_V_fu_693_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_reg_2252 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_reg_2252_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_reg_2258 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_1_fu_707_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_1_reg_2263 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_1_reg_2263_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_1_reg_2269 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_2_fu_721_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_2_reg_2274 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_2_reg_2274_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_2_reg_2280 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_3_fu_735_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_3_reg_2285 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_3_reg_2285_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_3_reg_2291 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_4_fu_749_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_4_reg_2296 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_4_reg_2296_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_4_reg_2302 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_5_fu_763_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_5_reg_2307 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_5_reg_2307_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_5_reg_2313 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_6_fu_777_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_6_reg_2318 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_6_reg_2318_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_6_reg_2324 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_7_fu_791_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_7_reg_2329 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_7_reg_2329_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_7_reg_2335 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1065_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_2340 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_2340_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_2340_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_reg_2345 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_reg_2345_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_reg_2345_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_reg_2350 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_reg_2350_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_reg_2350_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_reg_2350_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_2355 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_2355_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_2355_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_2355_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_2355_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_2360 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_2360_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_2360_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_2360_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_2360_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2365 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2365_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2365_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2365_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2365_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2365_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2370_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2375_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_reg_2380 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_reg_2385 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_reg_2390 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_reg_2390_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_1_reg_2397 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_1_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_1_reg_2403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_1_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_1_reg_2408 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_1_reg_2408_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_2_reg_2415 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_2_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_2_reg_2421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_2_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_2_reg_2426 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_2_reg_2426_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_2_reg_2426_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_3_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_3_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_3_reg_2439 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_3_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_3_reg_2444 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_3_reg_2444_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_3_reg_2444_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_3_reg_2444_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_4_reg_2451 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_4_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_4_reg_2457 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_4_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_4_reg_2462 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_4_reg_2462_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_4_reg_2462_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_4_reg_2462_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_5_reg_2469 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_5_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_5_reg_2475 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_5_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_5_reg_2480 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_5_reg_2480_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_5_reg_2480_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_5_reg_2480_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_5_reg_2480_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_6_reg_2487 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_6_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_6_reg_2493 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_reg_2498 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_reg_2498_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_reg_2498_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_reg_2498_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_reg_2498_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_6_reg_2498_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DataOut_7_reg_2505 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_7_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_7_reg_2511 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_fu_1375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_reg_2516 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_reg_2516_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_reg_2516_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_reg_2516_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_reg_2516_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_7_reg_2516_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_reg_2523 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2528 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2533 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2533_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_2538 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_2538_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2543 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2543_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2543_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2548_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2548_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2548_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2553 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2553_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2553_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2553_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2558 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2558_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2558_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2558_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2558_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_2_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln164_1_fu_2057_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln164_1_reg_2571_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal foo_data_reg_2578 : STD_LOGIC_VECTOR (31 downto 0);
    signal foo_data_reg_2578_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal foo_data_reg_2578_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal foo_user_V_reg_2583 : STD_LOGIC_VECTOR (2 downto 0);
    signal foo_user_V_reg_2583_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal foo_user_V_reg_2583_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal foo_last_fu_2091_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal foo_last_reg_2588 : STD_LOGIC_VECTOR (0 downto 0);
    signal foo_last_reg_2588_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal foo_last_reg_2588_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_6_fu_2128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_6_reg_2593 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_8_fu_2139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_12_fu_2162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_12_reg_2603 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_phi_mux_p_overflow_1_phi_fu_504_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_p_overflow_1_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_overflow_1_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_overflow_1_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_p_overflow_1_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_overflow_1_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_empty_46_phi_fu_518_p16 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_28_fu_2007_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_46_reg_515 : STD_LOGIC_VECTOR (72 downto 0);
    signal trunc_ln164_fu_1757_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_fu_1970_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_35_fu_1933_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_37_fu_1896_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_39_fu_1859_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_41_fu_1822_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_43_fu_1785_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_22_fu_2044_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal ap_phi_reg_pp0_iter0_p_overflow_3_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_overflow_3_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_p_overflow_3_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_overflow_3_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_p_overflow_3_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_p_overflow_3_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_overflow_5_phi_fu_552_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_4_fu_2116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_p_overflow_5_reg_549 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_overflow_7_phi_fu_566_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_p_overflow_7_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_p_overflow_9_reg_577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_overflow_11_phi_fu_593_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_10_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_p_overflow_11_reg_590 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_overflow_13_phi_fu_607_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_p_overflow_13_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_overflow_15_phi_fu_620_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_overflow_14_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_p_overflow_15_reg_617 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_fu_859_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_1_fu_931_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal packet_in_flight_load_load_fu_2061_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sending_plus1_fu_1749_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal nexttocap_2_fu_1003_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_3_fu_1075_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_4_fu_1147_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_5_fu_1219_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_6_fu_1291_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_7_fu_1363_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_424_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_430_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_436_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_442_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_448_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_454_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_460_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_466_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read : STD_LOGIC;
    signal DataIn_assign_fu_837_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_1_fu_909_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_2_fu_981_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_3_fu_1053_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_4_fu_1125_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_5_fu_1197_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_6_fu_1269_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_7_fu_1341_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln825_fu_883_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_fu_886_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_fu_892_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_1_fu_955_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_1_fu_958_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_1_fu_964_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_2_fu_1027_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_2_fu_1030_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_2_fu_1036_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_3_fu_1099_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_3_fu_1102_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_3_fu_1108_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_4_fu_1171_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_4_fu_1174_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_4_fu_1180_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_5_fu_1243_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_5_fu_1246_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_5_fu_1252_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_6_fu_1315_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_6_fu_1318_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_6_fu_1324_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_7_fu_1387_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_7_fu_1390_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_7_fu_1396_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_overflow_fu_1422_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1428_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_fu_1436_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_3_fu_1452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1442_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1470_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_1_fu_1478_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_8_fu_1494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1484_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1512_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_2_fu_1520_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_12_fu_1536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1526_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_fu_1554_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_3_fu_1562_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_17_fu_1578_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1568_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_1596_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_4_fu_1604_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_21_fu_1620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1610_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_23_fu_1638_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_5_fu_1646_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_25_fu_1662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1652_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_26_fu_1680_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_6_fu_1688_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_29_fu_1704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1694_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln261_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln288_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln288_fu_1743_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_44_fu_1777_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_42_fu_1769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_cast_fu_1781_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_43_fu_1814_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_40_fu_1806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_cast_fu_1818_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_42_fu_1851_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_38_fu_1843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_cast_fu_1855_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_41_fu_1888_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_36_fu_1880_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_cast_fu_1892_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_40_fu_1925_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_34_fu_1917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_cast_fu_1929_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_39_fu_1962_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_32_fu_1954_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_cast_fu_1966_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_38_fu_1999_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_31_fu_1991_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_cast_fu_2003_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_45_fu_2036_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_30_fu_2028_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_cast_fu_2040_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal xor_ln261_1_fu_2111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln261_2_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln261_3_fu_2134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln261_4_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln261_5_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln261_6_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_postage_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (191 downto 0);
    signal postage_stream_TVALID_int_regslice : STD_LOGIC;
    signal postage_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_postage_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal regslice_both_postage_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal regslice_both_postage_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TUSER_int_regslice : STD_LOGIC_VECTOR (12 downto 0);
    signal regslice_both_postage_stream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_postage_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_588 : BOOLEAN;
    signal ap_condition_1805 : BOOLEAN;
    signal ap_condition_1795 : BOOLEAN;
    signal ap_condition_1785 : BOOLEAN;
    signal ap_condition_1775 : BOOLEAN;
    signal ap_condition_1765 : BOOLEAN;
    signal ap_condition_1755 : BOOLEAN;
    signal ap_condition_1745 : BOOLEAN;
    signal ap_condition_1736 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component postage_filter_w_interconn_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component postage_filter_w_interconn_fifo_w36_d132_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (35 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (35 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component postage_filter_w_interconn_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        monitor_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_7 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component postage_filter_w_interconn_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0,
        d0 => DataIn_assign_fu_837_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0,
        d0 => DataIn_assign_1_fu_909_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0,
        d0 => DataIn_assign_2_fu_981_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0,
        d0 => DataIn_assign_3_fu_1053_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0,
        d0 => DataIn_assign_4_fu_1125_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0,
        d0 => DataIn_assign_5_fu_1197_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0,
        d0 => DataIn_assign_6_fu_1269_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0,
        d0 => DataIn_assign_7_fu_1341_p6,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0);

    control_s_axi_U : component postage_filter_w_interconn_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        monitor_0 => monitor_0,
        monitor_1 => monitor_1,
        monitor_2 => monitor_2,
        monitor_3 => monitor_3,
        monitor_4 => monitor_4,
        monitor_5 => monitor_5,
        monitor_6 => monitor_6,
        monitor_7 => monitor_7);

    mux_42_32_1_1_U1 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_reg_2252_pp0_iter1_reg,
        dout => DataIn_assign_fu_837_p6);

    mux_42_32_1_1_U2 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_1_reg_2263_pp0_iter1_reg,
        dout => DataIn_assign_1_fu_909_p6);

    mux_42_32_1_1_U3 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_2_reg_2274_pp0_iter1_reg,
        dout => DataIn_assign_2_fu_981_p6);

    mux_42_32_1_1_U4 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_3_reg_2285_pp0_iter1_reg,
        dout => DataIn_assign_3_fu_1053_p6);

    mux_42_32_1_1_U5 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_4_reg_2296_pp0_iter1_reg,
        dout => DataIn_assign_4_fu_1125_p6);

    mux_42_32_1_1_U6 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_5_reg_2307_pp0_iter1_reg,
        dout => DataIn_assign_5_fu_1197_p6);

    mux_42_32_1_1_U7 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_6_reg_2318_pp0_iter1_reg,
        dout => DataIn_assign_6_fu_1269_p6);

    mux_42_32_1_1_U8 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2204_pp0_iter1_reg,
        din1 => x_1_reg_2216_pp0_iter1_reg,
        din2 => x_2_reg_2228_pp0_iter1_reg,
        din3 => x_3_reg_2240_pp0_iter1_reg,
        din4 => lane_V_7_reg_2329_pp0_iter1_reg,
        dout => DataIn_assign_7_fu_1341_p6);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read);

    regslice_both_postage_stream_V_data_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 192)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TDATA,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_data_V_U_ack_in,
        data_out => postage_stream_TDATA_int_regslice,
        vld_out => postage_stream_TVALID_int_regslice,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_data_V_U_apdone_blk);

    regslice_both_postage_stream_V_keep_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TKEEP,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_keep_V_U_ack_in,
        data_out => postage_stream_TKEEP_int_regslice,
        vld_out => regslice_both_postage_stream_V_keep_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_keep_V_U_apdone_blk);

    regslice_both_postage_stream_V_strb_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TSTRB,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_strb_V_U_ack_in,
        data_out => postage_stream_TSTRB_int_regslice,
        vld_out => regslice_both_postage_stream_V_strb_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_strb_V_U_apdone_blk);

    regslice_both_postage_stream_V_user_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 13)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TUSER,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_user_V_U_ack_in,
        data_out => postage_stream_TUSER_int_regslice,
        vld_out => regslice_both_postage_stream_V_user_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_user_V_U_apdone_blk);

    regslice_both_postage_stream_V_last_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TLAST,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_last_V_U_ack_in,
        data_out => postage_stream_TLAST_int_regslice,
        vld_out => regslice_both_postage_stream_V_last_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_last_V_U_apdone_blk);

    regslice_both_out_r_V_data_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => foo_data_reg_2578_pp0_iter6_reg,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_V_data_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_data_V_U_apdone_blk);

    regslice_both_out_r_V_keep_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_keep_V_U_ack_in_dummy,
        data_out => out_r_TKEEP,
        vld_out => regslice_both_out_r_V_keep_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_keep_V_U_apdone_blk);

    regslice_both_out_r_V_strb_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_strb_V_U_ack_in_dummy,
        data_out => out_r_TSTRB,
        vld_out => regslice_both_out_r_V_strb_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_strb_V_U_apdone_blk);

    regslice_both_out_r_V_user_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => foo_user_V_reg_2583_pp0_iter6_reg,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_user_V_U_ack_in_dummy,
        data_out => out_r_TUSER,
        vld_out => regslice_both_out_r_V_user_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_user_V_U_apdone_blk);

    regslice_both_out_r_V_last_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => foo_last_reg_2588_pp0_iter6_reg,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_last_V_U_ack_in_dummy,
        data_out => out_r_TLAST,
        vld_out => regslice_both_out_r_V_last_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_p_overflow_1_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_588)) then
                if ((icmp_ln1065_fu_805_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter2_p_overflow_1_reg_500 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_overflow_1_reg_500 <= ap_phi_reg_pp0_iter1_p_overflow_1_reg_500;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_overflow_1_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln255_fu_871_p2 = ap_const_lv1_1) and (icmp_ln1065_reg_2340 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_p_overflow_1_reg_500 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_overflow_1_reg_500 <= ap_phi_reg_pp0_iter2_p_overflow_1_reg_500;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter5_p_overflow_3_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1065_1_reg_2345_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln255_1_reg_2408_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln1065_1_reg_2345_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter5_p_overflow_3_reg_536 <= ap_phi_mux_p_overflow_1_phi_fu_504_p6;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln255_1_reg_2408_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln1065_1_reg_2345_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter5_p_overflow_3_reg_536 <= p_overflow_2_fu_1727_p2;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter5_p_overflow_3_reg_536 <= ap_phi_reg_pp0_iter4_p_overflow_3_reg_536;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_p_overflow_7_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1065_3_reg_2355_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln255_3_reg_2444_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln1065_3_reg_2355_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter6_p_overflow_7_reg_563 <= ap_phi_mux_p_overflow_5_phi_fu_552_p6;
            elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter6_p_overflow_7_reg_563 <= ap_phi_reg_pp0_iter5_p_overflow_7_reg_563;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter7_p_overflow_9_reg_577_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1065_4_reg_2360_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln255_4_reg_2462_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln1065_4_reg_2360_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter7_p_overflow_9_reg_577 <= ap_phi_mux_p_overflow_7_phi_fu_566_p6;
            elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln255_4_reg_2462_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln1065_4_reg_2360_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter7_p_overflow_9_reg_577 <= p_overflow_8_fu_2139_p2;
            elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter7_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter6_p_overflow_9_reg_577;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_p_overflow_13_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln1065_6_reg_2370_pp0_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln255_6_reg_2498_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln1065_6_reg_2370_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter8_p_overflow_13_reg_604 <= ap_phi_mux_p_overflow_11_phi_fu_593_p6;
            elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter8_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter7_p_overflow_13_reg_604;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1805)) then
                if (((p_Result_7_fu_1401_p2 = ap_const_lv1_0) and (icmp_ln255_7_fu_1375_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture <= ap_const_lv8_80;
                elsif ((icmp_ln255_7_fu_1375_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture <= nexttocap_7_fu_1363_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1795)) then
                if (((p_Result_6_fu_1329_p2 = ap_const_lv1_0) and (icmp_ln255_6_fu_1303_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 <= ap_const_lv8_80;
                elsif ((icmp_ln255_6_fu_1303_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 <= nexttocap_6_fu_1291_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1785)) then
                if (((p_Result_5_fu_1257_p2 = ap_const_lv1_0) and (icmp_ln255_5_fu_1231_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 <= ap_const_lv8_80;
                elsif ((icmp_ln255_5_fu_1231_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 <= nexttocap_5_fu_1219_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1775)) then
                if (((p_Result_4_fu_1185_p2 = ap_const_lv1_0) and (icmp_ln255_4_fu_1159_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 <= ap_const_lv8_80;
                elsif ((icmp_ln255_4_fu_1159_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 <= nexttocap_4_fu_1147_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1765)) then
                if (((p_Result_3_fu_1113_p2 = ap_const_lv1_0) and (icmp_ln255_3_fu_1087_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 <= ap_const_lv8_80;
                elsif ((icmp_ln255_3_fu_1087_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 <= nexttocap_3_fu_1075_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1755)) then
                if (((p_Result_2_fu_1041_p2 = ap_const_lv1_0) and (icmp_ln255_2_fu_1015_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 <= ap_const_lv8_80;
                elsif ((icmp_ln255_2_fu_1015_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 <= nexttocap_2_fu_1003_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1745)) then
                if (((p_Result_1_fu_969_p2 = ap_const_lv1_0) and (icmp_ln255_1_fu_943_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 <= ap_const_lv8_80;
                elsif ((icmp_ln255_1_fu_943_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 <= nexttocap_1_fu_931_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1736)) then
                if (((p_Result_s_fu_897_p2 = ap_const_lv1_0) and (icmp_ln255_fu_871_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 <= ap_const_lv8_80;
                elsif ((icmp_ln255_fu_871_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 <= nexttocap_fu_859_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                DataOut_1_reg_2397 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0;
                DataOut_2_reg_2415 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0;
                DataOut_3_reg_2433 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0;
                DataOut_4_reg_2451 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0;
                DataOut_5_reg_2469 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0;
                DataOut_6_reg_2487 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0;
                DataOut_7_reg_2505 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0;
                DataOut_reg_2380 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0;
                foo_data_reg_2578_pp0_iter5_reg <= foo_data_reg_2578;
                foo_data_reg_2578_pp0_iter6_reg <= foo_data_reg_2578_pp0_iter5_reg;
                foo_last_reg_2588_pp0_iter5_reg <= foo_last_reg_2588;
                foo_last_reg_2588_pp0_iter6_reg <= foo_last_reg_2588_pp0_iter5_reg;
                foo_user_V_reg_2583_pp0_iter5_reg <= foo_user_V_reg_2583;
                foo_user_V_reg_2583_pp0_iter6_reg <= foo_user_V_reg_2583_pp0_iter5_reg;
                icmp_ln1065_1_reg_2345_pp0_iter2_reg <= icmp_ln1065_1_reg_2345;
                icmp_ln1065_1_reg_2345_pp0_iter3_reg <= icmp_ln1065_1_reg_2345_pp0_iter2_reg;
                icmp_ln1065_2_reg_2350_pp0_iter2_reg <= icmp_ln1065_2_reg_2350;
                icmp_ln1065_2_reg_2350_pp0_iter3_reg <= icmp_ln1065_2_reg_2350_pp0_iter2_reg;
                icmp_ln1065_2_reg_2350_pp0_iter4_reg <= icmp_ln1065_2_reg_2350_pp0_iter3_reg;
                icmp_ln1065_3_reg_2355_pp0_iter2_reg <= icmp_ln1065_3_reg_2355;
                icmp_ln1065_3_reg_2355_pp0_iter3_reg <= icmp_ln1065_3_reg_2355_pp0_iter2_reg;
                icmp_ln1065_3_reg_2355_pp0_iter4_reg <= icmp_ln1065_3_reg_2355_pp0_iter3_reg;
                icmp_ln1065_3_reg_2355_pp0_iter5_reg <= icmp_ln1065_3_reg_2355_pp0_iter4_reg;
                icmp_ln1065_4_reg_2360_pp0_iter2_reg <= icmp_ln1065_4_reg_2360;
                icmp_ln1065_4_reg_2360_pp0_iter3_reg <= icmp_ln1065_4_reg_2360_pp0_iter2_reg;
                icmp_ln1065_4_reg_2360_pp0_iter4_reg <= icmp_ln1065_4_reg_2360_pp0_iter3_reg;
                icmp_ln1065_4_reg_2360_pp0_iter5_reg <= icmp_ln1065_4_reg_2360_pp0_iter4_reg;
                icmp_ln1065_5_reg_2365_pp0_iter2_reg <= icmp_ln1065_5_reg_2365;
                icmp_ln1065_5_reg_2365_pp0_iter3_reg <= icmp_ln1065_5_reg_2365_pp0_iter2_reg;
                icmp_ln1065_5_reg_2365_pp0_iter4_reg <= icmp_ln1065_5_reg_2365_pp0_iter3_reg;
                icmp_ln1065_5_reg_2365_pp0_iter5_reg <= icmp_ln1065_5_reg_2365_pp0_iter4_reg;
                icmp_ln1065_5_reg_2365_pp0_iter6_reg <= icmp_ln1065_5_reg_2365_pp0_iter5_reg;
                icmp_ln1065_6_reg_2370_pp0_iter2_reg <= icmp_ln1065_6_reg_2370;
                icmp_ln1065_6_reg_2370_pp0_iter3_reg <= icmp_ln1065_6_reg_2370_pp0_iter2_reg;
                icmp_ln1065_6_reg_2370_pp0_iter4_reg <= icmp_ln1065_6_reg_2370_pp0_iter3_reg;
                icmp_ln1065_6_reg_2370_pp0_iter5_reg <= icmp_ln1065_6_reg_2370_pp0_iter4_reg;
                icmp_ln1065_6_reg_2370_pp0_iter6_reg <= icmp_ln1065_6_reg_2370_pp0_iter5_reg;
                icmp_ln1065_6_reg_2370_pp0_iter7_reg <= icmp_ln1065_6_reg_2370_pp0_iter6_reg;
                icmp_ln1065_7_reg_2375_pp0_iter2_reg <= icmp_ln1065_7_reg_2375;
                icmp_ln1065_7_reg_2375_pp0_iter3_reg <= icmp_ln1065_7_reg_2375_pp0_iter2_reg;
                icmp_ln1065_7_reg_2375_pp0_iter4_reg <= icmp_ln1065_7_reg_2375_pp0_iter3_reg;
                icmp_ln1065_7_reg_2375_pp0_iter5_reg <= icmp_ln1065_7_reg_2375_pp0_iter4_reg;
                icmp_ln1065_7_reg_2375_pp0_iter6_reg <= icmp_ln1065_7_reg_2375_pp0_iter5_reg;
                icmp_ln1065_7_reg_2375_pp0_iter7_reg <= icmp_ln1065_7_reg_2375_pp0_iter6_reg;
                icmp_ln1065_reg_2340_pp0_iter2_reg <= icmp_ln1065_reg_2340;
                icmp_ln1065_reg_2340_pp0_iter3_reg <= icmp_ln1065_reg_2340_pp0_iter2_reg;
                icmp_ln255_1_reg_2408_pp0_iter3_reg <= icmp_ln255_1_reg_2408;
                icmp_ln255_2_reg_2426_pp0_iter3_reg <= icmp_ln255_2_reg_2426;
                icmp_ln255_2_reg_2426_pp0_iter4_reg <= icmp_ln255_2_reg_2426_pp0_iter3_reg;
                icmp_ln255_3_reg_2444_pp0_iter3_reg <= icmp_ln255_3_reg_2444;
                icmp_ln255_3_reg_2444_pp0_iter4_reg <= icmp_ln255_3_reg_2444_pp0_iter3_reg;
                icmp_ln255_3_reg_2444_pp0_iter5_reg <= icmp_ln255_3_reg_2444_pp0_iter4_reg;
                icmp_ln255_4_reg_2462_pp0_iter3_reg <= icmp_ln255_4_reg_2462;
                icmp_ln255_4_reg_2462_pp0_iter4_reg <= icmp_ln255_4_reg_2462_pp0_iter3_reg;
                icmp_ln255_4_reg_2462_pp0_iter5_reg <= icmp_ln255_4_reg_2462_pp0_iter4_reg;
                icmp_ln255_5_reg_2480_pp0_iter3_reg <= icmp_ln255_5_reg_2480;
                icmp_ln255_5_reg_2480_pp0_iter4_reg <= icmp_ln255_5_reg_2480_pp0_iter3_reg;
                icmp_ln255_5_reg_2480_pp0_iter5_reg <= icmp_ln255_5_reg_2480_pp0_iter4_reg;
                icmp_ln255_5_reg_2480_pp0_iter6_reg <= icmp_ln255_5_reg_2480_pp0_iter5_reg;
                icmp_ln255_6_reg_2498_pp0_iter3_reg <= icmp_ln255_6_reg_2498;
                icmp_ln255_6_reg_2498_pp0_iter4_reg <= icmp_ln255_6_reg_2498_pp0_iter3_reg;
                icmp_ln255_6_reg_2498_pp0_iter5_reg <= icmp_ln255_6_reg_2498_pp0_iter4_reg;
                icmp_ln255_6_reg_2498_pp0_iter6_reg <= icmp_ln255_6_reg_2498_pp0_iter5_reg;
                icmp_ln255_6_reg_2498_pp0_iter7_reg <= icmp_ln255_6_reg_2498_pp0_iter6_reg;
                icmp_ln255_7_reg_2516_pp0_iter3_reg <= icmp_ln255_7_reg_2516;
                icmp_ln255_7_reg_2516_pp0_iter4_reg <= icmp_ln255_7_reg_2516_pp0_iter3_reg;
                icmp_ln255_7_reg_2516_pp0_iter5_reg <= icmp_ln255_7_reg_2516_pp0_iter4_reg;
                icmp_ln255_7_reg_2516_pp0_iter6_reg <= icmp_ln255_7_reg_2516_pp0_iter5_reg;
                icmp_ln255_7_reg_2516_pp0_iter7_reg <= icmp_ln255_7_reg_2516_pp0_iter6_reg;
                icmp_ln255_reg_2390_pp0_iter3_reg <= icmp_ln255_reg_2390;
                tmp_10_reg_2543_pp0_iter4_reg <= tmp_10_reg_2543;
                tmp_10_reg_2543_pp0_iter5_reg <= tmp_10_reg_2543_pp0_iter4_reg;
                tmp_13_reg_2548_pp0_iter4_reg <= tmp_13_reg_2548;
                tmp_13_reg_2548_pp0_iter5_reg <= tmp_13_reg_2548_pp0_iter4_reg;
                tmp_13_reg_2548_pp0_iter6_reg <= tmp_13_reg_2548_pp0_iter5_reg;
                tmp_16_reg_2553_pp0_iter4_reg <= tmp_16_reg_2553;
                tmp_16_reg_2553_pp0_iter5_reg <= tmp_16_reg_2553_pp0_iter4_reg;
                tmp_16_reg_2553_pp0_iter6_reg <= tmp_16_reg_2553_pp0_iter5_reg;
                tmp_19_reg_2558_pp0_iter4_reg <= tmp_19_reg_2558;
                tmp_19_reg_2558_pp0_iter5_reg <= tmp_19_reg_2558_pp0_iter4_reg;
                tmp_19_reg_2558_pp0_iter6_reg <= tmp_19_reg_2558_pp0_iter5_reg;
                tmp_19_reg_2558_pp0_iter7_reg <= tmp_19_reg_2558_pp0_iter6_reg;
                tmp_4_reg_2533_pp0_iter4_reg <= tmp_4_reg_2533;
                tmp_last_1_reg_2403 <= tmp_last_1_fu_937_p2;
                tmp_last_2_reg_2421 <= tmp_last_2_fu_1009_p2;
                tmp_last_3_reg_2439 <= tmp_last_3_fu_1081_p2;
                tmp_last_4_reg_2457 <= tmp_last_4_fu_1153_p2;
                tmp_last_5_reg_2475 <= tmp_last_5_fu_1225_p2;
                tmp_last_6_reg_2493 <= tmp_last_6_fu_1297_p2;
                tmp_last_7_reg_2511 <= tmp_last_7_fu_1369_p2;
                tmp_last_reg_2385 <= tmp_last_fu_865_p2;
                tmp_s_reg_2538_pp0_iter4_reg <= tmp_s_reg_2538;
                trunc_ln164_1_reg_2571 <= trunc_ln164_1_fu_2057_p1;
                trunc_ln164_1_reg_2571_pp0_iter5_reg <= trunc_ln164_1_reg_2571;
                trunc_ln164_1_reg_2571_pp0_iter6_reg <= trunc_ln164_1_reg_2571_pp0_iter5_reg;
                trunc_ln164_1_reg_2571_pp0_iter7_reg <= trunc_ln164_1_reg_2571_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter0_p_overflow_13_reg_604;
                ap_phi_reg_pp0_iter1_p_overflow_1_reg_500 <= ap_phi_reg_pp0_iter0_p_overflow_1_reg_500;
                ap_phi_reg_pp0_iter1_p_overflow_3_reg_536 <= ap_phi_reg_pp0_iter0_p_overflow_3_reg_536;
                ap_phi_reg_pp0_iter1_p_overflow_7_reg_563 <= ap_phi_reg_pp0_iter0_p_overflow_7_reg_563;
                ap_phi_reg_pp0_iter1_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter0_p_overflow_9_reg_577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter1_p_overflow_13_reg_604;
                ap_phi_reg_pp0_iter2_p_overflow_3_reg_536 <= ap_phi_reg_pp0_iter1_p_overflow_3_reg_536;
                ap_phi_reg_pp0_iter2_p_overflow_7_reg_563 <= ap_phi_reg_pp0_iter1_p_overflow_7_reg_563;
                ap_phi_reg_pp0_iter2_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter1_p_overflow_9_reg_577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter2_p_overflow_13_reg_604;
                ap_phi_reg_pp0_iter3_p_overflow_3_reg_536 <= ap_phi_reg_pp0_iter2_p_overflow_3_reg_536;
                ap_phi_reg_pp0_iter3_p_overflow_7_reg_563 <= ap_phi_reg_pp0_iter2_p_overflow_7_reg_563;
                ap_phi_reg_pp0_iter3_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter2_p_overflow_9_reg_577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter3_p_overflow_13_reg_604;
                ap_phi_reg_pp0_iter4_p_overflow_1_reg_500 <= ap_phi_reg_pp0_iter3_p_overflow_1_reg_500;
                ap_phi_reg_pp0_iter4_p_overflow_3_reg_536 <= ap_phi_reg_pp0_iter3_p_overflow_3_reg_536;
                ap_phi_reg_pp0_iter4_p_overflow_7_reg_563 <= ap_phi_reg_pp0_iter3_p_overflow_7_reg_563;
                ap_phi_reg_pp0_iter4_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter3_p_overflow_9_reg_577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter4_p_overflow_13_reg_604;
                ap_phi_reg_pp0_iter5_p_overflow_7_reg_563 <= ap_phi_reg_pp0_iter4_p_overflow_7_reg_563;
                ap_phi_reg_pp0_iter5_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter4_p_overflow_9_reg_577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter5_p_overflow_13_reg_604;
                ap_phi_reg_pp0_iter6_p_overflow_9_reg_577 <= ap_phi_reg_pp0_iter5_p_overflow_9_reg_577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_p_overflow_13_reg_604 <= ap_phi_reg_pp0_iter6_p_overflow_13_reg_604;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln164_1_fu_2057_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                foo_data_reg_2578 <= ap_phi_mux_empty_46_phi_fu_518_p16(63 downto 32);
                foo_last_reg_2588 <= ap_phi_mux_empty_46_phi_fu_518_p16(72 downto 72);
                foo_user_V_reg_2583 <= ap_phi_mux_empty_46_phi_fu_518_p16(66 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gid_V_1_reg_2269 <= monitor_1(10 downto 2);
                gid_V_2_reg_2280 <= monitor_2(10 downto 2);
                gid_V_3_reg_2291 <= monitor_3(10 downto 2);
                gid_V_4_reg_2302 <= monitor_4(10 downto 2);
                gid_V_5_reg_2313 <= monitor_5(10 downto 2);
                gid_V_6_reg_2324 <= monitor_6(10 downto 2);
                gid_V_7_reg_2335 <= monitor_7(10 downto 2);
                gid_V_reg_2258 <= monitor_0(10 downto 2);
                group_V_reg_2180 <= group_V_fu_639_p1;
                icmp_ln1065_1_reg_2345 <= icmp_ln1065_1_fu_809_p2;
                icmp_ln1065_2_reg_2350 <= icmp_ln1065_2_fu_813_p2;
                icmp_ln1065_3_reg_2355 <= icmp_ln1065_3_fu_817_p2;
                icmp_ln1065_4_reg_2360 <= icmp_ln1065_4_fu_821_p2;
                icmp_ln1065_5_reg_2365 <= icmp_ln1065_5_fu_825_p2;
                icmp_ln1065_6_reg_2370 <= icmp_ln1065_6_fu_829_p2;
                icmp_ln1065_7_reg_2375 <= icmp_ln1065_7_fu_833_p2;
                icmp_ln1065_reg_2340 <= icmp_ln1065_fu_805_p2;
                lane_V_1_reg_2263 <= lane_V_1_fu_707_p1;
                lane_V_1_reg_2263_pp0_iter1_reg <= lane_V_1_reg_2263;
                lane_V_2_reg_2274 <= lane_V_2_fu_721_p1;
                lane_V_2_reg_2274_pp0_iter1_reg <= lane_V_2_reg_2274;
                lane_V_3_reg_2285 <= lane_V_3_fu_735_p1;
                lane_V_3_reg_2285_pp0_iter1_reg <= lane_V_3_reg_2285;
                lane_V_4_reg_2296 <= lane_V_4_fu_749_p1;
                lane_V_4_reg_2296_pp0_iter1_reg <= lane_V_4_reg_2296;
                lane_V_5_reg_2307 <= lane_V_5_fu_763_p1;
                lane_V_5_reg_2307_pp0_iter1_reg <= lane_V_5_reg_2307;
                lane_V_6_reg_2318 <= lane_V_6_fu_777_p1;
                lane_V_6_reg_2318_pp0_iter1_reg <= lane_V_6_reg_2318;
                lane_V_7_reg_2329 <= lane_V_7_fu_791_p1;
                lane_V_7_reg_2329_pp0_iter1_reg <= lane_V_7_reg_2329;
                lane_V_reg_2252 <= lane_V_fu_693_p1;
                lane_V_reg_2252_pp0_iter1_reg <= lane_V_reg_2252;
                trigger_V_reg_2192 <= postage_stream_TUSER_int_regslice(12 downto 9);
                trigger_V_reg_2192_pp0_iter1_reg <= trigger_V_reg_2192;
                x_1_reg_2216 <= postage_stream_TDATA_int_regslice(127 downto 96);
                x_1_reg_2216_pp0_iter1_reg <= x_1_reg_2216;
                x_2_reg_2228 <= postage_stream_TDATA_int_regslice(159 downto 128);
                x_2_reg_2228_pp0_iter1_reg <= x_2_reg_2228;
                x_3_reg_2240 <= postage_stream_TDATA_int_regslice(191 downto 160);
                x_3_reg_2240_pp0_iter1_reg <= x_3_reg_2240;
                x_reg_2204 <= postage_stream_TDATA_int_regslice(95 downto 64);
                x_reg_2204_pp0_iter1_reg <= x_reg_2204;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_1_reg_2345 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_1_reg_2408 <= icmp_ln255_1_fu_943_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_2_reg_2350 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_2_reg_2426 <= icmp_ln255_2_fu_1015_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_3_reg_2355 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_3_reg_2444 <= icmp_ln255_3_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_4_reg_2360 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_4_reg_2462 <= icmp_ln255_4_fu_1159_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_5_reg_2365 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_5_reg_2480 <= icmp_ln255_5_fu_1231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_6_reg_2370 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_6_reg_2498 <= icmp_ln255_6_fu_1303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_7_reg_2375 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_7_reg_2516 <= icmp_ln255_7_fu_1375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_reg_2340 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln255_reg_2390 <= icmp_ln255_fu_871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_6_reg_2498_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln1065_6_reg_2370_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_overflow_12_reg_2603 <= p_overflow_12_fu_2162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_3_reg_2444_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln1065_3_reg_2355_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_overflow_6_reg_2593 <= p_overflow_6_fu_2128_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_reg_2390 = ap_const_lv1_0) and (icmp_ln1065_reg_2340_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_overflow_reg_2523 <= p_overflow_fu_1422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (trunc_ln164_1_fu_2057_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                packet_in_flight <= ap_phi_mux_empty_46_phi_fu_518_p16(72 downto 72);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((packet_in_flight_load_load_fu_2061_p1 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (trunc_ln164_1_fu_2057_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (foo_last_fu_2091_p3 = ap_const_lv1_1) and (trunc_ln164_1_fu_2057_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                sending_i <= sending_plus1_fu_1749_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_4_reg_2462 = ap_const_lv1_0) and (icmp_ln1065_4_reg_2360_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_10_reg_2543 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_5_reg_2480 = ap_const_lv1_0) and (icmp_ln1065_5_reg_2365_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_13_reg_2548 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_6_reg_2498 = ap_const_lv1_0) and (icmp_ln1065_6_reg_2370_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_16_reg_2553 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_7_reg_2516 = ap_const_lv1_0) and (icmp_ln1065_7_reg_2375_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_19_reg_2558 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_2_reg_2426 = ap_const_lv1_0) and (icmp_ln1065_2_reg_2350_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_4_reg_2533 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_1_reg_2408 = ap_const_lv1_0) and (icmp_ln1065_1_reg_2345_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_7_reg_2528 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_3_reg_2444 = ap_const_lv1_0) and (icmp_ln1065_3_reg_2355_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_s_reg_2538 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n, others=>'-');
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln288_fu_1743_p2 <= std_logic_vector(unsigned(sending_i) + unsigned(ap_const_lv8_1));
    and_ln825_1_fu_964_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_1_fu_958_p2);
    and_ln825_2_fu_1036_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_2_fu_1030_p2);
    and_ln825_3_fu_1108_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_3_fu_1102_p2);
    and_ln825_4_fu_1180_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_4_fu_1174_p2);
    and_ln825_5_fu_1252_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_5_fu_1246_p2);
    and_ln825_6_fu_1324_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_6_fu_1318_p2);
    and_ln825_7_fu_1396_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_7_fu_1390_p2);
    and_ln825_fu_892_p2 <= (trigger_V_reg_2192_pp0_iter1_reg and shl_ln825_fu_886_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter7, trunc_ln164_1_reg_2571_pp0_iter6_reg, ap_enable_reg_pp0_iter8, trunc_ln164_1_reg_2571_pp0_iter7_reg, regslice_both_out_r_V_data_V_U_apdone_blk, postage_stream_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((postage_stream_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter7_reg = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter7, trunc_ln164_1_reg_2571_pp0_iter6_reg, ap_enable_reg_pp0_iter8, trunc_ln164_1_reg_2571_pp0_iter7_reg, ap_block_state8_io, regslice_both_out_r_V_data_V_U_apdone_blk, ap_block_state9_io, postage_stream_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((postage_stream_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state9_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter7_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state8_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter7, trunc_ln164_1_reg_2571_pp0_iter6_reg, ap_enable_reg_pp0_iter8, trunc_ln164_1_reg_2571_pp0_iter7_reg, ap_block_state8_io, regslice_both_out_r_V_data_V_U_apdone_blk, ap_block_state9_io, postage_stream_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((postage_stream_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state9_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter7_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state8_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(postage_stream_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (postage_stream_TVALID_int_regslice = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(trunc_ln164_1_reg_2571_pp0_iter6_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state8_io <= ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1));
    end process;


    ap_block_state8_pp0_stage0_iter7_assign_proc : process(trunc_ln164_1_reg_2571_pp0_iter6_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state8_pp0_stage0_iter7 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1));
    end process;


    ap_block_state9_io_assign_proc : process(trunc_ln164_1_reg_2571_pp0_iter7_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state9_io <= ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter7_reg = ap_const_lv1_1));
    end process;


    ap_block_state9_pp0_stage0_iter8_assign_proc : process(trunc_ln164_1_reg_2571_pp0_iter7_reg, regslice_both_out_r_V_data_V_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
                ap_block_state9_pp0_stage0_iter8 <= ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2571_pp0_iter7_reg = ap_const_lv1_1)));
    end process;


    ap_condition_1736_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2340, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1736 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_reg_2340 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1745_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2345, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1745 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_1_reg_2345 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1755_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2350, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1755 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_2_reg_2350 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1765_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2355, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1765 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_3_reg_2355 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1775_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2360, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1775 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_4_reg_2360 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1785_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2365, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1785 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_5_reg_2365 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1795_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2370, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1795 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_6_reg_2370 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1805_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2375, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_1805 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1065_7_reg_2375 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_588_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_588 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_46_phi_fu_518_p16_assign_proc : process(tmp_28_fu_2007_p5, ap_phi_reg_pp0_iter4_empty_46_reg_515, trunc_ln164_fu_1757_p1, tmp_33_fu_1970_p5, tmp_35_fu_1933_p5, tmp_37_fu_1896_p5, tmp_39_fu_1859_p5, tmp_41_fu_1822_p5, tmp_43_fu_1785_p5, tmp_22_fu_2044_p5)
    begin
        if ((trunc_ln164_fu_1757_p1 = ap_const_lv3_7)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_22_fu_2044_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_6)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_43_fu_1785_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_5)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_41_fu_1822_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_4)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_39_fu_1859_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_3)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_37_fu_1896_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_2)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_35_fu_1933_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_1)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_33_fu_1970_p5;
        elsif ((trunc_ln164_fu_1757_p1 = ap_const_lv3_0)) then 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= tmp_28_fu_2007_p5;
        else 
            ap_phi_mux_empty_46_phi_fu_518_p16 <= ap_phi_reg_pp0_iter4_empty_46_reg_515;
        end if; 
    end process;


    ap_phi_mux_p_overflow_11_phi_fu_593_p6_assign_proc : process(icmp_ln1065_5_reg_2365_pp0_iter6_reg, icmp_ln255_5_reg_2480_pp0_iter6_reg, ap_phi_reg_pp0_iter7_p_overflow_9_reg_577, p_overflow_10_fu_2150_p2, ap_phi_reg_pp0_iter7_p_overflow_11_reg_590)
    begin
        if (((icmp_ln1065_5_reg_2365_pp0_iter6_reg = ap_const_lv1_0) or ((icmp_ln255_5_reg_2480_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln1065_5_reg_2365_pp0_iter6_reg = ap_const_lv1_1)))) then 
            ap_phi_mux_p_overflow_11_phi_fu_593_p6 <= ap_phi_reg_pp0_iter7_p_overflow_9_reg_577;
        elsif (((icmp_ln255_5_reg_2480_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln1065_5_reg_2365_pp0_iter6_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_overflow_11_phi_fu_593_p6 <= p_overflow_10_fu_2150_p2;
        else 
            ap_phi_mux_p_overflow_11_phi_fu_593_p6 <= ap_phi_reg_pp0_iter7_p_overflow_11_reg_590;
        end if; 
    end process;


    ap_phi_mux_p_overflow_13_phi_fu_607_p6_assign_proc : process(icmp_ln1065_6_reg_2370_pp0_iter7_reg, icmp_ln255_6_reg_2498_pp0_iter7_reg, p_overflow_12_reg_2603, ap_phi_reg_pp0_iter8_p_overflow_13_reg_604)
    begin
        if (((icmp_ln255_6_reg_2498_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1065_6_reg_2370_pp0_iter7_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_overflow_13_phi_fu_607_p6 <= p_overflow_12_reg_2603;
        else 
            ap_phi_mux_p_overflow_13_phi_fu_607_p6 <= ap_phi_reg_pp0_iter8_p_overflow_13_reg_604;
        end if; 
    end process;


    ap_phi_mux_p_overflow_15_phi_fu_620_p6_assign_proc : process(icmp_ln1065_7_reg_2375_pp0_iter7_reg, icmp_ln255_7_reg_2516_pp0_iter7_reg, ap_phi_mux_p_overflow_13_phi_fu_607_p6, p_overflow_14_fu_2173_p2, ap_phi_reg_pp0_iter8_p_overflow_15_reg_617)
    begin
        if (((icmp_ln1065_7_reg_2375_pp0_iter7_reg = ap_const_lv1_0) or ((icmp_ln255_7_reg_2516_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln1065_7_reg_2375_pp0_iter7_reg = ap_const_lv1_1)))) then 
            ap_phi_mux_p_overflow_15_phi_fu_620_p6 <= ap_phi_mux_p_overflow_13_phi_fu_607_p6;
        elsif (((icmp_ln255_7_reg_2516_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln1065_7_reg_2375_pp0_iter7_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_overflow_15_phi_fu_620_p6 <= p_overflow_14_fu_2173_p2;
        else 
            ap_phi_mux_p_overflow_15_phi_fu_620_p6 <= ap_phi_reg_pp0_iter8_p_overflow_15_reg_617;
        end if; 
    end process;


    ap_phi_mux_p_overflow_1_phi_fu_504_p6_assign_proc : process(icmp_ln1065_reg_2340_pp0_iter3_reg, icmp_ln255_reg_2390_pp0_iter3_reg, p_overflow_reg_2523, ap_phi_reg_pp0_iter4_p_overflow_1_reg_500)
    begin
        if (((icmp_ln255_reg_2390_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln1065_reg_2340_pp0_iter3_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_overflow_1_phi_fu_504_p6 <= p_overflow_reg_2523;
        else 
            ap_phi_mux_p_overflow_1_phi_fu_504_p6 <= ap_phi_reg_pp0_iter4_p_overflow_1_reg_500;
        end if; 
    end process;


    ap_phi_mux_p_overflow_5_phi_fu_552_p6_assign_proc : process(icmp_ln1065_2_reg_2350_pp0_iter4_reg, icmp_ln255_2_reg_2426_pp0_iter4_reg, ap_phi_reg_pp0_iter5_p_overflow_3_reg_536, p_overflow_4_fu_2116_p2, ap_phi_reg_pp0_iter5_p_overflow_5_reg_549)
    begin
        if (((icmp_ln1065_2_reg_2350_pp0_iter4_reg = ap_const_lv1_0) or ((icmp_ln255_2_reg_2426_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln1065_2_reg_2350_pp0_iter4_reg = ap_const_lv1_1)))) then 
            ap_phi_mux_p_overflow_5_phi_fu_552_p6 <= ap_phi_reg_pp0_iter5_p_overflow_3_reg_536;
        elsif (((icmp_ln255_2_reg_2426_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln1065_2_reg_2350_pp0_iter4_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_overflow_5_phi_fu_552_p6 <= p_overflow_4_fu_2116_p2;
        else 
            ap_phi_mux_p_overflow_5_phi_fu_552_p6 <= ap_phi_reg_pp0_iter5_p_overflow_5_reg_549;
        end if; 
    end process;


    ap_phi_mux_p_overflow_7_phi_fu_566_p6_assign_proc : process(icmp_ln1065_3_reg_2355_pp0_iter5_reg, icmp_ln255_3_reg_2444_pp0_iter5_reg, p_overflow_6_reg_2593, ap_phi_reg_pp0_iter6_p_overflow_7_reg_563)
    begin
        if (((icmp_ln255_3_reg_2444_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln1065_3_reg_2355_pp0_iter5_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_overflow_7_phi_fu_566_p6 <= p_overflow_6_reg_2593;
        else 
            ap_phi_mux_p_overflow_7_phi_fu_566_p6 <= ap_phi_reg_pp0_iter6_p_overflow_7_reg_563;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_overflow_13_reg_604 <= "X";
    ap_phi_reg_pp0_iter0_p_overflow_1_reg_500 <= "X";
    ap_phi_reg_pp0_iter0_p_overflow_3_reg_536 <= "X";
    ap_phi_reg_pp0_iter0_p_overflow_7_reg_563 <= "X";
    ap_phi_reg_pp0_iter0_p_overflow_9_reg_577 <= "X";
    ap_phi_reg_pp0_iter4_empty_46_reg_515 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter5_p_overflow_5_reg_549 <= "X";
    ap_phi_reg_pp0_iter7_p_overflow_11_reg_590 <= "X";
    ap_phi_reg_pp0_iter8_p_overflow_15_reg_617 <= "X";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    empty_38_fu_1999_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout(35 - 1 downto 0);
    empty_39_fu_1962_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout(35 - 1 downto 0);
    empty_40_fu_1925_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout(35 - 1 downto 0);
    empty_41_fu_1888_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout(35 - 1 downto 0);
    empty_42_fu_1851_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout(35 - 1 downto 0);
    empty_43_fu_1814_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout(35 - 1 downto 0);
    empty_44_fu_1777_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout(35 - 1 downto 0);
    empty_45_fu_2036_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout(35 - 1 downto 0);
    foo_last_fu_2091_p3 <= ap_phi_mux_empty_46_phi_fu_518_p16(72 downto 72);
    group_V_fu_639_p1 <= postage_stream_TUSER_int_regslice(9 - 1 downto 0);
    icmp_ln1065_1_fu_809_p2 <= "1" when (gid_V_1_reg_2269 = group_V_reg_2180) else "0";
    icmp_ln1065_2_fu_813_p2 <= "1" when (gid_V_2_reg_2280 = group_V_reg_2180) else "0";
    icmp_ln1065_3_fu_817_p2 <= "1" when (gid_V_3_reg_2291 = group_V_reg_2180) else "0";
    icmp_ln1065_4_fu_821_p2 <= "1" when (gid_V_4_reg_2302 = group_V_reg_2180) else "0";
    icmp_ln1065_5_fu_825_p2 <= "1" when (gid_V_5_reg_2313 = group_V_reg_2180) else "0";
    icmp_ln1065_6_fu_829_p2 <= "1" when (gid_V_6_reg_2324 = group_V_reg_2180) else "0";
    icmp_ln1065_7_fu_833_p2 <= "1" when (gid_V_7_reg_2335 = group_V_reg_2180) else "0";
    icmp_ln1065_fu_805_p2 <= "1" when (gid_V_reg_2258 = group_V_reg_2180) else "0";
    icmp_ln255_1_fu_943_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 = ap_const_lv8_0) else "0";
    icmp_ln255_2_fu_1015_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 = ap_const_lv8_0) else "0";
    icmp_ln255_3_fu_1087_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 = ap_const_lv8_0) else "0";
    icmp_ln255_4_fu_1159_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 = ap_const_lv8_0) else "0";
    icmp_ln255_5_fu_1231_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 = ap_const_lv8_0) else "0";
    icmp_ln255_6_fu_1303_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 = ap_const_lv8_0) else "0";
    icmp_ln255_7_fu_1375_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture = ap_const_lv8_0) else "0";
    icmp_ln255_fu_871_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 = ap_const_lv8_0) else "0";
    icmp_ln288_fu_1737_p2 <= "1" when (unsigned(sending_i) > unsigned(ap_const_lv8_6)) else "0";
    lane_V_1_fu_707_p1 <= monitor_1(2 - 1 downto 0);
    lane_V_2_fu_721_p1 <= monitor_2(2 - 1 downto 0);
    lane_V_3_fu_735_p1 <= monitor_3(2 - 1 downto 0);
    lane_V_4_fu_749_p1 <= monitor_4(2 - 1 downto 0);
    lane_V_5_fu_763_p1 <= monitor_5(2 - 1 downto 0);
    lane_V_6_fu_777_p1 <= monitor_6(2 - 1 downto 0);
    lane_V_7_fu_791_p1 <= monitor_7(2 - 1 downto 0);
    lane_V_fu_693_p1 <= monitor_0(2 - 1 downto 0);
    nexttocap_1_fu_931_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6) + unsigned(ap_const_lv8_FF));
    nexttocap_2_fu_1003_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5) + unsigned(ap_const_lv8_FF));
    nexttocap_3_fu_1075_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4) + unsigned(ap_const_lv8_FF));
    nexttocap_4_fu_1147_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3) + unsigned(ap_const_lv8_FF));
    nexttocap_5_fu_1219_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2) + unsigned(ap_const_lv8_FF));
    nexttocap_6_fu_1291_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1) + unsigned(ap_const_lv8_FF));
    nexttocap_7_fu_1363_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture) + unsigned(ap_const_lv8_FF));
    nexttocap_fu_859_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7) + unsigned(ap_const_lv8_FF));
    or_ln185_1_fu_1478_p2 <= (tmp_5_fu_1470_p4 or ap_const_lv41_200000000);
    or_ln185_2_fu_1520_p2 <= (tmp_9_fu_1512_p4 or ap_const_lv41_300000000);
    or_ln185_3_fu_1562_p2 <= (tmp_14_fu_1554_p4 or ap_const_lv41_400000000);
    or_ln185_4_fu_1604_p2 <= (tmp_18_fu_1596_p4 or ap_const_lv41_500000000);
    or_ln185_5_fu_1646_p2 <= (tmp_23_fu_1638_p4 or ap_const_lv41_600000000);
    or_ln185_6_fu_1688_p2 <= (tmp_26_fu_1680_p4 or ap_const_lv41_700000000);
    or_ln185_fu_1436_p2 <= (tmp_fu_1428_p4 or ap_const_lv41_100000000);

    out_r_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, trunc_ln164_1_reg_2571_pp0_iter6_reg, ap_enable_reg_pp0_iter8, trunc_ln164_1_reg_2571_pp0_iter7_reg, out_r_TREADY_int_regslice)
    begin
        if ((((trunc_ln164_1_reg_2571_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_V_data_V_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter7, trunc_ln164_1_reg_2571_pp0_iter6_reg, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln164_1_reg_2571_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    overflow <= ap_phi_mux_p_overflow_15_phi_fu_620_p6(0);

    overflow_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            overflow_ap_vld <= ap_const_logic_1;
        else 
            overflow_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_969_p2 <= "1" when (and_ln825_1_fu_964_p2 = ap_const_lv4_0) else "0";
    p_Result_2_fu_1041_p2 <= "1" when (and_ln825_2_fu_1036_p2 = ap_const_lv4_0) else "0";
    p_Result_3_fu_1113_p2 <= "1" when (and_ln825_3_fu_1108_p2 = ap_const_lv4_0) else "0";
    p_Result_4_fu_1185_p2 <= "1" when (and_ln825_4_fu_1180_p2 = ap_const_lv4_0) else "0";
    p_Result_5_fu_1257_p2 <= "1" when (and_ln825_5_fu_1252_p2 = ap_const_lv4_0) else "0";
    p_Result_6_fu_1329_p2 <= "1" when (and_ln825_6_fu_1324_p2 = ap_const_lv4_0) else "0";
    p_Result_7_fu_1401_p2 <= "1" when (and_ln825_7_fu_1396_p2 = ap_const_lv4_0) else "0";
    p_Result_s_fu_897_p2 <= "1" when (and_ln825_fu_892_p2 = ap_const_lv4_0) else "0";
    p_overflow_10_fu_2150_p2 <= (xor_ln261_4_fu_2145_p2 or ap_phi_reg_pp0_iter7_p_overflow_9_reg_577);
    p_overflow_12_fu_2162_p2 <= (xor_ln261_5_fu_2157_p2 or ap_phi_mux_p_overflow_11_phi_fu_593_p6);
    p_overflow_14_fu_2173_p2 <= (xor_ln261_6_fu_2168_p2 or ap_phi_mux_p_overflow_13_phi_fu_607_p6);
    p_overflow_2_fu_1727_p2 <= (xor_ln261_fu_1722_p2 or ap_phi_mux_p_overflow_1_phi_fu_504_p6);
    p_overflow_4_fu_2116_p2 <= (xor_ln261_1_fu_2111_p2 or ap_phi_reg_pp0_iter5_p_overflow_3_reg_536);
    p_overflow_6_fu_2128_p2 <= (xor_ln261_2_fu_2123_p2 or ap_phi_mux_p_overflow_5_phi_fu_552_p6);
    p_overflow_8_fu_2139_p2 <= (xor_ln261_3_fu_2134_p2 or ap_phi_mux_p_overflow_7_phi_fu_566_p6);
    p_overflow_fu_1422_p0 <= (0=>postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n, others=>'-');
    p_overflow_fu_1422_p2 <= (p_overflow_fu_1422_p0 xor ap_const_lv1_1);
    packet_in_flight_load_load_fu_2061_p1 <= packet_in_flight;
    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din <= ((tmp_25_fu_1662_p3 & tmp_24_fu_1652_p4) & DataOut_6_reg_2487);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1757_p1 = ap_const_lv3_6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_424_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2370_pp0_iter2_reg, icmp_ln255_6_reg_2498, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_6_reg_2498 = ap_const_lv1_0) and (icmp_ln1065_6_reg_2370_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din <= ((tmp_21_fu_1620_p3 & tmp_20_fu_1610_p4) & DataOut_5_reg_2469);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1757_p1 = ap_const_lv3_5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_430_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2365_pp0_iter2_reg, icmp_ln255_5_reg_2480, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_5_reg_2480 = ap_const_lv1_0) and (icmp_ln1065_5_reg_2365_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din <= ((tmp_17_fu_1578_p3 & tmp_15_fu_1568_p4) & DataOut_4_reg_2451);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1757_p1 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_436_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2360_pp0_iter2_reg, icmp_ln255_4_reg_2462, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_4_reg_2462 = ap_const_lv1_0) and (icmp_ln1065_4_reg_2360_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din <= ((tmp_12_fu_1536_p3 & tmp_11_fu_1526_p4) & DataOut_3_reg_2433);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n)
    begin
        if (((trunc_ln164_fu_1757_p1 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n = ap_const_logic_1))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_442_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2355_pp0_iter2_reg, icmp_ln255_3_reg_2444, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_3_reg_2444 = ap_const_lv1_0) and (icmp_ln1065_3_reg_2355_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din <= ((tmp_8_fu_1494_p3 & tmp_6_fu_1484_p4) & DataOut_2_reg_2415);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n)
    begin
        if (((trunc_ln164_fu_1757_p1 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n = ap_const_logic_1))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_448_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2350_pp0_iter2_reg, icmp_ln255_2_reg_2426, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_2_reg_2426 = ap_const_lv1_0) and (icmp_ln1065_2_reg_2350_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din <= ((tmp_3_fu_1452_p3 & tmp_1_fu_1442_p4) & DataOut_1_reg_2397);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n)
    begin
        if (((trunc_ln164_fu_1757_p1 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n = ap_const_logic_1))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_454_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2345_pp0_iter2_reg, icmp_ln255_1_reg_2408, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_1_reg_2408 = ap_const_lv1_0) and (icmp_ln1065_1_reg_2345_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din <= ((tmp_last_reg_2385 & ap_const_lv3_0) & DataOut_reg_2380);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n)
    begin
        if (((trunc_ln164_fu_1757_p1 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n = ap_const_logic_1))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_460_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2340_pp0_iter2_reg, icmp_ln255_reg_2390, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_reg_2390 = ap_const_lv1_0) and (icmp_ln1065_reg_2340_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din <= ((tmp_29_fu_1704_p3 & tmp_27_fu_1694_p4) & DataOut_7_reg_2505);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4, trunc_ln164_fu_1757_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n)
    begin
        if (((trunc_ln164_fu_1757_p1 = ap_const_lv3_7) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n = ap_const_logic_1))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_466_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2375_pp0_iter2_reg, icmp_ln255_7_reg_2516, ap_enable_reg_pp0_iter3, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln255_7_reg_2516 = ap_const_lv1_0) and (icmp_ln1065_7_reg_2375_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2345, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 <= icmp_ln1065_1_reg_2345(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2345, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 <= icmp_ln1065_1_reg_2345(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2375, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 <= icmp_ln1065_7_reg_2375(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2375, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 <= icmp_ln1065_7_reg_2375(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2370, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 <= icmp_ln1065_6_reg_2370(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2370, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 <= icmp_ln1065_6_reg_2370(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2365, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 <= icmp_ln1065_5_reg_2365(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2365, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 <= icmp_ln1065_5_reg_2365(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2360, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 <= icmp_ln1065_4_reg_2360(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2360, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 <= icmp_ln1065_4_reg_2360(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2355, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 <= icmp_ln1065_3_reg_2355(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2355, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 <= icmp_ln1065_3_reg_2355(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2340, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 <= icmp_ln1065_reg_2340(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2340, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 <= icmp_ln1065_reg_2340(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2350, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 <= icmp_ln1065_2_reg_2350(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2350, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 <= icmp_ln1065_2_reg_2350(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, postage_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            postage_stream_TDATA_blk_n <= postage_stream_TVALID_int_regslice;
        else 
            postage_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    postage_stream_TREADY <= regslice_both_postage_stream_V_data_V_U_ack_in;

    postage_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            postage_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            postage_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sending_plus1_fu_1749_p3 <= 
        ap_const_lv8_0 when (icmp_ln288_fu_1737_p2(0) = '1') else 
        add_ln288_fu_1743_p2;
    shl_ln825_1_fu_958_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_1_fu_955_p1(4-1 downto 0)))));
    shl_ln825_2_fu_1030_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_2_fu_1027_p1(4-1 downto 0)))));
    shl_ln825_3_fu_1102_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_3_fu_1099_p1(4-1 downto 0)))));
    shl_ln825_4_fu_1174_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_4_fu_1171_p1(4-1 downto 0)))));
    shl_ln825_5_fu_1246_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_5_fu_1243_p1(4-1 downto 0)))));
    shl_ln825_6_fu_1318_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_6_fu_1315_p1(4-1 downto 0)))));
    shl_ln825_7_fu_1390_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_7_fu_1387_p1(4-1 downto 0)))));
    shl_ln825_fu_886_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_fu_883_p1(4-1 downto 0)))));
    tmp_11_fu_1526_p4 <= or_ln185_2_fu_1520_p2(34 downto 32);
    tmp_12_fu_1536_p3 <= or_ln185_2_fu_1520_p2(40 downto 40);
    tmp_14_fu_1554_p4 <= ((tmp_last_4_reg_2457 & ap_const_lv8_0) & DataOut_4_reg_2451);
    tmp_15_fu_1568_p4 <= or_ln185_3_fu_1562_p2(34 downto 32);
    tmp_17_fu_1578_p3 <= or_ln185_3_fu_1562_p2(40 downto 40);
    tmp_18_fu_1596_p4 <= ((tmp_last_5_reg_2475 & ap_const_lv8_0) & DataOut_5_reg_2469);
    tmp_1_fu_1442_p4 <= or_ln185_fu_1436_p2(34 downto 32);
    tmp_20_fu_1610_p4 <= or_ln185_4_fu_1604_p2(34 downto 32);
    tmp_21_fu_1620_p3 <= or_ln185_4_fu_1604_p2(40 downto 40);
    tmp_22_fu_2044_p5 <= (((tmp_30_fu_2028_p3 & tmp_30_cast_fu_2040_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_466_p2_0);
    tmp_23_fu_1638_p4 <= ((tmp_last_6_reg_2493 & ap_const_lv8_0) & DataOut_6_reg_2487);
    tmp_24_fu_1652_p4 <= or_ln185_5_fu_1646_p2(34 downto 32);
    tmp_25_fu_1662_p3 <= or_ln185_5_fu_1646_p2(40 downto 40);
    tmp_26_fu_1680_p4 <= ((tmp_last_7_reg_2511 & ap_const_lv8_0) & DataOut_7_reg_2505);
    tmp_27_fu_1694_p4 <= or_ln185_6_fu_1688_p2(34 downto 32);
    tmp_28_fu_2007_p5 <= (((tmp_31_fu_1991_p3 & tmp_31_cast_fu_2003_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_460_p2_0);
    tmp_29_fu_1704_p3 <= or_ln185_6_fu_1688_p2(40 downto 40);
    tmp_30_cast_fu_2040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_45_fu_2036_p1),40));
    tmp_30_fu_2028_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout(35 downto 35);
    tmp_31_cast_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_38_fu_1999_p1),40));
    tmp_31_fu_1991_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout(35 downto 35);
    tmp_32_cast_fu_1966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_39_fu_1962_p1),40));
    tmp_32_fu_1954_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout(35 downto 35);
    tmp_33_fu_1970_p5 <= (((tmp_32_fu_1954_p3 & tmp_32_cast_fu_1966_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_454_p2_0);
    tmp_34_cast_fu_1929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_40_fu_1925_p1),40));
    tmp_34_fu_1917_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout(35 downto 35);
    tmp_35_fu_1933_p5 <= (((tmp_34_fu_1917_p3 & tmp_34_cast_fu_1929_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_448_p2_0);
    tmp_36_cast_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_41_fu_1888_p1),40));
    tmp_36_fu_1880_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout(35 downto 35);
    tmp_37_fu_1896_p5 <= (((tmp_36_fu_1880_p3 & tmp_36_cast_fu_1892_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_442_p2_0);
    tmp_38_cast_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_42_fu_1851_p1),40));
    tmp_38_fu_1843_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout(35 downto 35);
    tmp_39_fu_1859_p5 <= (((tmp_38_fu_1843_p3 & tmp_38_cast_fu_1855_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_436_p2_0);
    tmp_3_fu_1452_p3 <= or_ln185_fu_1436_p2(40 downto 40);
    tmp_40_cast_fu_1818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_43_fu_1814_p1),40));
    tmp_40_fu_1806_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout(35 downto 35);
    tmp_41_fu_1822_p5 <= (((tmp_40_fu_1806_p3 & tmp_40_cast_fu_1818_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_430_p2_0);
    tmp_42_cast_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_44_fu_1777_p1),40));
    tmp_42_fu_1769_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout(35 downto 35);
    tmp_43_fu_1785_p5 <= (((tmp_42_fu_1769_p3 & tmp_42_cast_fu_1781_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_424_p2_0);
    tmp_5_fu_1470_p4 <= ((tmp_last_2_reg_2421 & ap_const_lv8_0) & DataOut_2_reg_2415);
    tmp_6_fu_1484_p4 <= or_ln185_1_fu_1478_p2(34 downto 32);
    tmp_8_fu_1494_p3 <= or_ln185_1_fu_1478_p2(40 downto 40);
    tmp_9_fu_1512_p4 <= ((tmp_last_3_reg_2439 & ap_const_lv8_0) & DataOut_3_reg_2433);
    tmp_fu_1428_p4 <= ((tmp_last_1_reg_2403 & ap_const_lv8_0) & DataOut_1_reg_2397);
    tmp_last_1_fu_937_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 = ap_const_lv8_1) else "0";
    tmp_last_2_fu_1009_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 = ap_const_lv8_1) else "0";
    tmp_last_3_fu_1081_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 = ap_const_lv8_1) else "0";
    tmp_last_4_fu_1153_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 = ap_const_lv8_1) else "0";
    tmp_last_5_fu_1225_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 = ap_const_lv8_1) else "0";
    tmp_last_6_fu_1297_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 = ap_const_lv8_1) else "0";
    tmp_last_7_fu_1369_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture = ap_const_lv8_1) else "0";
    tmp_last_fu_865_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 = ap_const_lv8_1) else "0";
    trunc_ln164_1_fu_2057_p1 <= ap_phi_mux_empty_46_phi_fu_518_p16(1 - 1 downto 0);
    trunc_ln164_fu_1757_p1 <= sending_i(3 - 1 downto 0);
    xor_ln261_1_fu_2111_p2 <= (tmp_4_reg_2533_pp0_iter4_reg xor ap_const_lv1_1);
    xor_ln261_2_fu_2123_p2 <= (tmp_s_reg_2538_pp0_iter4_reg xor ap_const_lv1_1);
    xor_ln261_3_fu_2134_p2 <= (tmp_10_reg_2543_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln261_4_fu_2145_p2 <= (tmp_13_reg_2548_pp0_iter6_reg xor ap_const_lv1_1);
    xor_ln261_5_fu_2157_p2 <= (tmp_16_reg_2553_pp0_iter6_reg xor ap_const_lv1_1);
    xor_ln261_6_fu_2168_p2 <= (tmp_19_reg_2558_pp0_iter7_reg xor ap_const_lv1_1);
    xor_ln261_fu_1722_p2 <= (tmp_7_reg_2528 xor ap_const_lv1_1);
    zext_ln825_1_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_1_reg_2263_pp0_iter1_reg),4));
    zext_ln825_2_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_2_reg_2274_pp0_iter1_reg),4));
    zext_ln825_3_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_3_reg_2285_pp0_iter1_reg),4));
    zext_ln825_4_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_4_reg_2296_pp0_iter1_reg),4));
    zext_ln825_5_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_5_reg_2307_pp0_iter1_reg),4));
    zext_ln825_6_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_6_reg_2318_pp0_iter1_reg),4));
    zext_ln825_7_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_7_reg_2329_pp0_iter1_reg),4));
    zext_ln825_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_reg_2252_pp0_iter1_reg),4));
end behav;
