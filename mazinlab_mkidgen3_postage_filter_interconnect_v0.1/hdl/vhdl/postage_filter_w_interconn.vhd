-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity postage_filter_w_interconn is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    postage_stream_TDATA : IN STD_LOGIC_VECTOR (191 downto 0);
    postage_stream_TVALID : IN STD_LOGIC;
    postage_stream_TREADY : OUT STD_LOGIC;
    postage_stream_TKEEP : IN STD_LOGIC_VECTOR (23 downto 0);
    postage_stream_TSTRB : IN STD_LOGIC_VECTOR (23 downto 0);
    postage_stream_TUSER : IN STD_LOGIC_VECTOR (12 downto 0);
    postage_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    overflow : OUT STD_LOGIC;
    overflow_ap_vld : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of postage_filter_w_interconn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "postage_filter_w_interconn_postage_filter_w_interconn,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.671570,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=2568,HLS_SYN_LUT=2270,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv41_100000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv41_200000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_const_lv41_300000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000001100000000000000000000000000000000";
    constant ap_const_lv41_400000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_const_lv41_500000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000010100000000000000000000000000000000";
    constant ap_const_lv41_600000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000011000000000000000000000000000000000";
    constant ap_const_lv41_700000000 : STD_LOGIC_VECTOR (40 downto 0) := "00000011100000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal monitor_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal sending_i : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal packet_in_flight : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal trunc_ln164_1_reg_2345 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal trunc_ln164_1_reg_2345_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal group_V_fu_534_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal group_V_reg_2006 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal regslice_both_out_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trigger_V_reg_2018 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_reg_2030 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_reg_2042 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_2054 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_3_reg_2066 : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_V_fu_588_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_reg_2078 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_reg_2084 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_1_fu_602_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_1_reg_2089 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_1_reg_2095 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_2_fu_616_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_2_reg_2100 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_2_reg_2106 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_3_fu_630_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_3_reg_2111 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_3_reg_2117 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_4_fu_644_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_4_reg_2122 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_4_reg_2128 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_5_fu_658_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_5_reg_2133 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_5_reg_2139 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_6_fu_672_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_6_reg_2144 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_6_reg_2150 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_7_fu_686_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_7_reg_2155 : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_7_reg_2161 : STD_LOGIC_VECTOR (8 downto 0);
    signal DataIn_assign_fu_700_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_reg_2166 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_2171 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_reg_2176 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_reg_2181 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_1_fu_767_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_1_reg_2188 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_1_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_reg_2193 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_1_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_1_reg_2198 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_1_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_1_reg_2203 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_2_fu_834_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_2_reg_2210 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_2_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_reg_2215 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_2_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_2_reg_2220 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_2_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_2_reg_2225 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_3_fu_901_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_3_reg_2232 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_3_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_2237 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_3_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_3_reg_2242 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_3_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_3_reg_2247 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_4_fu_968_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_4_reg_2254 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_4_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_2259 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_4_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_4_reg_2264 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_4_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_4_reg_2269 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_5_fu_1035_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_5_reg_2276 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_5_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_2281 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_5_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_5_reg_2286 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_5_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_5_reg_2291 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_6_fu_1102_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_6_reg_2298 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_6_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_2303 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_6_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_6_reg_2308 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_6_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_6_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal DataIn_assign_7_fu_1169_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_7_reg_2320 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_7_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_2325 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_7_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_7_reg_2330 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_7_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_7_reg_2335 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln164_1_fu_1952_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal foo_data_reg_2352 : STD_LOGIC_VECTOR (31 downto 0);
    signal foo_user_V_reg_2357 : STD_LOGIC_VECTOR (2 downto 0);
    signal foo_last_fu_1986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal foo_last_reg_2362 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_empty_56_phi_fu_508_p16 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_20_fu_1902_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_56_reg_505 : STD_LOGIC_VECTOR (72 downto 0);
    signal trunc_ln164_fu_1652_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_1865_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_27_fu_1828_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_29_fu_1791_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_31_fu_1754_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_33_fu_1717_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_35_fu_1680_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_s_fu_1939_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal nexttocap_fu_717_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_1_fu_784_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sending_plus1_fu_1644_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal packet_in_flight_load_load_fu_1956_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_2_fu_851_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_3_fu_918_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_4_fu_985_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_5_fu_1052_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_6_fu_1119_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_7_fu_1186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_428_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_434_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_440_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_446_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_452_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_458_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_464_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_470_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout : STD_LOGIC_VECTOR (35 downto 0);
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n : STD_LOGIC;
    signal postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read : STD_LOGIC;
    signal zext_ln825_fu_741_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_fu_744_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_fu_750_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_1_fu_808_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_1_fu_811_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_1_fu_817_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_2_fu_875_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_2_fu_878_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_2_fu_884_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_3_fu_942_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_3_fu_945_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_3_fu_951_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_4_fu_1009_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_4_fu_1012_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_4_fu_1018_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_5_fu_1076_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_5_fu_1079_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_5_fu_1085_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_6_fu_1143_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_6_fu_1146_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_6_fu_1152_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_7_fu_1210_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_7_fu_1213_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_7_fu_1219_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1262_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_fu_1271_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_2_fu_1287_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1277_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1314_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_1_fu_1323_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_5_fu_1339_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1329_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_1366_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_2_fu_1375_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_8_fu_1391_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1381_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1418_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_3_fu_1427_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_11_fu_1443_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1433_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_1470_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_4_fu_1479_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_14_fu_1495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1485_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1522_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_5_fu_1531_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_17_fu_1547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1537_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_1574_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal or_ln185_6_fu_1583_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_21_fu_1599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1589_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_fu_1622_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln254_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln254_fu_1638_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_54_fu_1672_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_36_fu_1664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_cast_fu_1676_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_53_fu_1709_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_34_fu_1701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_cast_fu_1713_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_52_fu_1746_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_32_fu_1738_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_cast_fu_1750_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_51_fu_1783_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_30_fu_1775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_cast_fu_1787_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_50_fu_1820_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_28_fu_1812_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_cast_fu_1824_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_49_fu_1857_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_26_fu_1849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_cast_fu_1861_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_48_fu_1894_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_24_fu_1886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_cast_fu_1898_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_55_fu_1931_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_23_fu_1923_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_cast_fu_1935_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_postage_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (191 downto 0);
    signal postage_stream_TVALID_int_regslice : STD_LOGIC;
    signal postage_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_postage_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal regslice_both_postage_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal regslice_both_postage_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TUSER_int_regslice : STD_LOGIC_VECTOR (12 downto 0);
    signal regslice_both_postage_stream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_postage_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal postage_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_postage_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_postage_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_r_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_r_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_1456 : BOOLEAN;
    signal ap_condition_1445 : BOOLEAN;
    signal ap_condition_1434 : BOOLEAN;
    signal ap_condition_1423 : BOOLEAN;
    signal ap_condition_1412 : BOOLEAN;
    signal ap_condition_1401 : BOOLEAN;
    signal ap_condition_1390 : BOOLEAN;
    signal ap_condition_1379 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component postage_filter_w_interconn_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component postage_filter_w_interconn_fifo_w36_d132_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (35 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (35 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component postage_filter_w_interconn_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        monitor_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_7 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component postage_filter_w_interconn_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0,
        d0 => DataIn_assign_reg_2166,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0,
        d0 => DataIn_assign_1_reg_2188,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0,
        d0 => DataIn_assign_2_reg_2210,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0,
        d0 => DataIn_assign_3_reg_2232,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0,
        d0 => DataIn_assign_4_reg_2254,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0,
        d0 => DataIn_assign_5_reg_2276,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0,
        d0 => DataIn_assign_6_reg_2298,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_U : component postage_filter_w_interconn_postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_SHIFTbkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv4_8,
        ce0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0,
        we0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0,
        d0 => DataIn_assign_7_reg_2320,
        q0 => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0);

    control_s_axi_U : component postage_filter_w_interconn_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        monitor_0 => monitor_0,
        monitor_1 => monitor_1,
        monitor_2 => monitor_2,
        monitor_3 => monitor_3,
        monitor_4 => monitor_4,
        monitor_5 => monitor_5,
        monitor_6 => monitor_6,
        monitor_7 => monitor_7);

    mux_42_32_1_1_U1 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_reg_2078,
        dout => DataIn_assign_fu_700_p6);

    mux_42_32_1_1_U2 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_1_reg_2089,
        dout => DataIn_assign_1_fu_767_p6);

    mux_42_32_1_1_U3 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_2_reg_2100,
        dout => DataIn_assign_2_fu_834_p6);

    mux_42_32_1_1_U4 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_3_reg_2111,
        dout => DataIn_assign_3_fu_901_p6);

    mux_42_32_1_1_U5 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_4_reg_2122,
        dout => DataIn_assign_4_fu_968_p6);

    mux_42_32_1_1_U6 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_5_reg_2133,
        dout => DataIn_assign_5_fu_1035_p6);

    mux_42_32_1_1_U7 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_6_reg_2144,
        dout => DataIn_assign_6_fu_1102_p6);

    mux_42_32_1_1_U8 : component postage_filter_w_interconn_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_2030,
        din1 => x_1_reg_2042,
        din2 => x_2_reg_2054,
        din3 => x_3_reg_2066,
        din4 => lane_V_7_reg_2155,
        dout => DataIn_assign_7_fu_1169_p6);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_fifo_U : component postage_filter_w_interconn_fifo_w36_d132_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din,
        if_full_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n,
        if_write => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write,
        if_dout => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout,
        if_empty_n => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n,
        if_read => postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read);

    regslice_both_postage_stream_V_data_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 192)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TDATA,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_data_V_U_ack_in,
        data_out => postage_stream_TDATA_int_regslice,
        vld_out => postage_stream_TVALID_int_regslice,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_data_V_U_apdone_blk);

    regslice_both_postage_stream_V_keep_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TKEEP,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_keep_V_U_ack_in,
        data_out => postage_stream_TKEEP_int_regslice,
        vld_out => regslice_both_postage_stream_V_keep_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_keep_V_U_apdone_blk);

    regslice_both_postage_stream_V_strb_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TSTRB,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_strb_V_U_ack_in,
        data_out => postage_stream_TSTRB_int_regslice,
        vld_out => regslice_both_postage_stream_V_strb_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_strb_V_U_apdone_blk);

    regslice_both_postage_stream_V_user_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 13)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TUSER,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_user_V_U_ack_in,
        data_out => postage_stream_TUSER_int_regslice,
        vld_out => regslice_both_postage_stream_V_user_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_user_V_U_apdone_blk);

    regslice_both_postage_stream_V_last_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_stream_TLAST,
        vld_in => postage_stream_TVALID,
        ack_in => regslice_both_postage_stream_V_last_V_U_ack_in,
        data_out => postage_stream_TLAST_int_regslice,
        vld_out => regslice_both_postage_stream_V_last_V_U_vld_out,
        ack_out => postage_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_postage_stream_V_last_V_U_apdone_blk);

    regslice_both_out_r_V_data_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => foo_data_reg_2352,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_V_data_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_data_V_U_apdone_blk);

    regslice_both_out_r_V_keep_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_keep_V_U_ack_in_dummy,
        data_out => out_r_TKEEP,
        vld_out => regslice_both_out_r_V_keep_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_keep_V_U_apdone_blk);

    regslice_both_out_r_V_strb_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_strb_V_U_ack_in_dummy,
        data_out => out_r_TSTRB,
        vld_out => regslice_both_out_r_V_strb_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_strb_V_U_apdone_blk);

    regslice_both_out_r_V_user_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => foo_user_V_reg_2357,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_user_V_U_ack_in_dummy,
        data_out => out_r_TUSER,
        vld_out => regslice_both_out_r_V_user_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_user_V_U_apdone_blk);

    regslice_both_out_r_V_last_V_U : component postage_filter_w_interconn_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => foo_last_reg_2362,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_r_V_last_V_U_ack_in_dummy,
        data_out => out_r_TLAST,
        vld_out => regslice_both_out_r_V_last_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1456)) then
                if (((p_Result_7_fu_1224_p2 = ap_const_lv1_0) and (icmp_ln238_7_fu_1198_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture <= ap_const_lv8_7F;
                elsif ((icmp_ln238_7_fu_1198_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture <= nexttocap_7_fu_1186_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1445)) then
                if (((p_Result_6_fu_1157_p2 = ap_const_lv1_0) and (icmp_ln238_6_fu_1131_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_6_fu_1131_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 <= nexttocap_6_fu_1119_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1434)) then
                if (((p_Result_5_fu_1090_p2 = ap_const_lv1_0) and (icmp_ln238_5_fu_1064_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_5_fu_1064_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 <= nexttocap_5_fu_1052_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1423)) then
                if (((p_Result_4_fu_1023_p2 = ap_const_lv1_0) and (icmp_ln238_4_fu_997_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_4_fu_997_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 <= nexttocap_4_fu_985_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1412)) then
                if (((p_Result_3_fu_956_p2 = ap_const_lv1_0) and (icmp_ln238_3_fu_930_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_3_fu_930_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 <= nexttocap_3_fu_918_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1401)) then
                if (((p_Result_2_fu_889_p2 = ap_const_lv1_0) and (icmp_ln238_2_fu_863_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_2_fu_863_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 <= nexttocap_2_fu_851_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1390)) then
                if (((p_Result_1_fu_822_p2 = ap_const_lv1_0) and (icmp_ln238_1_fu_796_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_1_fu_796_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 <= nexttocap_1_fu_784_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1379)) then
                if (((p_Result_s_fu_755_p2 = ap_const_lv1_0) and (icmp_ln238_fu_729_p2 = ap_const_lv1_1))) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 <= ap_const_lv8_7F;
                elsif ((icmp_ln238_fu_729_p2 = ap_const_lv1_0)) then 
                    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 <= nexttocap_fu_717_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                DataIn_assign_1_reg_2188 <= DataIn_assign_1_fu_767_p6;
                DataIn_assign_2_reg_2210 <= DataIn_assign_2_fu_834_p6;
                DataIn_assign_3_reg_2232 <= DataIn_assign_3_fu_901_p6;
                DataIn_assign_4_reg_2254 <= DataIn_assign_4_fu_968_p6;
                DataIn_assign_5_reg_2276 <= DataIn_assign_5_fu_1035_p6;
                DataIn_assign_6_reg_2298 <= DataIn_assign_6_fu_1102_p6;
                DataIn_assign_7_reg_2320 <= DataIn_assign_7_fu_1169_p6;
                DataIn_assign_reg_2166 <= DataIn_assign_fu_700_p6;
                gid_V_1_reg_2095 <= monitor_1(10 downto 2);
                gid_V_2_reg_2106 <= monitor_2(10 downto 2);
                gid_V_3_reg_2117 <= monitor_3(10 downto 2);
                gid_V_4_reg_2128 <= monitor_4(10 downto 2);
                gid_V_5_reg_2139 <= monitor_5(10 downto 2);
                gid_V_6_reg_2150 <= monitor_6(10 downto 2);
                gid_V_7_reg_2161 <= monitor_7(10 downto 2);
                gid_V_reg_2084 <= monitor_0(10 downto 2);
                group_V_reg_2006 <= group_V_fu_534_p1;
                icmp_ln1065_1_reg_2193 <= icmp_ln1065_1_fu_776_p2;
                icmp_ln1065_2_reg_2215 <= icmp_ln1065_2_fu_843_p2;
                icmp_ln1065_3_reg_2237 <= icmp_ln1065_3_fu_910_p2;
                icmp_ln1065_4_reg_2259 <= icmp_ln1065_4_fu_977_p2;
                icmp_ln1065_5_reg_2281 <= icmp_ln1065_5_fu_1044_p2;
                icmp_ln1065_6_reg_2303 <= icmp_ln1065_6_fu_1111_p2;
                icmp_ln1065_7_reg_2325 <= icmp_ln1065_7_fu_1178_p2;
                icmp_ln1065_reg_2171 <= icmp_ln1065_fu_709_p2;
                lane_V_1_reg_2089 <= lane_V_1_fu_602_p1;
                lane_V_2_reg_2100 <= lane_V_2_fu_616_p1;
                lane_V_3_reg_2111 <= lane_V_3_fu_630_p1;
                lane_V_4_reg_2122 <= lane_V_4_fu_644_p1;
                lane_V_5_reg_2133 <= lane_V_5_fu_658_p1;
                lane_V_6_reg_2144 <= lane_V_6_fu_672_p1;
                lane_V_7_reg_2155 <= lane_V_7_fu_686_p1;
                lane_V_reg_2078 <= lane_V_fu_588_p1;
                tmp_last_1_reg_2198 <= tmp_last_1_fu_790_p2;
                tmp_last_2_reg_2220 <= tmp_last_2_fu_857_p2;
                tmp_last_3_reg_2242 <= tmp_last_3_fu_924_p2;
                tmp_last_4_reg_2264 <= tmp_last_4_fu_991_p2;
                tmp_last_5_reg_2286 <= tmp_last_5_fu_1058_p2;
                tmp_last_6_reg_2308 <= tmp_last_6_fu_1125_p2;
                tmp_last_7_reg_2330 <= tmp_last_7_fu_1192_p2;
                tmp_last_reg_2176 <= tmp_last_fu_723_p2;
                trigger_V_reg_2018 <= postage_stream_TUSER_int_regslice(12 downto 9);
                x_1_reg_2042 <= postage_stream_TDATA_int_regslice(127 downto 96);
                x_2_reg_2054 <= postage_stream_TDATA_int_regslice(159 downto 128);
                x_3_reg_2066 <= postage_stream_TDATA_int_regslice(191 downto 160);
                x_reg_2030 <= postage_stream_TDATA_int_regslice(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln164_1_fu_1952_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                foo_data_reg_2352 <= ap_phi_mux_empty_56_phi_fu_508_p16(63 downto 32);
                foo_last_reg_2362 <= ap_phi_mux_empty_56_phi_fu_508_p16(72 downto 72);
                foo_user_V_reg_2357 <= ap_phi_mux_empty_56_phi_fu_508_p16(66 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_1_fu_776_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_1_reg_2203 <= icmp_ln238_1_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_2_fu_843_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_2_reg_2225 <= icmp_ln238_2_fu_863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_3_fu_910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_3_reg_2247 <= icmp_ln238_3_fu_930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_4_fu_977_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_4_reg_2269 <= icmp_ln238_4_fu_997_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_5_fu_1044_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_5_reg_2291 <= icmp_ln238_5_fu_1064_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_6_fu_1111_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_6_reg_2313 <= icmp_ln238_6_fu_1131_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_7_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_7_reg_2335 <= icmp_ln238_7_fu_1198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_fu_709_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln238_reg_2181 <= icmp_ln238_fu_729_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (foo_last_fu_1986_p3 = ap_const_lv1_0) and (trunc_ln164_1_fu_1952_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                packet_in_flight <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((packet_in_flight_load_load_fu_1956_p1 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln164_1_fu_1952_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (foo_last_fu_1986_p3 = ap_const_lv1_1) and (trunc_ln164_1_fu_1952_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                sending_i <= sending_plus1_fu_1644_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                trunc_ln164_1_reg_2345 <= trunc_ln164_1_fu_1952_p1;
                trunc_ln164_1_reg_2345_pp0_iter4_reg <= trunc_ln164_1_reg_2345;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln254_fu_1638_p2 <= std_logic_vector(unsigned(sending_i) + unsigned(ap_const_lv8_1));
    and_ln825_1_fu_817_p2 <= (trigger_V_reg_2018 and shl_ln825_1_fu_811_p2);
    and_ln825_2_fu_884_p2 <= (trigger_V_reg_2018 and shl_ln825_2_fu_878_p2);
    and_ln825_3_fu_951_p2 <= (trigger_V_reg_2018 and shl_ln825_3_fu_945_p2);
    and_ln825_4_fu_1018_p2 <= (trigger_V_reg_2018 and shl_ln825_4_fu_1012_p2);
    and_ln825_5_fu_1085_p2 <= (trigger_V_reg_2018 and shl_ln825_5_fu_1079_p2);
    and_ln825_6_fu_1152_p2 <= (trigger_V_reg_2018 and shl_ln825_6_fu_1146_p2);
    and_ln825_7_fu_1219_p2 <= (trigger_V_reg_2018 and shl_ln825_7_fu_1213_p2);
    and_ln825_fu_750_p2 <= (trigger_V_reg_2018 and shl_ln825_fu_744_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter4, trunc_ln164_1_reg_2345, ap_enable_reg_pp0_iter5, trunc_ln164_1_reg_2345_pp0_iter4_reg, regslice_both_out_r_V_data_V_U_apdone_blk, postage_stream_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((postage_stream_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345_pp0_iter4_reg = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter4, trunc_ln164_1_reg_2345, ap_enable_reg_pp0_iter5, trunc_ln164_1_reg_2345_pp0_iter4_reg, ap_block_state5_io, regslice_both_out_r_V_data_V_U_apdone_blk, ap_block_state6_io, postage_stream_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((postage_stream_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state6_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345_pp0_iter4_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, trunc_ln164_1_reg_2345, ap_enable_reg_pp0_iter5, trunc_ln164_1_reg_2345_pp0_iter4_reg, ap_block_state5_io, regslice_both_out_r_V_data_V_U_apdone_blk, ap_block_state6_io, postage_stream_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((postage_stream_TVALID_int_regslice = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state6_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345_pp0_iter4_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345 = ap_const_lv1_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(postage_stream_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (postage_stream_TVALID_int_regslice = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(trunc_ln164_1_reg_2345, out_r_TREADY_int_regslice)
    begin
                ap_block_state5_io <= ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345 = ap_const_lv1_1));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(trunc_ln164_1_reg_2345, out_r_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345 = ap_const_lv1_1));
    end process;


    ap_block_state6_io_assign_proc : process(trunc_ln164_1_reg_2345_pp0_iter4_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state6_io <= ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345_pp0_iter4_reg = ap_const_lv1_1));
    end process;


    ap_block_state6_pp0_stage0_iter5_assign_proc : process(trunc_ln164_1_reg_2345_pp0_iter4_reg, regslice_both_out_r_V_data_V_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((regslice_both_out_r_V_data_V_U_apdone_blk = ap_const_logic_1) or ((out_r_TREADY_int_regslice = ap_const_logic_0) and (trunc_ln164_1_reg_2345_pp0_iter4_reg = ap_const_lv1_1)));
    end process;


    ap_condition_1379_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_fu_709_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1379 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_fu_709_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1390_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_1_fu_776_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1390 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_1_fu_776_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1401_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_2_fu_843_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1401 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_2_fu_843_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1412_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_3_fu_910_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1412 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_3_fu_910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1423_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_4_fu_977_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1423 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_4_fu_977_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1434_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_5_fu_1044_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1434 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_5_fu_1044_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1445_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_6_fu_1111_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1445 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_6_fu_1111_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1456_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_7_fu_1178_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1456 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_7_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_56_phi_fu_508_p16_assign_proc : process(tmp_20_fu_1902_p5, ap_phi_reg_pp0_iter3_empty_56_reg_505, trunc_ln164_fu_1652_p1, tmp_25_fu_1865_p5, tmp_27_fu_1828_p5, tmp_29_fu_1791_p5, tmp_31_fu_1754_p5, tmp_33_fu_1717_p5, tmp_35_fu_1680_p5, tmp_s_fu_1939_p5)
    begin
        if ((trunc_ln164_fu_1652_p1 = ap_const_lv3_7)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_s_fu_1939_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_6)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_35_fu_1680_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_5)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_33_fu_1717_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_4)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_31_fu_1754_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_3)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_29_fu_1791_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_2)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_27_fu_1828_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_1)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_25_fu_1865_p5;
        elsif ((trunc_ln164_fu_1652_p1 = ap_const_lv3_0)) then 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= tmp_20_fu_1902_p5;
        else 
            ap_phi_mux_empty_56_phi_fu_508_p16 <= ap_phi_reg_pp0_iter3_empty_56_reg_505;
        end if; 
    end process;

    ap_phi_reg_pp0_iter3_empty_56_reg_505 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    empty_48_fu_1894_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout(35 - 1 downto 0);
    empty_49_fu_1857_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout(35 - 1 downto 0);
    empty_50_fu_1820_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout(35 - 1 downto 0);
    empty_51_fu_1783_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout(35 - 1 downto 0);
    empty_52_fu_1746_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout(35 - 1 downto 0);
    empty_53_fu_1709_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout(35 - 1 downto 0);
    empty_54_fu_1672_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout(35 - 1 downto 0);
    empty_55_fu_1931_p1 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout(35 - 1 downto 0);
    foo_last_fu_1986_p3 <= ap_phi_mux_empty_56_phi_fu_508_p16(72 downto 72);
    group_V_fu_534_p1 <= postage_stream_TUSER_int_regslice(9 - 1 downto 0);
    icmp_ln1065_1_fu_776_p2 <= "1" when (gid_V_1_reg_2095 = group_V_reg_2006) else "0";
    icmp_ln1065_2_fu_843_p2 <= "1" when (gid_V_2_reg_2106 = group_V_reg_2006) else "0";
    icmp_ln1065_3_fu_910_p2 <= "1" when (gid_V_3_reg_2117 = group_V_reg_2006) else "0";
    icmp_ln1065_4_fu_977_p2 <= "1" when (gid_V_4_reg_2128 = group_V_reg_2006) else "0";
    icmp_ln1065_5_fu_1044_p2 <= "1" when (gid_V_5_reg_2139 = group_V_reg_2006) else "0";
    icmp_ln1065_6_fu_1111_p2 <= "1" when (gid_V_6_reg_2150 = group_V_reg_2006) else "0";
    icmp_ln1065_7_fu_1178_p2 <= "1" when (gid_V_7_reg_2161 = group_V_reg_2006) else "0";
    icmp_ln1065_fu_709_p2 <= "1" when (gid_V_reg_2084 = group_V_reg_2006) else "0";
    icmp_ln238_1_fu_796_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 = ap_const_lv8_0) else "0";
    icmp_ln238_2_fu_863_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 = ap_const_lv8_0) else "0";
    icmp_ln238_3_fu_930_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 = ap_const_lv8_0) else "0";
    icmp_ln238_4_fu_997_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 = ap_const_lv8_0) else "0";
    icmp_ln238_5_fu_1064_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 = ap_const_lv8_0) else "0";
    icmp_ln238_6_fu_1131_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 = ap_const_lv8_0) else "0";
    icmp_ln238_7_fu_1198_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture = ap_const_lv8_0) else "0";
    icmp_ln238_fu_729_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 = ap_const_lv8_0) else "0";
    icmp_ln254_fu_1632_p2 <= "0" when (tmp_22_fu_1622_p4 = ap_const_lv5_0) else "1";
    lane_V_1_fu_602_p1 <= monitor_1(2 - 1 downto 0);
    lane_V_2_fu_616_p1 <= monitor_2(2 - 1 downto 0);
    lane_V_3_fu_630_p1 <= monitor_3(2 - 1 downto 0);
    lane_V_4_fu_644_p1 <= monitor_4(2 - 1 downto 0);
    lane_V_5_fu_658_p1 <= monitor_5(2 - 1 downto 0);
    lane_V_6_fu_672_p1 <= monitor_6(2 - 1 downto 0);
    lane_V_7_fu_686_p1 <= monitor_7(2 - 1 downto 0);
    lane_V_fu_588_p1 <= monitor_0(2 - 1 downto 0);
    nexttocap_1_fu_784_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6) + unsigned(ap_const_lv8_FF));
    nexttocap_2_fu_851_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5) + unsigned(ap_const_lv8_FF));
    nexttocap_3_fu_918_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4) + unsigned(ap_const_lv8_FF));
    nexttocap_4_fu_985_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3) + unsigned(ap_const_lv8_FF));
    nexttocap_5_fu_1052_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2) + unsigned(ap_const_lv8_FF));
    nexttocap_6_fu_1119_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1) + unsigned(ap_const_lv8_FF));
    nexttocap_7_fu_1186_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture) + unsigned(ap_const_lv8_FF));
    nexttocap_fu_717_p2 <= std_logic_vector(unsigned(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7) + unsigned(ap_const_lv8_FF));
    or_ln185_1_fu_1323_p2 <= (tmp_3_fu_1314_p4 or ap_const_lv41_200000000);
    or_ln185_2_fu_1375_p2 <= (tmp_6_fu_1366_p4 or ap_const_lv41_300000000);
    or_ln185_3_fu_1427_p2 <= (tmp_9_fu_1418_p4 or ap_const_lv41_400000000);
    or_ln185_4_fu_1479_p2 <= (tmp_12_fu_1470_p4 or ap_const_lv41_500000000);
    or_ln185_5_fu_1531_p2 <= (tmp_15_fu_1522_p4 or ap_const_lv41_600000000);
    or_ln185_6_fu_1583_p2 <= (tmp_18_fu_1574_p4 or ap_const_lv41_700000000);
    or_ln185_fu_1271_p2 <= (tmp_fu_1262_p4 or ap_const_lv41_100000000);

    out_r_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln164_1_reg_2345, ap_enable_reg_pp0_iter5, trunc_ln164_1_reg_2345_pp0_iter4_reg, out_r_TREADY_int_regslice)
    begin
        if ((((trunc_ln164_1_reg_2345_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((trunc_ln164_1_reg_2345 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_V_data_V_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter4, trunc_ln164_1_reg_2345, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln164_1_reg_2345 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    overflow <= ap_const_logic_1;

    overflow_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            overflow_ap_vld <= ap_const_logic_1;
        else 
            overflow_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_822_p2 <= "1" when (and_ln825_1_fu_817_p2 = ap_const_lv4_0) else "0";
    p_Result_2_fu_889_p2 <= "1" when (and_ln825_2_fu_884_p2 = ap_const_lv4_0) else "0";
    p_Result_3_fu_956_p2 <= "1" when (and_ln825_3_fu_951_p2 = ap_const_lv4_0) else "0";
    p_Result_4_fu_1023_p2 <= "1" when (and_ln825_4_fu_1018_p2 = ap_const_lv4_0) else "0";
    p_Result_5_fu_1090_p2 <= "1" when (and_ln825_5_fu_1085_p2 = ap_const_lv4_0) else "0";
    p_Result_6_fu_1157_p2 <= "1" when (and_ln825_6_fu_1152_p2 = ap_const_lv4_0) else "0";
    p_Result_7_fu_1224_p2 <= "1" when (and_ln825_7_fu_1219_p2 = ap_const_lv4_0) else "0";
    p_Result_s_fu_755_p2 <= "1" when (and_ln825_fu_750_p2 = ap_const_lv4_0) else "0";
    packet_in_flight_load_load_fu_1956_p1 <= packet_in_flight;
    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_din <= ((tmp_17_fu_1547_p3 & tmp_16_fu_1537_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_428_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2303, icmp_ln238_6_reg_2313, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_6_reg_2313 = ap_const_lv1_0) and (icmp_ln1065_6_reg_2303 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_din <= ((tmp_14_fu_1495_p3 & tmp_13_fu_1485_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_434_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2281, icmp_ln238_5_reg_2291, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_5_reg_2291 = ap_const_lv1_0) and (icmp_ln1065_5_reg_2281 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_din <= ((tmp_11_fu_1443_p3 & tmp_10_fu_1433_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_440_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2259, icmp_ln238_4_reg_2269, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_4_reg_2269 = ap_const_lv1_0) and (icmp_ln1065_4_reg_2259 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_din <= ((tmp_8_fu_1391_p3 & tmp_7_fu_1381_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_446_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2237, icmp_ln238_3_reg_2247, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_3_reg_2247 = ap_const_lv1_0) and (icmp_ln1065_3_reg_2237 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_din <= ((tmp_5_fu_1339_p3 & tmp_4_fu_1329_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_452_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2215, icmp_ln238_2_reg_2225, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_2_reg_2225 = ap_const_lv1_0) and (icmp_ln1065_2_reg_2215 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_din <= ((tmp_2_fu_1287_p3 & tmp_1_fu_1277_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_458_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2193, icmp_ln238_1_reg_2203, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_1_reg_2203 = ap_const_lv1_0) and (icmp_ln1065_1_reg_2193 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_din <= ((tmp_last_reg_2176 & ap_const_lv3_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_464_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2171, icmp_ln238_reg_2181, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_reg_2181 = ap_const_lv1_0) and (icmp_ln1065_reg_2171 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_write <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_din <= ((tmp_21_fu_1599_p3 & tmp_19_fu_1589_p4) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0);

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3, trunc_ln164_fu_1652_p1, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n = ap_const_logic_1) and (trunc_ln164_fu_1652_p1 = ap_const_lv3_7) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read <= ap_const_logic_0;
        end if; 
    end process;

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_470_p2_0 <= (0=>(postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_empty_n), others=>'-');

    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2325, icmp_ln238_7_reg_2335, ap_enable_reg_pp0_iter2, postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n)
    begin
        if (((postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln238_7_reg_2335 = ap_const_lv1_0) and (icmp_ln1065_7_reg_2325 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write <= ap_const_logic_1;
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_write <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2193, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 <= icmp_ln1065_1_reg_2193(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_1_reg_2193, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 <= icmp_ln1065_1_reg_2193(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2325, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 <= icmp_ln1065_7_reg_2325(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_7_reg_2325, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 <= icmp_ln1065_7_reg_2325(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2303, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 <= icmp_ln1065_6_reg_2303(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_6_reg_2303, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 <= icmp_ln1065_6_reg_2303(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2281, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 <= icmp_ln1065_5_reg_2281(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_5_reg_2281, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 <= icmp_ln1065_5_reg_2281(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2259, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 <= icmp_ln1065_4_reg_2259(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_4_reg_2259, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 <= icmp_ln1065_4_reg_2259(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2237, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 <= icmp_ln1065_3_reg_2237(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_3_reg_2237, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 <= icmp_ln1065_3_reg_2237(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2171, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 <= icmp_ln1065_reg_2171(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_reg_2171, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 <= icmp_ln1065_reg_2171(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2215, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 <= icmp_ln1065_2_reg_2215(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1065_2_reg_2215, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 <= icmp_ln1065_2_reg_2215(0);
        else 
            postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, postage_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            postage_stream_TDATA_blk_n <= postage_stream_TVALID_int_regslice;
        else 
            postage_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    postage_stream_TREADY <= regslice_both_postage_stream_V_data_V_U_ack_in;

    postage_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            postage_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            postage_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sending_plus1_fu_1644_p3 <= 
        ap_const_lv8_0 when (icmp_ln254_fu_1632_p2(0) = '1') else 
        add_ln254_fu_1638_p2;
    shl_ln825_1_fu_811_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_1_fu_808_p1(4-1 downto 0)))));
    shl_ln825_2_fu_878_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_2_fu_875_p1(4-1 downto 0)))));
    shl_ln825_3_fu_945_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_3_fu_942_p1(4-1 downto 0)))));
    shl_ln825_4_fu_1012_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_4_fu_1009_p1(4-1 downto 0)))));
    shl_ln825_5_fu_1079_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_5_fu_1076_p1(4-1 downto 0)))));
    shl_ln825_6_fu_1146_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_6_fu_1143_p1(4-1 downto 0)))));
    shl_ln825_7_fu_1213_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_7_fu_1210_p1(4-1 downto 0)))));
    shl_ln825_fu_744_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_fu_741_p1(4-1 downto 0)))));
    tmp_10_fu_1433_p4 <= or_ln185_3_fu_1427_p2(34 downto 32);
    tmp_11_fu_1443_p3 <= or_ln185_3_fu_1427_p2(40 downto 40);
    tmp_12_fu_1470_p4 <= ((tmp_last_5_reg_2286 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_4_q0);
    tmp_13_fu_1485_p4 <= or_ln185_4_fu_1479_p2(34 downto 32);
    tmp_14_fu_1495_p3 <= or_ln185_4_fu_1479_p2(40 downto 40);
    tmp_15_fu_1522_p4 <= ((tmp_last_6_reg_2308 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_3_q0);
    tmp_16_fu_1537_p4 <= or_ln185_5_fu_1531_p2(34 downto 32);
    tmp_17_fu_1547_p3 <= or_ln185_5_fu_1531_p2(40 downto 40);
    tmp_18_fu_1574_p4 <= ((tmp_last_7_reg_2330 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_2_q0);
    tmp_19_fu_1589_p4 <= or_ln185_6_fu_1583_p2(34 downto 32);
    tmp_1_fu_1277_p4 <= or_ln185_fu_1271_p2(34 downto 32);
    tmp_20_fu_1902_p5 <= (((tmp_24_fu_1886_p3 & tmp_23_cast_fu_1898_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_read_nbread_fu_464_p2_0);
    tmp_21_fu_1599_p3 <= or_ln185_6_fu_1583_p2(40 downto 40);
    tmp_22_cast_fu_1935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_55_fu_1931_p1),40));
    tmp_22_fu_1622_p4 <= sending_i(7 downto 3);
    tmp_23_cast_fu_1898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_48_fu_1894_p1),40));
    tmp_23_fu_1923_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_dout(35 downto 35);
    tmp_24_cast_fu_1861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_49_fu_1857_p1),40));
    tmp_24_fu_1886_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_7_dout(35 downto 35);
    tmp_25_fu_1865_p5 <= (((tmp_26_fu_1849_p3 & tmp_24_cast_fu_1861_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_read_nbread_fu_458_p2_0);
    tmp_26_cast_fu_1824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_50_fu_1820_p1),40));
    tmp_26_fu_1849_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_6_dout(35 downto 35);
    tmp_27_fu_1828_p5 <= (((tmp_28_fu_1812_p3 & tmp_26_cast_fu_1824_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_read_nbread_fu_452_p2_0);
    tmp_28_cast_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_51_fu_1783_p1),40));
    tmp_28_fu_1812_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_5_dout(35 downto 35);
    tmp_29_fu_1791_p5 <= (((tmp_30_fu_1775_p3 & tmp_28_cast_fu_1787_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_read_nbread_fu_446_p2_0);
    tmp_2_fu_1287_p3 <= or_ln185_fu_1271_p2(40 downto 40);
    tmp_30_cast_fu_1750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_52_fu_1746_p1),40));
    tmp_30_fu_1775_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_4_dout(35 downto 35);
    tmp_31_fu_1754_p5 <= (((tmp_32_fu_1738_p3 & tmp_30_cast_fu_1750_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_read_nbread_fu_440_p2_0);
    tmp_32_cast_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_53_fu_1709_p1),40));
    tmp_32_fu_1738_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_3_dout(35 downto 35);
    tmp_33_fu_1717_p5 <= (((tmp_34_fu_1701_p3 & tmp_32_cast_fu_1713_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_read_nbread_fu_434_p2_0);
    tmp_34_cast_fu_1676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_54_fu_1672_p1),40));
    tmp_34_fu_1701_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_2_dout(35 downto 35);
    tmp_35_fu_1680_p5 <= (((tmp_36_fu_1664_p3 & tmp_34_cast_fu_1676_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_read_nbread_fu_428_p2_0);
    tmp_36_fu_1664_p3 <= postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_1_dout(35 downto 35);
    tmp_3_fu_1314_p4 <= ((tmp_last_2_reg_2220 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_q0);
    tmp_4_fu_1329_p4 <= or_ln185_1_fu_1323_p2(34 downto 32);
    tmp_5_fu_1339_p3 <= or_ln185_1_fu_1323_p2(40 downto 40);
    tmp_6_fu_1366_p4 <= ((tmp_last_3_reg_2242 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_6_q0);
    tmp_7_fu_1381_p4 <= or_ln185_2_fu_1375_p2(34 downto 32);
    tmp_8_fu_1391_p3 <= or_ln185_2_fu_1375_p2(40 downto 40);
    tmp_9_fu_1418_p4 <= ((tmp_last_4_reg_2264 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_5_q0);
    tmp_fu_1262_p4 <= ((tmp_last_1_reg_2198 & ap_const_lv8_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_iqprereg_1_q0);
    tmp_last_1_fu_790_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_6 = ap_const_lv8_1) else "0";
    tmp_last_2_fu_857_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_5 = ap_const_lv8_1) else "0";
    tmp_last_3_fu_924_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_4 = ap_const_lv8_1) else "0";
    tmp_last_4_fu_991_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_3 = ap_const_lv8_1) else "0";
    tmp_last_5_fu_1058_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_2 = ap_const_lv8_1) else "0";
    tmp_last_6_fu_1125_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_1 = ap_const_lv8_1) else "0";
    tmp_last_7_fu_1192_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture = ap_const_lv8_1) else "0";
    tmp_last_fu_723_p2 <= "1" when (postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_tocapture_7 = ap_const_lv8_1) else "0";
    tmp_s_fu_1939_p5 <= (((tmp_23_fu_1923_p3 & tmp_22_cast_fu_1935_p1) & ap_const_lv31_0) & postage_filter_w_interconn_stream_ap_uint_stream_axis_0_bool_buff_read_nbread_fu_470_p2_0);
    trunc_ln164_1_fu_1952_p1 <= ap_phi_mux_empty_56_phi_fu_508_p16(1 - 1 downto 0);
    trunc_ln164_fu_1652_p1 <= sending_i(3 - 1 downto 0);
    zext_ln825_1_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_1_reg_2089),4));
    zext_ln825_2_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_2_reg_2100),4));
    zext_ln825_3_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_3_reg_2111),4));
    zext_ln825_4_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_4_reg_2122),4));
    zext_ln825_5_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_5_reg_2133),4));
    zext_ln825_6_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_6_reg_2144),4));
    zext_ln825_7_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_7_reg_2155),4));
    zext_ln825_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_reg_2078),4));
end behav;
