// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="postage_postage,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.307625,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1000,HLS_SYN_LUT=1459,HLS_VERSION=2021_1}" *)

module postage (
// synthesis translate_off
    kernel_block,
// synthesis translate_on
        ap_clk,
        ap_rst_n,
        instream_TDATA,
        instream_TVALID,
        instream_TREADY,
        instream_TKEEP,
        instream_TSTRB,
        instream_TUSER,
        instream_TLAST,
        iniq_TDATA,
        iniq_TVALID,
        iniq_TREADY,
        iniq_TKEEP,
        iniq_TSTRB,
        iniq_TLAST,
        iq_out_0_TDATA,
        iq_out_0_TVALID,
        iq_out_0_TREADY,
        iq_out_0_TKEEP,
        iq_out_0_TSTRB,
        iq_out_0_TUSER,
        iq_out_0_TLAST,
        iq_out_1_TDATA,
        iq_out_1_TVALID,
        iq_out_1_TREADY,
        iq_out_1_TKEEP,
        iq_out_1_TSTRB,
        iq_out_1_TUSER,
        iq_out_1_TLAST,
        iq_out_2_TDATA,
        iq_out_2_TVALID,
        iq_out_2_TREADY,
        iq_out_2_TKEEP,
        iq_out_2_TSTRB,
        iq_out_2_TUSER,
        iq_out_2_TLAST,
        iq_out_3_TDATA,
        iq_out_3_TVALID,
        iq_out_3_TREADY,
        iq_out_3_TKEEP,
        iq_out_3_TSTRB,
        iq_out_3_TUSER,
        iq_out_3_TLAST,
        iq_out_4_TDATA,
        iq_out_4_TVALID,
        iq_out_4_TREADY,
        iq_out_4_TKEEP,
        iq_out_4_TSTRB,
        iq_out_4_TUSER,
        iq_out_4_TLAST,
        iq_out_5_TDATA,
        iq_out_5_TVALID,
        iq_out_5_TREADY,
        iq_out_5_TKEEP,
        iq_out_5_TSTRB,
        iq_out_5_TUSER,
        iq_out_5_TLAST,
        iq_out_6_TDATA,
        iq_out_6_TVALID,
        iq_out_6_TREADY,
        iq_out_6_TKEEP,
        iq_out_6_TSTRB,
        iq_out_6_TUSER,
        iq_out_6_TLAST,
        iq_out_7_TDATA,
        iq_out_7_TVALID,
        iq_out_7_TREADY,
        iq_out_7_TKEEP,
        iq_out_7_TSTRB,
        iq_out_7_TUSER,
        iq_out_7_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

// synthesis translate_off
output kernel_block;
// synthesis translate_on
input   ap_clk;
input   ap_rst_n;
input  [63:0] instream_TDATA;
input   instream_TVALID;
output   instream_TREADY;
input  [7:0] instream_TKEEP;
input  [7:0] instream_TSTRB;
input  [12:0] instream_TUSER;
input  [0:0] instream_TLAST;
input  [127:0] iniq_TDATA;
input   iniq_TVALID;
output   iniq_TREADY;
input  [15:0] iniq_TKEEP;
input  [15:0] iniq_TSTRB;
input  [0:0] iniq_TLAST;
output  [31:0] iq_out_0_TDATA;
output   iq_out_0_TVALID;
input   iq_out_0_TREADY;
output  [3:0] iq_out_0_TKEEP;
output  [3:0] iq_out_0_TSTRB;
output  [2:0] iq_out_0_TUSER;
output  [0:0] iq_out_0_TLAST;
output  [31:0] iq_out_1_TDATA;
output   iq_out_1_TVALID;
input   iq_out_1_TREADY;
output  [3:0] iq_out_1_TKEEP;
output  [3:0] iq_out_1_TSTRB;
output  [2:0] iq_out_1_TUSER;
output  [0:0] iq_out_1_TLAST;
output  [31:0] iq_out_2_TDATA;
output   iq_out_2_TVALID;
input   iq_out_2_TREADY;
output  [3:0] iq_out_2_TKEEP;
output  [3:0] iq_out_2_TSTRB;
output  [2:0] iq_out_2_TUSER;
output  [0:0] iq_out_2_TLAST;
output  [31:0] iq_out_3_TDATA;
output   iq_out_3_TVALID;
input   iq_out_3_TREADY;
output  [3:0] iq_out_3_TKEEP;
output  [3:0] iq_out_3_TSTRB;
output  [2:0] iq_out_3_TUSER;
output  [0:0] iq_out_3_TLAST;
output  [31:0] iq_out_4_TDATA;
output   iq_out_4_TVALID;
input   iq_out_4_TREADY;
output  [3:0] iq_out_4_TKEEP;
output  [3:0] iq_out_4_TSTRB;
output  [2:0] iq_out_4_TUSER;
output  [0:0] iq_out_4_TLAST;
output  [31:0] iq_out_5_TDATA;
output   iq_out_5_TVALID;
input   iq_out_5_TREADY;
output  [3:0] iq_out_5_TKEEP;
output  [3:0] iq_out_5_TSTRB;
output  [2:0] iq_out_5_TUSER;
output  [0:0] iq_out_5_TLAST;
output  [31:0] iq_out_6_TDATA;
output   iq_out_6_TVALID;
input   iq_out_6_TREADY;
output  [3:0] iq_out_6_TKEEP;
output  [3:0] iq_out_6_TSTRB;
output  [2:0] iq_out_6_TUSER;
output  [0:0] iq_out_6_TLAST;
output  [31:0] iq_out_7_TDATA;
output   iq_out_7_TVALID;
input   iq_out_7_TREADY;
output  [3:0] iq_out_7_TKEEP;
output  [3:0] iq_out_7_TSTRB;
output  [2:0] iq_out_7_TUSER;
output  [0:0] iq_out_7_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg instream_TREADY;
reg iniq_TREADY;
reg iq_out_0_TVALID;
reg iq_out_1_TVALID;
reg iq_out_2_TVALID;
reg iq_out_3_TVALID;
reg iq_out_4_TVALID;
reg iq_out_5_TVALID;
reg iq_out_6_TVALID;
reg iq_out_7_TVALID;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_ready;
wire   [11:0] monitor_0;
wire   [11:0] monitor_1;
wire   [11:0] monitor_2;
wire   [11:0] monitor_3;
wire   [11:0] monitor_4;
wire   [11:0] monitor_5;
wire   [11:0] monitor_6;
wire   [11:0] monitor_7;
reg    instream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    iniq_TDATA_blk_n;
reg    iq_out_0_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln1049_reg_1564;
reg   [0:0] icmp_ln379_reg_1569;
reg    iq_out_1_TDATA_blk_n;
reg   [0:0] icmp_ln1049_1_reg_1578;
reg   [0:0] icmp_ln379_1_reg_1583;
reg    iq_out_2_TDATA_blk_n;
reg   [0:0] icmp_ln1049_2_reg_1592;
reg   [0:0] icmp_ln379_2_reg_1597;
reg    iq_out_3_TDATA_blk_n;
reg   [0:0] icmp_ln1049_3_reg_1606;
reg   [0:0] icmp_ln379_3_reg_1611;
reg    iq_out_4_TDATA_blk_n;
reg   [0:0] icmp_ln1049_4_reg_1620;
reg   [0:0] icmp_ln379_4_reg_1625;
reg    iq_out_5_TDATA_blk_n;
reg   [0:0] icmp_ln1049_5_reg_1634;
reg   [0:0] icmp_ln379_5_reg_1639;
reg    iq_out_6_TDATA_blk_n;
reg   [0:0] icmp_ln1049_6_reg_1648;
reg   [0:0] icmp_ln379_6_reg_1653;
reg    iq_out_7_TDATA_blk_n;
reg   [0:0] icmp_ln1049_7_reg_1662;
reg   [0:0] icmp_ln379_7_reg_1667;
reg   [8:0] gid_V_reg_1428;
reg   [8:0] gid_V_1_reg_1433;
reg   [8:0] gid_V_2_reg_1438;
reg   [8:0] gid_V_3_reg_1443;
reg   [8:0] gid_V_4_reg_1448;
reg   [8:0] gid_V_5_reg_1453;
reg   [8:0] gid_V_6_reg_1458;
reg   [8:0] gid_V_7_reg_1463;
wire   [1:0] lane_V_fu_692_p1;
reg   [1:0] lane_V_reg_1468;
wire   [1:0] lane_V_1_fu_696_p1;
reg   [1:0] lane_V_1_reg_1474;
wire   [1:0] lane_V_2_fu_700_p1;
reg   [1:0] lane_V_2_reg_1480;
wire   [1:0] lane_V_3_fu_704_p1;
reg   [1:0] lane_V_3_reg_1486;
wire   [1:0] lane_V_4_fu_708_p1;
reg   [1:0] lane_V_4_reg_1492;
wire   [1:0] lane_V_5_fu_712_p1;
reg   [1:0] lane_V_5_reg_1498;
wire   [1:0] lane_V_6_fu_716_p1;
reg   [1:0] lane_V_6_reg_1504;
wire   [1:0] lane_V_7_fu_720_p1;
reg   [1:0] lane_V_7_reg_1510;
wire   [31:0] x_0_fu_732_p1;
reg   [31:0] x_0_reg_1516;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op242_write_state3;
reg    ap_predicate_op246_write_state3;
reg    ap_predicate_op250_write_state3;
reg    ap_predicate_op254_write_state3;
reg    ap_predicate_op258_write_state3;
reg    ap_predicate_op262_write_state3;
reg    ap_predicate_op266_write_state3;
reg    ap_predicate_op270_write_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] x_1_reg_1528;
reg   [31:0] x_2_reg_1540;
reg   [31:0] x_3_reg_1552;
wire   [0:0] icmp_ln1049_fu_780_p2;
wire   [0:0] icmp_ln379_fu_788_p2;
wire   [0:0] tmp_last_V_fu_794_p2;
reg   [0:0] tmp_last_V_reg_1573;
wire   [0:0] icmp_ln1049_1_fu_831_p2;
wire   [0:0] icmp_ln379_1_fu_839_p2;
wire   [0:0] tmp_last_V_1_fu_845_p2;
reg   [0:0] tmp_last_V_1_reg_1587;
wire   [0:0] icmp_ln1049_2_fu_882_p2;
wire   [0:0] icmp_ln379_2_fu_890_p2;
wire   [0:0] tmp_last_V_2_fu_896_p2;
reg   [0:0] tmp_last_V_2_reg_1601;
wire   [0:0] icmp_ln1049_3_fu_933_p2;
wire   [0:0] icmp_ln379_3_fu_941_p2;
wire   [0:0] tmp_last_V_3_fu_947_p2;
reg   [0:0] tmp_last_V_3_reg_1615;
wire   [0:0] icmp_ln1049_4_fu_984_p2;
wire   [0:0] icmp_ln379_4_fu_992_p2;
wire   [0:0] tmp_last_V_4_fu_998_p2;
reg   [0:0] tmp_last_V_4_reg_1629;
wire   [0:0] icmp_ln1049_5_fu_1035_p2;
wire   [0:0] icmp_ln379_5_fu_1043_p2;
wire   [0:0] tmp_last_V_5_fu_1049_p2;
reg   [0:0] tmp_last_V_5_reg_1643;
wire   [0:0] icmp_ln1049_6_fu_1086_p2;
wire   [0:0] icmp_ln379_6_fu_1094_p2;
wire   [0:0] tmp_last_V_6_fu_1100_p2;
reg   [0:0] tmp_last_V_6_reg_1657;
wire   [0:0] icmp_ln1049_7_fu_1137_p2;
wire   [0:0] icmp_ln379_7_fu_1145_p2;
wire   [0:0] tmp_last_V_7_fu_1151_p2;
reg   [0:0] tmp_last_V_7_reg_1671;
reg    ap_block_pp0_stage0_subdone;
wire   [4:0] iqprereg_Array_0_address0;
reg    iqprereg_Array_0_ce0;
reg    iqprereg_Array_0_we0;
wire   [31:0] iqprereg_Array_0_q0;
wire   [4:0] iqprereg_Array_1_address0;
reg    iqprereg_Array_1_ce0;
reg    iqprereg_Array_1_we0;
wire   [31:0] iqprereg_Array_1_q0;
wire   [4:0] iqprereg_Array_2_address0;
reg    iqprereg_Array_2_ce0;
reg    iqprereg_Array_2_we0;
wire   [31:0] iqprereg_Array_2_q0;
wire   [4:0] iqprereg_Array_3_address0;
reg    iqprereg_Array_3_ce0;
reg    iqprereg_Array_3_we0;
wire   [31:0] iqprereg_Array_3_q0;
wire   [4:0] iqprereg_Array_4_address0;
reg    iqprereg_Array_4_ce0;
reg    iqprereg_Array_4_we0;
wire   [31:0] iqprereg_Array_4_q0;
wire   [4:0] iqprereg_Array_5_address0;
reg    iqprereg_Array_5_ce0;
reg    iqprereg_Array_5_we0;
wire   [31:0] iqprereg_Array_5_q0;
wire   [4:0] iqprereg_Array_6_address0;
reg    iqprereg_Array_6_ce0;
reg    iqprereg_Array_6_we0;
wire   [31:0] iqprereg_Array_6_q0;
wire   [4:0] iqprereg_Array_7_address0;
reg    iqprereg_Array_7_ce0;
reg    iqprereg_Array_7_we0;
wire   [31:0] iqprereg_Array_7_q0;
reg   [7:0] empty_fu_234;
wire   [7:0] add_ln407_fu_800_p2;
wire   [7:0] select_ln399_fu_818_p3;
reg   [7:0] empty_21_fu_238;
wire   [7:0] add_ln407_1_fu_851_p2;
wire   [7:0] select_ln399_1_fu_869_p3;
reg   [7:0] empty_22_fu_242;
wire   [7:0] add_ln407_2_fu_902_p2;
wire   [7:0] select_ln399_2_fu_920_p3;
reg   [7:0] empty_23_fu_246;
wire   [7:0] add_ln407_3_fu_953_p2;
wire   [7:0] select_ln399_3_fu_971_p3;
reg   [7:0] empty_24_fu_250;
wire   [7:0] add_ln407_4_fu_1004_p2;
wire   [7:0] select_ln399_4_fu_1022_p3;
reg   [7:0] empty_25_fu_254;
wire   [7:0] add_ln407_5_fu_1055_p2;
wire   [7:0] select_ln399_5_fu_1073_p3;
reg   [7:0] empty_26_fu_258;
wire   [7:0] add_ln407_6_fu_1106_p2;
wire   [7:0] select_ln399_6_fu_1124_p3;
reg   [7:0] empty_27_fu_262;
wire   [7:0] add_ln407_7_fu_1157_p2;
wire   [7:0] select_ln399_7_fu_1175_p3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] DataIn_assign_fu_1188_p6;
wire   [31:0] DataIn_assign_1_fu_1206_p6;
wire   [31:0] DataIn_assign_2_fu_1224_p6;
wire   [31:0] DataIn_assign_3_fu_1242_p6;
wire   [31:0] DataIn_assign_4_fu_1260_p6;
wire   [31:0] DataIn_assign_5_fu_1278_p6;
wire   [31:0] DataIn_assign_6_fu_1296_p6;
wire   [31:0] DataIn_assign_7_fu_1314_p6;
wire   [8:0] group_V_fu_766_p1;
wire   [3:0] trigger_V_fu_770_p4;
wire   [0:0] p_Result_s_fu_811_p3;
wire   [0:0] p_Result_1_fu_862_p3;
wire   [0:0] p_Result_2_fu_913_p3;
wire   [0:0] p_Result_3_fu_964_p3;
wire   [0:0] p_Result_4_fu_1015_p3;
wire   [0:0] p_Result_5_fu_1066_p3;
wire   [0:0] p_Result_6_fu_1117_p3;
wire   [0:0] p_Result_7_fu_1168_p3;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_905;
reg    ap_condition_912;
reg    ap_condition_919;
reg    ap_condition_926;
reg    ap_condition_933;
reg    ap_condition_940;
reg    ap_condition_947;
reg    ap_condition_898;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_0_address0),
    .ce0(iqprereg_Array_0_ce0),
    .we0(iqprereg_Array_0_we0),
    .d0(DataIn_assign_fu_1188_p6),
    .q0(iqprereg_Array_0_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_1_address0),
    .ce0(iqprereg_Array_1_ce0),
    .we0(iqprereg_Array_1_we0),
    .d0(DataIn_assign_1_fu_1206_p6),
    .q0(iqprereg_Array_1_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_2_address0),
    .ce0(iqprereg_Array_2_ce0),
    .we0(iqprereg_Array_2_we0),
    .d0(DataIn_assign_2_fu_1224_p6),
    .q0(iqprereg_Array_2_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_3_address0),
    .ce0(iqprereg_Array_3_ce0),
    .we0(iqprereg_Array_3_we0),
    .d0(DataIn_assign_3_fu_1242_p6),
    .q0(iqprereg_Array_3_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_4_address0),
    .ce0(iqprereg_Array_4_ce0),
    .we0(iqprereg_Array_4_we0),
    .d0(DataIn_assign_4_fu_1260_p6),
    .q0(iqprereg_Array_4_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_5_address0),
    .ce0(iqprereg_Array_5_ce0),
    .we0(iqprereg_Array_5_we0),
    .d0(DataIn_assign_5_fu_1278_p6),
    .q0(iqprereg_Array_5_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_6_address0),
    .ce0(iqprereg_Array_6_ce0),
    .we0(iqprereg_Array_6_we0),
    .d0(DataIn_assign_6_fu_1296_p6),
    .q0(iqprereg_Array_6_q0)
);

postage_iqprereg_Array_0 #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
iqprereg_Array_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iqprereg_Array_7_address0),
    .ce0(iqprereg_Array_7_ce0),
    .we0(iqprereg_Array_7_we0),
    .d0(DataIn_assign_7_fu_1314_p6),
    .q0(iqprereg_Array_7_q0)
);

postage_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .monitor_0(monitor_0),
    .monitor_1(monitor_1),
    .monitor_2(monitor_2),
    .monitor_3(monitor_3),
    .monitor_4(monitor_4),
    .monitor_5(monitor_5),
    .monitor_6(monitor_6),
    .monitor_7(monitor_7),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_reg_1468),
    .dout(DataIn_assign_fu_1188_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_1_reg_1474),
    .dout(DataIn_assign_1_fu_1206_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_2_reg_1480),
    .dout(DataIn_assign_2_fu_1224_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_3_reg_1486),
    .dout(DataIn_assign_3_fu_1242_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U5(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_4_reg_1492),
    .dout(DataIn_assign_4_fu_1260_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_5_reg_1498),
    .dout(DataIn_assign_5_fu_1278_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_6_reg_1504),
    .dout(DataIn_assign_6_fu_1296_p6)
);

postage_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U8(
    .din0(x_0_reg_1516),
    .din1(x_1_reg_1528),
    .din2(x_2_reg_1540),
    .din3(x_3_reg_1552),
    .din4(lane_V_7_reg_1510),
    .dout(DataIn_assign_7_fu_1314_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_905)) begin
        if ((icmp_ln379_1_fu_839_p2 == 1'd1)) begin
            empty_21_fu_238 <= select_ln399_1_fu_869_p3;
        end else if ((icmp_ln379_1_fu_839_p2 == 1'd0)) begin
            empty_21_fu_238 <= add_ln407_1_fu_851_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_912)) begin
        if ((icmp_ln379_2_fu_890_p2 == 1'd1)) begin
            empty_22_fu_242 <= select_ln399_2_fu_920_p3;
        end else if ((icmp_ln379_2_fu_890_p2 == 1'd0)) begin
            empty_22_fu_242 <= add_ln407_2_fu_902_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_919)) begin
        if ((icmp_ln379_3_fu_941_p2 == 1'd1)) begin
            empty_23_fu_246 <= select_ln399_3_fu_971_p3;
        end else if ((icmp_ln379_3_fu_941_p2 == 1'd0)) begin
            empty_23_fu_246 <= add_ln407_3_fu_953_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_926)) begin
        if ((icmp_ln379_4_fu_992_p2 == 1'd1)) begin
            empty_24_fu_250 <= select_ln399_4_fu_1022_p3;
        end else if ((icmp_ln379_4_fu_992_p2 == 1'd0)) begin
            empty_24_fu_250 <= add_ln407_4_fu_1004_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_933)) begin
        if ((icmp_ln379_5_fu_1043_p2 == 1'd1)) begin
            empty_25_fu_254 <= select_ln399_5_fu_1073_p3;
        end else if ((icmp_ln379_5_fu_1043_p2 == 1'd0)) begin
            empty_25_fu_254 <= add_ln407_5_fu_1055_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_940)) begin
        if ((icmp_ln379_6_fu_1094_p2 == 1'd1)) begin
            empty_26_fu_258 <= select_ln399_6_fu_1124_p3;
        end else if ((icmp_ln379_6_fu_1094_p2 == 1'd0)) begin
            empty_26_fu_258 <= add_ln407_6_fu_1106_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_947)) begin
        if ((icmp_ln379_7_fu_1145_p2 == 1'd1)) begin
            empty_27_fu_262 <= select_ln399_7_fu_1175_p3;
        end else if ((icmp_ln379_7_fu_1145_p2 == 1'd0)) begin
            empty_27_fu_262 <= add_ln407_7_fu_1157_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_898)) begin
        if ((icmp_ln379_fu_788_p2 == 1'd1)) begin
            empty_fu_234 <= select_ln399_fu_818_p3;
        end else if ((icmp_ln379_fu_788_p2 == 1'd0)) begin
            empty_fu_234 <= add_ln407_fu_800_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        gid_V_1_reg_1433 <= {{monitor_1[10:2]}};
        gid_V_2_reg_1438 <= {{monitor_2[10:2]}};
        gid_V_3_reg_1443 <= {{monitor_3[10:2]}};
        gid_V_4_reg_1448 <= {{monitor_4[10:2]}};
        gid_V_5_reg_1453 <= {{monitor_5[10:2]}};
        gid_V_6_reg_1458 <= {{monitor_6[10:2]}};
        gid_V_7_reg_1463 <= {{monitor_7[10:2]}};
        gid_V_reg_1428 <= {{monitor_0[10:2]}};
        lane_V_1_reg_1474 <= lane_V_1_fu_696_p1;
        lane_V_2_reg_1480 <= lane_V_2_fu_700_p1;
        lane_V_3_reg_1486 <= lane_V_3_fu_704_p1;
        lane_V_4_reg_1492 <= lane_V_4_fu_708_p1;
        lane_V_5_reg_1498 <= lane_V_5_fu_712_p1;
        lane_V_6_reg_1504 <= lane_V_6_fu_716_p1;
        lane_V_7_reg_1510 <= lane_V_7_fu_720_p1;
        lane_V_reg_1468 <= lane_V_fu_692_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1049_1_reg_1578 <= icmp_ln1049_1_fu_831_p2;
        icmp_ln1049_2_reg_1592 <= icmp_ln1049_2_fu_882_p2;
        icmp_ln1049_3_reg_1606 <= icmp_ln1049_3_fu_933_p2;
        icmp_ln1049_4_reg_1620 <= icmp_ln1049_4_fu_984_p2;
        icmp_ln1049_5_reg_1634 <= icmp_ln1049_5_fu_1035_p2;
        icmp_ln1049_6_reg_1648 <= icmp_ln1049_6_fu_1086_p2;
        icmp_ln1049_7_reg_1662 <= icmp_ln1049_7_fu_1137_p2;
        icmp_ln1049_reg_1564 <= icmp_ln1049_fu_780_p2;
        x_0_reg_1516 <= x_0_fu_732_p1;
        x_1_reg_1528 <= {{iniq_TDATA[63:32]}};
        x_2_reg_1540 <= {{iniq_TDATA[95:64]}};
        x_3_reg_1552 <= {{iniq_TDATA[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_1_fu_831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_1_reg_1583 <= icmp_ln379_1_fu_839_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_2_fu_882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_2_reg_1597 <= icmp_ln379_2_fu_890_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_3_fu_933_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_3_reg_1611 <= icmp_ln379_3_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_4_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_4_reg_1625 <= icmp_ln379_4_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_5_fu_1035_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_5_reg_1639 <= icmp_ln379_5_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_6_fu_1086_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_6_reg_1653 <= icmp_ln379_6_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_7_fu_1137_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_7_reg_1667 <= icmp_ln379_7_fu_1145_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1049_fu_780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln379_reg_1569 <= icmp_ln379_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_1_fu_839_p2 == 1'd0) & (icmp_ln1049_1_fu_831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_1_reg_1587 <= tmp_last_V_1_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_2_fu_890_p2 == 1'd0) & (icmp_ln1049_2_fu_882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_2_reg_1601 <= tmp_last_V_2_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_3_fu_941_p2 == 1'd0) & (icmp_ln1049_3_fu_933_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_3_reg_1615 <= tmp_last_V_3_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_4_fu_992_p2 == 1'd0) & (icmp_ln1049_4_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_4_reg_1629 <= tmp_last_V_4_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_5_fu_1043_p2 == 1'd0) & (icmp_ln1049_5_fu_1035_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_5_reg_1643 <= tmp_last_V_5_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_6_fu_1094_p2 == 1'd0) & (icmp_ln1049_6_fu_1086_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_6_reg_1657 <= tmp_last_V_6_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_7_fu_1145_p2 == 1'd0) & (icmp_ln1049_7_fu_1137_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_7_reg_1671 <= tmp_last_V_7_fu_1151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_fu_788_p2 == 1'd0) & (icmp_ln1049_fu_780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_reg_1573 <= tmp_last_V_fu_794_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        iniq_TDATA_blk_n = iniq_TVALID;
    end else begin
        iniq_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        iniq_TREADY = 1'b1;
    end else begin
        iniq_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        instream_TDATA_blk_n = instream_TVALID;
    end else begin
        instream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        instream_TREADY = 1'b1;
    end else begin
        instream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_reg_1569 == 1'd0) & (icmp_ln1049_reg_1564 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_0_TDATA_blk_n = iq_out_0_TREADY;
    end else begin
        iq_out_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op242_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_0_TVALID = 1'b1;
    end else begin
        iq_out_0_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_1_reg_1583 == 1'd0) & (icmp_ln1049_1_reg_1578 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_1_TDATA_blk_n = iq_out_1_TREADY;
    end else begin
        iq_out_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op246_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_1_TVALID = 1'b1;
    end else begin
        iq_out_1_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_2_reg_1597 == 1'd0) & (icmp_ln1049_2_reg_1592 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_2_TDATA_blk_n = iq_out_2_TREADY;
    end else begin
        iq_out_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op250_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_2_TVALID = 1'b1;
    end else begin
        iq_out_2_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_3_reg_1611 == 1'd0) & (icmp_ln1049_3_reg_1606 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_3_TDATA_blk_n = iq_out_3_TREADY;
    end else begin
        iq_out_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op254_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_3_TVALID = 1'b1;
    end else begin
        iq_out_3_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_4_reg_1625 == 1'd0) & (icmp_ln1049_4_reg_1620 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_4_TDATA_blk_n = iq_out_4_TREADY;
    end else begin
        iq_out_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op258_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_4_TVALID = 1'b1;
    end else begin
        iq_out_4_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_5_reg_1639 == 1'd0) & (icmp_ln1049_5_reg_1634 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_5_TDATA_blk_n = iq_out_5_TREADY;
    end else begin
        iq_out_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op262_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_5_TVALID = 1'b1;
    end else begin
        iq_out_5_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_6_reg_1653 == 1'd0) & (icmp_ln1049_6_reg_1648 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_6_TDATA_blk_n = iq_out_6_TREADY;
    end else begin
        iq_out_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op266_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_6_TVALID = 1'b1;
    end else begin
        iq_out_6_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln379_7_reg_1667 == 1'd0) & (icmp_ln1049_7_reg_1662 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        iq_out_7_TDATA_blk_n = iq_out_7_TREADY;
    end else begin
        iq_out_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op270_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_7_TVALID = 1'b1;
    end else begin
        iq_out_7_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_0_ce0 = icmp_ln1049_reg_1564;
    end else begin
        iqprereg_Array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_0_we0 = icmp_ln1049_reg_1564;
    end else begin
        iqprereg_Array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_1_ce0 = icmp_ln1049_1_reg_1578;
    end else begin
        iqprereg_Array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_1_we0 = icmp_ln1049_1_reg_1578;
    end else begin
        iqprereg_Array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_2_ce0 = icmp_ln1049_2_reg_1592;
    end else begin
        iqprereg_Array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_2_we0 = icmp_ln1049_2_reg_1592;
    end else begin
        iqprereg_Array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_3_ce0 = icmp_ln1049_3_reg_1606;
    end else begin
        iqprereg_Array_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_3_we0 = icmp_ln1049_3_reg_1606;
    end else begin
        iqprereg_Array_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_4_ce0 = icmp_ln1049_4_reg_1620;
    end else begin
        iqprereg_Array_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_4_we0 = icmp_ln1049_4_reg_1620;
    end else begin
        iqprereg_Array_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_5_ce0 = icmp_ln1049_5_reg_1634;
    end else begin
        iqprereg_Array_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_5_we0 = icmp_ln1049_5_reg_1634;
    end else begin
        iqprereg_Array_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_6_ce0 = icmp_ln1049_6_reg_1648;
    end else begin
        iqprereg_Array_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_6_we0 = icmp_ln1049_6_reg_1648;
    end else begin
        iqprereg_Array_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_7_ce0 = icmp_ln1049_7_reg_1662;
    end else begin
        iqprereg_Array_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqprereg_Array_7_we0 = icmp_ln1049_7_reg_1662;
    end else begin
        iqprereg_Array_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln407_1_fu_851_p2 = ($signed(empty_21_fu_238) + $signed(8'd255));

assign add_ln407_2_fu_902_p2 = ($signed(empty_22_fu_242) + $signed(8'd255));

assign add_ln407_3_fu_953_p2 = ($signed(empty_23_fu_246) + $signed(8'd255));

assign add_ln407_4_fu_1004_p2 = ($signed(empty_24_fu_250) + $signed(8'd255));

assign add_ln407_5_fu_1055_p2 = ($signed(empty_25_fu_254) + $signed(8'd255));

assign add_ln407_6_fu_1106_p2 = ($signed(empty_26_fu_258) + $signed(8'd255));

assign add_ln407_7_fu_1157_p2 = ($signed(empty_27_fu_262) + $signed(8'd255));

assign add_ln407_fu_800_p2 = ($signed(empty_fu_234) + $signed(8'd255));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((iq_out_7_TREADY == 1'b0) & (ap_predicate_op270_write_state3 == 1'b1)) | ((iq_out_6_TREADY == 1'b0) & (ap_predicate_op266_write_state3 == 1'b1)) | ((iq_out_5_TREADY == 1'b0) & (ap_predicate_op262_write_state3 == 1'b1)) | ((iq_out_4_TREADY == 1'b0) & (ap_predicate_op258_write_state3 == 1'b1)) | ((iq_out_3_TREADY == 1'b0) & (ap_predicate_op254_write_state3 == 1'b1)) | ((iq_out_2_TREADY == 1'b0) & (ap_predicate_op250_write_state3 == 1'b1)) | ((iq_out_1_TREADY == 1'b0) & (ap_predicate_op246_write_state3 == 1'b1)) | ((iq_out_0_TREADY == 1'b0) & (ap_predicate_op242_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((iniq_TVALID == 1'b0) | (instream_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((iq_out_7_TREADY == 1'b0) & (ap_predicate_op270_write_state3 == 1'b1)) | ((iq_out_6_TREADY == 1'b0) & (ap_predicate_op266_write_state3 == 1'b1)) | ((iq_out_5_TREADY == 1'b0) & (ap_predicate_op262_write_state3 == 1'b1)) | ((iq_out_4_TREADY == 1'b0) & (ap_predicate_op258_write_state3 == 1'b1)) | ((iq_out_3_TREADY == 1'b0) & (ap_predicate_op254_write_state3 == 1'b1)) | ((iq_out_2_TREADY == 1'b0) & (ap_predicate_op250_write_state3 == 1'b1)) | ((iq_out_1_TREADY == 1'b0) & (ap_predicate_op246_write_state3 == 1'b1)) | ((iq_out_0_TREADY == 1'b0) & (ap_predicate_op242_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((iniq_TVALID == 1'b0) | (instream_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((iq_out_7_TREADY == 1'b0) & (ap_predicate_op270_write_state3 == 1'b1)) | ((iq_out_6_TREADY == 1'b0) & (ap_predicate_op266_write_state3 == 1'b1)) | ((iq_out_5_TREADY == 1'b0) & (ap_predicate_op262_write_state3 == 1'b1)) | ((iq_out_4_TREADY == 1'b0) & (ap_predicate_op258_write_state3 == 1'b1)) | ((iq_out_3_TREADY == 1'b0) & (ap_predicate_op254_write_state3 == 1'b1)) | ((iq_out_2_TREADY == 1'b0) & (ap_predicate_op250_write_state3 == 1'b1)) | ((iq_out_1_TREADY == 1'b0) & (ap_predicate_op246_write_state3 == 1'b1)) | ((iq_out_0_TREADY == 1'b0) & (ap_predicate_op242_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((iniq_TVALID == 1'b0) | (instream_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((iniq_TVALID == 1'b0) | (instream_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = (((iq_out_7_TREADY == 1'b0) & (ap_predicate_op270_write_state3 == 1'b1)) | ((iq_out_6_TREADY == 1'b0) & (ap_predicate_op266_write_state3 == 1'b1)) | ((iq_out_5_TREADY == 1'b0) & (ap_predicate_op262_write_state3 == 1'b1)) | ((iq_out_4_TREADY == 1'b0) & (ap_predicate_op258_write_state3 == 1'b1)) | ((iq_out_3_TREADY == 1'b0) & (ap_predicate_op254_write_state3 == 1'b1)) | ((iq_out_2_TREADY == 1'b0) & (ap_predicate_op250_write_state3 == 1'b1)) | ((iq_out_1_TREADY == 1'b0) & (ap_predicate_op246_write_state3 == 1'b1)) | ((iq_out_0_TREADY == 1'b0) & (ap_predicate_op242_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((iq_out_7_TREADY == 1'b0) & (ap_predicate_op270_write_state3 == 1'b1)) | ((iq_out_6_TREADY == 1'b0) & (ap_predicate_op266_write_state3 == 1'b1)) | ((iq_out_5_TREADY == 1'b0) & (ap_predicate_op262_write_state3 == 1'b1)) | ((iq_out_4_TREADY == 1'b0) & (ap_predicate_op258_write_state3 == 1'b1)) | ((iq_out_3_TREADY == 1'b0) & (ap_predicate_op254_write_state3 == 1'b1)) | ((iq_out_2_TREADY == 1'b0) & (ap_predicate_op250_write_state3 == 1'b1)) | ((iq_out_1_TREADY == 1'b0) & (ap_predicate_op246_write_state3 == 1'b1)) | ((iq_out_0_TREADY == 1'b0) & (ap_predicate_op242_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_898 = ((icmp_ln1049_fu_780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_905 = ((icmp_ln1049_1_fu_831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_912 = ((icmp_ln1049_2_fu_882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_919 = ((icmp_ln1049_3_fu_933_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_926 = ((icmp_ln1049_4_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_933 = ((icmp_ln1049_5_fu_1035_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_940 = ((icmp_ln1049_6_fu_1086_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_947 = ((icmp_ln1049_7_fu_1137_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op242_write_state3 = ((icmp_ln379_reg_1569 == 1'd0) & (icmp_ln1049_reg_1564 == 1'd1));
end

always @ (*) begin
    ap_predicate_op246_write_state3 = ((icmp_ln379_1_reg_1583 == 1'd0) & (icmp_ln1049_1_reg_1578 == 1'd1));
end

always @ (*) begin
    ap_predicate_op250_write_state3 = ((icmp_ln379_2_reg_1597 == 1'd0) & (icmp_ln1049_2_reg_1592 == 1'd1));
end

always @ (*) begin
    ap_predicate_op254_write_state3 = ((icmp_ln379_3_reg_1611 == 1'd0) & (icmp_ln1049_3_reg_1606 == 1'd1));
end

always @ (*) begin
    ap_predicate_op258_write_state3 = ((icmp_ln379_4_reg_1625 == 1'd0) & (icmp_ln1049_4_reg_1620 == 1'd1));
end

always @ (*) begin
    ap_predicate_op262_write_state3 = ((icmp_ln379_5_reg_1639 == 1'd0) & (icmp_ln1049_5_reg_1634 == 1'd1));
end

always @ (*) begin
    ap_predicate_op266_write_state3 = ((icmp_ln379_6_reg_1653 == 1'd0) & (icmp_ln1049_6_reg_1648 == 1'd1));
end

always @ (*) begin
    ap_predicate_op270_write_state3 = ((icmp_ln379_7_reg_1667 == 1'd0) & (icmp_ln1049_7_reg_1662 == 1'd1));
end

assign ap_ready = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign group_V_fu_766_p1 = instream_TUSER[8:0];

assign icmp_ln1049_1_fu_831_p2 = ((gid_V_1_reg_1433 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_2_fu_882_p2 = ((gid_V_2_reg_1438 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_3_fu_933_p2 = ((gid_V_3_reg_1443 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_4_fu_984_p2 = ((gid_V_4_reg_1448 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_5_fu_1035_p2 = ((gid_V_5_reg_1453 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_6_fu_1086_p2 = ((gid_V_6_reg_1458 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_7_fu_1137_p2 = ((gid_V_7_reg_1463 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_780_p2 = ((gid_V_reg_1428 == group_V_fu_766_p1) ? 1'b1 : 1'b0);

assign icmp_ln379_1_fu_839_p2 = ((empty_21_fu_238 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_2_fu_890_p2 = ((empty_22_fu_242 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_3_fu_941_p2 = ((empty_23_fu_246 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_4_fu_992_p2 = ((empty_24_fu_250 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_5_fu_1043_p2 = ((empty_25_fu_254 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_6_fu_1094_p2 = ((empty_26_fu_258 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_7_fu_1145_p2 = ((empty_27_fu_262 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_fu_788_p2 = ((empty_fu_234 == 8'd0) ? 1'b1 : 1'b0);

assign iq_out_0_TDATA = iqprereg_Array_0_q0;

assign iq_out_0_TKEEP = 4'd0;

assign iq_out_0_TLAST = tmp_last_V_reg_1573;

assign iq_out_0_TSTRB = 4'd0;

assign iq_out_0_TUSER = 3'd0;

assign iq_out_1_TDATA = iqprereg_Array_1_q0;

assign iq_out_1_TKEEP = 4'd0;

assign iq_out_1_TLAST = tmp_last_V_1_reg_1587;

assign iq_out_1_TSTRB = 4'd0;

assign iq_out_1_TUSER = 3'd1;

assign iq_out_2_TDATA = iqprereg_Array_2_q0;

assign iq_out_2_TKEEP = 4'd0;

assign iq_out_2_TLAST = tmp_last_V_2_reg_1601;

assign iq_out_2_TSTRB = 4'd0;

assign iq_out_2_TUSER = 3'd2;

assign iq_out_3_TDATA = iqprereg_Array_3_q0;

assign iq_out_3_TKEEP = 4'd0;

assign iq_out_3_TLAST = tmp_last_V_3_reg_1615;

assign iq_out_3_TSTRB = 4'd0;

assign iq_out_3_TUSER = 3'd3;

assign iq_out_4_TDATA = iqprereg_Array_4_q0;

assign iq_out_4_TKEEP = 4'd0;

assign iq_out_4_TLAST = tmp_last_V_4_reg_1629;

assign iq_out_4_TSTRB = 4'd0;

assign iq_out_4_TUSER = 3'd4;

assign iq_out_5_TDATA = iqprereg_Array_5_q0;

assign iq_out_5_TKEEP = 4'd0;

assign iq_out_5_TLAST = tmp_last_V_5_reg_1643;

assign iq_out_5_TSTRB = 4'd0;

assign iq_out_5_TUSER = 3'd5;

assign iq_out_6_TDATA = iqprereg_Array_6_q0;

assign iq_out_6_TKEEP = 4'd0;

assign iq_out_6_TLAST = tmp_last_V_6_reg_1657;

assign iq_out_6_TSTRB = 4'd0;

assign iq_out_6_TUSER = 3'd6;

assign iq_out_7_TDATA = iqprereg_Array_7_q0;

assign iq_out_7_TKEEP = 4'd0;

assign iq_out_7_TLAST = tmp_last_V_7_reg_1671;

assign iq_out_7_TSTRB = 4'd0;

assign iq_out_7_TUSER = 3'd7;

assign iqprereg_Array_0_address0 = 64'd29;

assign iqprereg_Array_1_address0 = 64'd29;

assign iqprereg_Array_2_address0 = 64'd29;

assign iqprereg_Array_3_address0 = 64'd29;

assign iqprereg_Array_4_address0 = 64'd29;

assign iqprereg_Array_5_address0 = 64'd29;

assign iqprereg_Array_6_address0 = 64'd29;

assign iqprereg_Array_7_address0 = 64'd29;

assign lane_V_1_fu_696_p1 = monitor_1[1:0];

assign lane_V_2_fu_700_p1 = monitor_2[1:0];

assign lane_V_3_fu_704_p1 = monitor_3[1:0];

assign lane_V_4_fu_708_p1 = monitor_4[1:0];

assign lane_V_5_fu_712_p1 = monitor_5[1:0];

assign lane_V_6_fu_716_p1 = monitor_6[1:0];

assign lane_V_7_fu_720_p1 = monitor_7[1:0];

assign lane_V_fu_692_p1 = monitor_0[1:0];

assign p_Result_1_fu_862_p3 = trigger_V_fu_770_p4[lane_V_1_reg_1474];

assign p_Result_2_fu_913_p3 = trigger_V_fu_770_p4[lane_V_2_reg_1480];

assign p_Result_3_fu_964_p3 = trigger_V_fu_770_p4[lane_V_3_reg_1486];

assign p_Result_4_fu_1015_p3 = trigger_V_fu_770_p4[lane_V_4_reg_1492];

assign p_Result_5_fu_1066_p3 = trigger_V_fu_770_p4[lane_V_5_reg_1498];

assign p_Result_6_fu_1117_p3 = trigger_V_fu_770_p4[lane_V_6_reg_1504];

assign p_Result_7_fu_1168_p3 = trigger_V_fu_770_p4[lane_V_7_reg_1510];

assign p_Result_s_fu_811_p3 = trigger_V_fu_770_p4[lane_V_reg_1468];

assign select_ln399_1_fu_869_p3 = ((p_Result_1_fu_862_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_2_fu_920_p3 = ((p_Result_2_fu_913_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_3_fu_971_p3 = ((p_Result_3_fu_964_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_4_fu_1022_p3 = ((p_Result_4_fu_1015_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_5_fu_1073_p3 = ((p_Result_5_fu_1066_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_6_fu_1124_p3 = ((p_Result_6_fu_1117_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_7_fu_1175_p3 = ((p_Result_7_fu_1168_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln399_fu_818_p3 = ((p_Result_s_fu_811_p3[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign tmp_last_V_1_fu_845_p2 = ((empty_21_fu_238 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_2_fu_896_p2 = ((empty_22_fu_242 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_3_fu_947_p2 = ((empty_23_fu_246 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_4_fu_998_p2 = ((empty_24_fu_250 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_5_fu_1049_p2 = ((empty_25_fu_254 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_6_fu_1100_p2 = ((empty_26_fu_258 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_7_fu_1151_p2 = ((empty_27_fu_262 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_fu_794_p2 = ((empty_fu_234 == 8'd1) ? 1'b1 : 1'b0);

assign trigger_V_fu_770_p4 = {{instream_TUSER[12:9]}};

assign x_0_fu_732_p1 = iniq_TDATA[31:0];


// synthesis translate_off
`include "postage_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //postage

