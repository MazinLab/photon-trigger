-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity analyze_pulse is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    group_V : IN STD_LOGIC_VECTOR (8 downto 0);
    trigdata_0_phase_V_s : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_1_phase_V_s : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_2_phase_V_s : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_3_phase_V_s : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_0_baseline : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_1_baseline : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_2_baseline : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_3_baseline : IN STD_LOGIC_VECTOR (15 downto 0);
    trigdata_0_trigger_s : IN STD_LOGIC;
    trigdata_1_trigger_s : IN STD_LOGIC;
    trigdata_2_trigger_s : IN STD_LOGIC;
    trigdata_3_trigger_s : IN STD_LOGIC;
    holdoff_V : IN STD_LOGIC_VECTOR (9 downto 0);
    timestamp_V : IN STD_LOGIC_VECTOR (63 downto 0);
    pulsedata_V_0_din : OUT STD_LOGIC_VECTOR (124 downto 0);
    pulsedata_V_0_full_n : IN STD_LOGIC;
    pulsedata_V_0_write : OUT STD_LOGIC;
    pulsedata_V_1_din : OUT STD_LOGIC_VECTOR (124 downto 0);
    pulsedata_V_1_full_n : IN STD_LOGIC;
    pulsedata_V_1_write : OUT STD_LOGIC;
    pulsedata_V_2_din : OUT STD_LOGIC_VECTOR (124 downto 0);
    pulsedata_V_2_full_n : IN STD_LOGIC;
    pulsedata_V_2_write : OUT STD_LOGIC;
    pulsedata_V_3_din : OUT STD_LOGIC_VECTOR (124 downto 0);
    pulsedata_V_3_full_n : IN STD_LOGIC;
    pulsedata_V_3_write : OUT STD_LOGIC );
end;


architecture behav of analyze_pulse is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal lastpulse_peak_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_start_V_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lastpulse_peak_time_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_stop_V_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_baseline_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_trigger_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal pulsedb_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_0_ce0 : STD_LOGIC;
    signal pulsedb_0_q0 : STD_LOGIC_VECTOR (116 downto 0);
    signal pulsedb_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_0_ce1 : STD_LOGIC;
    signal pulsedb_0_we1 : STD_LOGIC;
    signal pulsedb_0_d1 : STD_LOGIC_VECTOR (116 downto 0);
    signal lastpulse_peak_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_start_V_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lastpulse_peak_time_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_stop_V_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_baseline_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_trigger_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal pulsedb_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_1_ce0 : STD_LOGIC;
    signal pulsedb_1_q0 : STD_LOGIC_VECTOR (116 downto 0);
    signal pulsedb_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_1_ce1 : STD_LOGIC;
    signal pulsedb_1_we1 : STD_LOGIC;
    signal pulsedb_1_d1 : STD_LOGIC_VECTOR (116 downto 0);
    signal lastpulse_peak_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_start_V_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lastpulse_peak_time_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_stop_V_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_baseline_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_trigger_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal pulsedb_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_2_ce0 : STD_LOGIC;
    signal pulsedb_2_q0 : STD_LOGIC_VECTOR (116 downto 0);
    signal pulsedb_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_2_ce1 : STD_LOGIC;
    signal pulsedb_2_we1 : STD_LOGIC;
    signal pulsedb_2_d1 : STD_LOGIC_VECTOR (116 downto 0);
    signal lastpulse_peak_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_start_V_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lastpulse_peak_time_s : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_stop_V_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal lastpulse_baseline_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lastpulse_trigger_3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal pulsedb_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_3_ce0 : STD_LOGIC;
    signal pulsedb_3_q0 : STD_LOGIC_VECTOR (116 downto 0);
    signal pulsedb_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pulsedb_3_ce1 : STD_LOGIC;
    signal pulsedb_3_we1 : STD_LOGIC;
    signal pulsedb_3_d1 : STD_LOGIC_VECTOR (116 downto 0);
    signal timestamp_V_read_reg_1524 : STD_LOGIC_VECTOR (63 downto 0);
    signal timestamp_V_read_reg_1524_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal timestamp_V_read_reg_1524_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal timestamp_V_read_reg_1524_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal holdoff_V_read_reg_1533 : STD_LOGIC_VECTOR (9 downto 0);
    signal holdoff_V_read_reg_1533_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal holdoff_V_read_reg_1533_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trigdata_3_trigger_1_reg_1538 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_3_trigger_1_reg_1538_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_3_trigger_1_reg_1538_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_3_trigger_1_reg_1538_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_2_trigger_1_reg_1548 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_2_trigger_1_reg_1548_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_2_trigger_1_reg_1548_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_2_trigger_1_reg_1548_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_1_trigger_1_reg_1558 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_1_trigger_1_reg_1558_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_1_trigger_1_reg_1558_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_1_trigger_1_reg_1558_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_0_trigger_1_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_0_trigger_1_reg_1568_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_0_trigger_1_reg_1568_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_0_trigger_1_reg_1568_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trigdata_3_baseline_1_reg_1578 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_baseline_1_reg_1578_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_baseline_1_reg_1578_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_baseline_1_reg_1578_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_baseline_1_reg_1583 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_baseline_1_reg_1583_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_baseline_1_reg_1583_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_baseline_1_reg_1583_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_baseline_1_reg_1588 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_baseline_1_reg_1588_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_baseline_1_reg_1588_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_baseline_1_reg_1588_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_baseline_1_reg_1593 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_baseline_1_reg_1593_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_baseline_1_reg_1593_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_baseline_1_reg_1593_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_phase_V_1_reg_1598 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_phase_V_1_reg_1598_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_phase_V_1_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_phase_V_1_reg_1605_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_phase_V_1_reg_1612 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_phase_V_1_reg_1612_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_phase_V_1_reg_1619 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_phase_V_1_reg_1619_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal group_V_read_reg_1626 : STD_LOGIC_VECTOR (8 downto 0);
    signal group_V_read_reg_1626_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln203_fu_386_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_reg_1655 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_reg_1655_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_reg_1655_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_start_V_load_reg_1664 : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_reg_1664_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_reg_1664_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_peak_time_V_s_reg_1672 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_s_reg_1672_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_s_reg_1679 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_s_reg_1679_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_baseline_V_l_reg_1687 : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_reg_1687_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_1694 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1694_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1694_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1704 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln203_1_fu_448_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_1_reg_1709 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_1_reg_1709_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_1_reg_1709_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_start_V_load_1_reg_1718 : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_1_reg_1718_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_peak_time_V_1_reg_1726 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_1_reg_1726_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_1_reg_1733 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_1_reg_1733_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_baseline_V_l_1_reg_1741 : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_1_reg_1741_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1748_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1748_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1758 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln203_2_fu_510_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_2_reg_1763 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_2_reg_1763_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_2_reg_1763_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_start_V_load_2_reg_1772 : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_2_reg_1772_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_peak_time_V_2_reg_1780 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_2_reg_1780_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_2_reg_1787 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_2_reg_1787_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_baseline_V_l_2_reg_1795 : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_2_reg_1795_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_reg_1802 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1802_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1802_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1812 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln203_3_fu_572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_3_reg_1817 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_3_reg_1817_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln203_3_reg_1817_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_start_V_load_3_reg_1826 : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_3_reg_1826_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal pulsedb_peak_time_V_3_reg_1834 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_3_reg_1834_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_3_reg_1841 : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_3_reg_1841_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal pulsedb_baseline_V_l_3_reg_1849 : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_3_reg_1849_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_reg_1856 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1856_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1856_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1866 : STD_LOGIC_VECTOR (99 downto 0);
    signal ret_V_fu_637_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_reg_1871 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_fu_649_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_reg_1876 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_1_fu_666_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_1_reg_1881 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_2_fu_683_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_2_reg_1886 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_3_fu_700_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal sub_ln1354_3_reg_1891 : STD_LOGIC_VECTOR (64 downto 0);
    signal icmp_ln1495_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_reg_1896 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_reg_1902 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_1_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_1_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_reg_1918 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_2_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_2_reg_1928 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_reg_1934 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_3_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_3_reg_1944 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln544_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln544_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln168_fu_1003_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_V_0_l : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln168_1_fu_1009_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_lastpulse_start_V_0_s : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln168_2_fu_1015_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_time_4 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_3_fu_1021_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_stop_V_0_l : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_4_fu_1027_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_baseline_V_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln168_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_lastpulse_trigger_0_s : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln168_5_fu_1153_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_V_1_l : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln168_6_fu_1159_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_lastpulse_start_V_1_s : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln168_7_fu_1165_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_time_5 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_8_fu_1171_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_stop_V_1_l : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_9_fu_1177_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_baseline_V_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln168_1_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_lastpulse_trigger_1_s : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln168_10_fu_1303_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_V_2_l : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln168_11_fu_1309_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_lastpulse_start_V_2_s : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln168_12_fu_1315_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_time_6 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_13_fu_1321_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_stop_V_2_l : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_14_fu_1327_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_baseline_V_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln168_2_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_lastpulse_trigger_2_s : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln168_15_fu_1453_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_V_3_l : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln168_16_fu_1459_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_lastpulse_start_V_3_s : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln168_17_fu_1465_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_peak_time_7 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_18_fu_1471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_lastpulse_stop_V_3_l : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln168_19_fu_1477_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lastpulse_baseline_V_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln168_3_fu_1483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_lastpulse_trigger_3_s : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1354_fu_634_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_fu_643_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln215_1_fu_646_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln215_2_fu_663_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln215_3_fu_680_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln215_4_fu_697_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln895_fu_766_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal select_ln159_fu_924_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_fu_934_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_1_fu_939_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln159_1_fu_929_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_2_fu_944_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_3_fu_950_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_4_fu_955_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_4_fu_991_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_fu_961_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln71_1_fu_968_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln71_2_fu_974_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln700_fu_997_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_3_fu_981_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln71_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln159_2_fu_1074_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_5_fu_1084_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_6_fu_1089_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln159_3_fu_1079_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_7_fu_1094_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_8_fu_1100_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_9_fu_1105_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_9_fu_1141_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_5_fu_1111_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln71_6_fu_1118_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln71_7_fu_1124_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln700_1_fu_1147_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_8_fu_1131_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln71_1_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln159_4_fu_1224_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_10_fu_1234_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_11_fu_1239_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln159_5_fu_1229_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_12_fu_1244_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_13_fu_1250_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_14_fu_1255_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_14_fu_1291_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_10_fu_1261_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln71_11_fu_1268_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln71_12_fu_1274_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln700_2_fu_1297_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_13_fu_1281_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln71_2_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln159_6_fu_1374_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_15_fu_1384_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_16_fu_1389_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln159_7_fu_1379_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_17_fu_1394_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln151_18_fu_1400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln151_19_fu_1405_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_19_fu_1441_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_15_fu_1411_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln71_16_fu_1418_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln71_17_fu_1424_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln700_3_fu_1447_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln71_18_fu_1431_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln71_3_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component analyze_pulse_puljbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (116 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (116 downto 0) );
    end component;



begin
    pulsedb_0_U : component analyze_pulse_puljbC
    generic map (
        DataWidth => 117,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pulsedb_0_address0,
        ce0 => pulsedb_0_ce0,
        q0 => pulsedb_0_q0,
        address1 => pulsedb_0_address1,
        ce1 => pulsedb_0_ce1,
        we1 => pulsedb_0_we1,
        d1 => pulsedb_0_d1);

    pulsedb_1_U : component analyze_pulse_puljbC
    generic map (
        DataWidth => 117,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pulsedb_1_address0,
        ce0 => pulsedb_1_ce0,
        q0 => pulsedb_1_q0,
        address1 => pulsedb_1_address1,
        ce1 => pulsedb_1_ce1,
        we1 => pulsedb_1_we1,
        d1 => pulsedb_1_d1);

    pulsedb_2_U : component analyze_pulse_puljbC
    generic map (
        DataWidth => 117,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pulsedb_2_address0,
        ce0 => pulsedb_2_ce0,
        q0 => pulsedb_2_q0,
        address1 => pulsedb_2_address1,
        ce1 => pulsedb_2_ce1,
        we1 => pulsedb_2_we1,
        d1 => pulsedb_2_d1);

    pulsedb_3_U : component analyze_pulse_puljbC
    generic map (
        DataWidth => 117,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pulsedb_3_address0,
        ce0 => pulsedb_3_ce0,
        q0 => pulsedb_3_q0,
        address1 => pulsedb_3_address1,
        ce1 => pulsedb_3_ce1,
        we1 => pulsedb_3_we1,
        d1 => pulsedb_3_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                group_V_read_reg_1626 <= group_V;
                group_V_read_reg_1626_pp0_iter1_reg <= group_V_read_reg_1626;
                holdoff_V_read_reg_1533 <= holdoff_V;
                holdoff_V_read_reg_1533_pp0_iter1_reg <= holdoff_V_read_reg_1533;
                pulsedb_baseline_V_l_1_reg_1741 <= pulsedb_1_q0(115 downto 100);
                pulsedb_baseline_V_l_2_reg_1795 <= pulsedb_2_q0(115 downto 100);
                pulsedb_baseline_V_l_3_reg_1849 <= pulsedb_3_q0(115 downto 100);
                pulsedb_baseline_V_l_reg_1687 <= pulsedb_0_q0(115 downto 100);
                pulsedb_peak_time_V_1_reg_1726 <= pulsedb_1_q0(89 downto 80);
                pulsedb_peak_time_V_2_reg_1780 <= pulsedb_2_q0(89 downto 80);
                pulsedb_peak_time_V_3_reg_1834 <= pulsedb_3_q0(89 downto 80);
                pulsedb_peak_time_V_s_reg_1672 <= pulsedb_0_q0(89 downto 80);
                pulsedb_start_V_load_1_reg_1718 <= pulsedb_1_q0(79 downto 16);
                pulsedb_start_V_load_2_reg_1772 <= pulsedb_2_q0(79 downto 16);
                pulsedb_start_V_load_3_reg_1826 <= pulsedb_3_q0(79 downto 16);
                pulsedb_start_V_load_reg_1664 <= pulsedb_0_q0(79 downto 16);
                pulsedb_stop_V_load_1_reg_1733 <= pulsedb_1_q0(99 downto 90);
                pulsedb_stop_V_load_2_reg_1787 <= pulsedb_2_q0(99 downto 90);
                pulsedb_stop_V_load_3_reg_1841 <= pulsedb_3_q0(99 downto 90);
                pulsedb_stop_V_load_s_reg_1679 <= pulsedb_0_q0(99 downto 90);
                timestamp_V_read_reg_1524 <= timestamp_V;
                timestamp_V_read_reg_1524_pp0_iter1_reg <= timestamp_V_read_reg_1524;
                tmp_36_reg_1748 <= pulsedb_1_q0(116 downto 116);
                tmp_37_reg_1802 <= pulsedb_2_q0(116 downto 116);
                tmp_38_reg_1856 <= pulsedb_3_q0(116 downto 116);
                tmp_5_reg_1704 <= pulsedb_0_q0(115 downto 16);
                tmp_7_reg_1758 <= pulsedb_1_q0(115 downto 16);
                tmp_9_reg_1812 <= pulsedb_2_q0(115 downto 16);
                tmp_reg_1694 <= pulsedb_0_q0(116 downto 116);
                tmp_s_reg_1866 <= pulsedb_3_q0(115 downto 16);
                trigdata_0_baseline_1_reg_1593 <= trigdata_0_baseline;
                trigdata_0_baseline_1_reg_1593_pp0_iter1_reg <= trigdata_0_baseline_1_reg_1593;
                trigdata_0_phase_V_1_reg_1619 <= trigdata_0_phase_V_s;
                trigdata_0_phase_V_1_reg_1619_pp0_iter1_reg <= trigdata_0_phase_V_1_reg_1619;
                trigdata_0_trigger_1_reg_1568 <= (0=>trigdata_0_trigger_s, others=>'-');
                trigdata_0_trigger_1_reg_1568_pp0_iter1_reg <= trigdata_0_trigger_1_reg_1568;
                trigdata_1_baseline_1_reg_1588 <= trigdata_1_baseline;
                trigdata_1_baseline_1_reg_1588_pp0_iter1_reg <= trigdata_1_baseline_1_reg_1588;
                trigdata_1_phase_V_1_reg_1612 <= trigdata_1_phase_V_s;
                trigdata_1_phase_V_1_reg_1612_pp0_iter1_reg <= trigdata_1_phase_V_1_reg_1612;
                trigdata_1_trigger_1_reg_1558 <= (0=>trigdata_1_trigger_s, others=>'-');
                trigdata_1_trigger_1_reg_1558_pp0_iter1_reg <= trigdata_1_trigger_1_reg_1558;
                trigdata_2_baseline_1_reg_1583 <= trigdata_2_baseline;
                trigdata_2_baseline_1_reg_1583_pp0_iter1_reg <= trigdata_2_baseline_1_reg_1583;
                trigdata_2_phase_V_1_reg_1605 <= trigdata_2_phase_V_s;
                trigdata_2_phase_V_1_reg_1605_pp0_iter1_reg <= trigdata_2_phase_V_1_reg_1605;
                trigdata_2_trigger_1_reg_1548 <= (0=>trigdata_2_trigger_s, others=>'-');
                trigdata_2_trigger_1_reg_1548_pp0_iter1_reg <= trigdata_2_trigger_1_reg_1548;
                trigdata_3_baseline_1_reg_1578 <= trigdata_3_baseline;
                trigdata_3_baseline_1_reg_1578_pp0_iter1_reg <= trigdata_3_baseline_1_reg_1578;
                trigdata_3_phase_V_1_reg_1598 <= trigdata_3_phase_V_s;
                trigdata_3_phase_V_1_reg_1598_pp0_iter1_reg <= trigdata_3_phase_V_1_reg_1598;
                trigdata_3_trigger_1_reg_1538 <= (0=>trigdata_3_trigger_s, others=>'-');
                trigdata_3_trigger_1_reg_1538_pp0_iter1_reg <= trigdata_3_trigger_1_reg_1538;
                trunc_ln203_1_reg_1709 <= trunc_ln203_1_fu_448_p1;
                trunc_ln203_2_reg_1763 <= trunc_ln203_2_fu_510_p1;
                trunc_ln203_3_reg_1817 <= trunc_ln203_3_fu_572_p1;
                trunc_ln203_reg_1655 <= trunc_ln203_fu_386_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                holdoff_V_read_reg_1533_pp0_iter2_reg <= holdoff_V_read_reg_1533_pp0_iter1_reg;
                icmp_ln1495_1_reg_1912 <= icmp_ln1495_1_fu_815_p2;
                icmp_ln1495_2_reg_1928 <= icmp_ln1495_2_fu_865_p2;
                icmp_ln1495_3_reg_1944 <= icmp_ln1495_3_fu_915_p2;
                icmp_ln1495_reg_1896 <= icmp_ln1495_fu_762_p2;
                icmp_ln895_1_reg_1918 <= icmp_ln895_1_fu_819_p2;
                icmp_ln895_2_reg_1934 <= icmp_ln895_2_fu_869_p2;
                icmp_ln895_3_reg_1950 <= icmp_ln895_3_fu_919_p2;
                icmp_ln895_reg_1902 <= icmp_ln895_fu_769_p2;
                pulsedb_baseline_V_l_1_reg_1741_pp0_iter2_reg <= pulsedb_baseline_V_l_1_reg_1741;
                pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg <= pulsedb_baseline_V_l_1_reg_1741_pp0_iter2_reg;
                pulsedb_baseline_V_l_2_reg_1795_pp0_iter2_reg <= pulsedb_baseline_V_l_2_reg_1795;
                pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg <= pulsedb_baseline_V_l_2_reg_1795_pp0_iter2_reg;
                pulsedb_baseline_V_l_3_reg_1849_pp0_iter2_reg <= pulsedb_baseline_V_l_3_reg_1849;
                pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg <= pulsedb_baseline_V_l_3_reg_1849_pp0_iter2_reg;
                pulsedb_baseline_V_l_reg_1687_pp0_iter2_reg <= pulsedb_baseline_V_l_reg_1687;
                pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg <= pulsedb_baseline_V_l_reg_1687_pp0_iter2_reg;
                pulsedb_peak_time_V_1_reg_1726_pp0_iter2_reg <= pulsedb_peak_time_V_1_reg_1726;
                pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg <= pulsedb_peak_time_V_1_reg_1726_pp0_iter2_reg;
                pulsedb_peak_time_V_2_reg_1780_pp0_iter2_reg <= pulsedb_peak_time_V_2_reg_1780;
                pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg <= pulsedb_peak_time_V_2_reg_1780_pp0_iter2_reg;
                pulsedb_peak_time_V_3_reg_1834_pp0_iter2_reg <= pulsedb_peak_time_V_3_reg_1834;
                pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg <= pulsedb_peak_time_V_3_reg_1834_pp0_iter2_reg;
                pulsedb_peak_time_V_s_reg_1672_pp0_iter2_reg <= pulsedb_peak_time_V_s_reg_1672;
                pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg <= pulsedb_peak_time_V_s_reg_1672_pp0_iter2_reg;
                pulsedb_start_V_load_1_reg_1718_pp0_iter2_reg <= pulsedb_start_V_load_1_reg_1718;
                pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg <= pulsedb_start_V_load_1_reg_1718_pp0_iter2_reg;
                pulsedb_start_V_load_2_reg_1772_pp0_iter2_reg <= pulsedb_start_V_load_2_reg_1772;
                pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg <= pulsedb_start_V_load_2_reg_1772_pp0_iter2_reg;
                pulsedb_start_V_load_3_reg_1826_pp0_iter2_reg <= pulsedb_start_V_load_3_reg_1826;
                pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg <= pulsedb_start_V_load_3_reg_1826_pp0_iter2_reg;
                pulsedb_start_V_load_reg_1664_pp0_iter2_reg <= pulsedb_start_V_load_reg_1664;
                pulsedb_start_V_load_reg_1664_pp0_iter3_reg <= pulsedb_start_V_load_reg_1664_pp0_iter2_reg;
                pulsedb_stop_V_load_1_reg_1733_pp0_iter2_reg <= pulsedb_stop_V_load_1_reg_1733;
                pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg <= pulsedb_stop_V_load_1_reg_1733_pp0_iter2_reg;
                pulsedb_stop_V_load_2_reg_1787_pp0_iter2_reg <= pulsedb_stop_V_load_2_reg_1787;
                pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg <= pulsedb_stop_V_load_2_reg_1787_pp0_iter2_reg;
                pulsedb_stop_V_load_3_reg_1841_pp0_iter2_reg <= pulsedb_stop_V_load_3_reg_1841;
                pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg <= pulsedb_stop_V_load_3_reg_1841_pp0_iter2_reg;
                pulsedb_stop_V_load_s_reg_1679_pp0_iter2_reg <= pulsedb_stop_V_load_s_reg_1679;
                pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg <= pulsedb_stop_V_load_s_reg_1679_pp0_iter2_reg;
                ret_V_reg_1871 <= ret_V_fu_637_p2;
                sub_ln1354_1_reg_1881 <= sub_ln1354_1_fu_666_p2;
                sub_ln1354_2_reg_1886 <= sub_ln1354_2_fu_683_p2;
                sub_ln1354_3_reg_1891 <= sub_ln1354_3_fu_700_p2;
                sub_ln1354_reg_1876 <= sub_ln1354_fu_649_p2;
                timestamp_V_read_reg_1524_pp0_iter2_reg <= timestamp_V_read_reg_1524_pp0_iter1_reg;
                timestamp_V_read_reg_1524_pp0_iter3_reg <= timestamp_V_read_reg_1524_pp0_iter2_reg;
                tmp_36_reg_1748_pp0_iter2_reg <= tmp_36_reg_1748;
                tmp_36_reg_1748_pp0_iter3_reg <= tmp_36_reg_1748_pp0_iter2_reg;
                tmp_37_reg_1802_pp0_iter2_reg <= tmp_37_reg_1802;
                tmp_37_reg_1802_pp0_iter3_reg <= tmp_37_reg_1802_pp0_iter2_reg;
                tmp_38_reg_1856_pp0_iter2_reg <= tmp_38_reg_1856;
                tmp_38_reg_1856_pp0_iter3_reg <= tmp_38_reg_1856_pp0_iter2_reg;
                tmp_reg_1694_pp0_iter2_reg <= tmp_reg_1694;
                tmp_reg_1694_pp0_iter3_reg <= tmp_reg_1694_pp0_iter2_reg;
                trigdata_0_baseline_1_reg_1593_pp0_iter2_reg <= trigdata_0_baseline_1_reg_1593_pp0_iter1_reg;
                trigdata_0_baseline_1_reg_1593_pp0_iter3_reg <= trigdata_0_baseline_1_reg_1593_pp0_iter2_reg;
                trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg <= trigdata_0_phase_V_1_reg_1619_pp0_iter1_reg;
                trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg <= trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg;
                trigdata_0_trigger_1_reg_1568_pp0_iter2_reg <= trigdata_0_trigger_1_reg_1568_pp0_iter1_reg;
                trigdata_0_trigger_1_reg_1568_pp0_iter3_reg <= trigdata_0_trigger_1_reg_1568_pp0_iter2_reg;
                trigdata_1_baseline_1_reg_1588_pp0_iter2_reg <= trigdata_1_baseline_1_reg_1588_pp0_iter1_reg;
                trigdata_1_baseline_1_reg_1588_pp0_iter3_reg <= trigdata_1_baseline_1_reg_1588_pp0_iter2_reg;
                trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg <= trigdata_1_phase_V_1_reg_1612_pp0_iter1_reg;
                trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg <= trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg;
                trigdata_1_trigger_1_reg_1558_pp0_iter2_reg <= trigdata_1_trigger_1_reg_1558_pp0_iter1_reg;
                trigdata_1_trigger_1_reg_1558_pp0_iter3_reg <= trigdata_1_trigger_1_reg_1558_pp0_iter2_reg;
                trigdata_2_baseline_1_reg_1583_pp0_iter2_reg <= trigdata_2_baseline_1_reg_1583_pp0_iter1_reg;
                trigdata_2_baseline_1_reg_1583_pp0_iter3_reg <= trigdata_2_baseline_1_reg_1583_pp0_iter2_reg;
                trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg <= trigdata_2_phase_V_1_reg_1605_pp0_iter1_reg;
                trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg <= trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg;
                trigdata_2_trigger_1_reg_1548_pp0_iter2_reg <= trigdata_2_trigger_1_reg_1548_pp0_iter1_reg;
                trigdata_2_trigger_1_reg_1548_pp0_iter3_reg <= trigdata_2_trigger_1_reg_1548_pp0_iter2_reg;
                trigdata_3_baseline_1_reg_1578_pp0_iter2_reg <= trigdata_3_baseline_1_reg_1578_pp0_iter1_reg;
                trigdata_3_baseline_1_reg_1578_pp0_iter3_reg <= trigdata_3_baseline_1_reg_1578_pp0_iter2_reg;
                trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg <= trigdata_3_phase_V_1_reg_1598_pp0_iter1_reg;
                trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg <= trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg;
                trigdata_3_trigger_1_reg_1538_pp0_iter2_reg <= trigdata_3_trigger_1_reg_1538_pp0_iter1_reg;
                trigdata_3_trigger_1_reg_1538_pp0_iter3_reg <= trigdata_3_trigger_1_reg_1538_pp0_iter2_reg;
                trunc_ln203_1_reg_1709_pp0_iter2_reg <= trunc_ln203_1_reg_1709;
                trunc_ln203_1_reg_1709_pp0_iter3_reg <= trunc_ln203_1_reg_1709_pp0_iter2_reg;
                trunc_ln203_2_reg_1763_pp0_iter2_reg <= trunc_ln203_2_reg_1763;
                trunc_ln203_2_reg_1763_pp0_iter3_reg <= trunc_ln203_2_reg_1763_pp0_iter2_reg;
                trunc_ln203_3_reg_1817_pp0_iter2_reg <= trunc_ln203_3_reg_1817;
                trunc_ln203_3_reg_1817_pp0_iter3_reg <= trunc_ln203_3_reg_1817_pp0_iter2_reg;
                trunc_ln203_reg_1655_pp0_iter2_reg <= trunc_ln203_reg_1655;
                trunc_ln203_reg_1655_pp0_iter3_reg <= trunc_ln203_reg_1655_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                lastpulse_baseline_V <= select_ln168_4_fu_1027_p3;
                lastpulse_baseline_V_1 <= select_ln168_9_fu_1177_p3;
                lastpulse_baseline_V_2 <= select_ln168_14_fu_1327_p3;
                lastpulse_baseline_V_3 <= select_ln168_19_fu_1477_p3;
                lastpulse_peak_V_0 <= select_ln168_fu_1003_p3;
                lastpulse_peak_V_1 <= select_ln168_5_fu_1153_p3;
                lastpulse_peak_V_2 <= select_ln168_10_fu_1303_p3;
                lastpulse_peak_V_3 <= select_ln168_15_fu_1453_p3;
                lastpulse_peak_time_1 <= select_ln168_12_fu_1315_p3;
                lastpulse_peak_time_2 <= select_ln168_7_fu_1165_p3;
                lastpulse_peak_time_3 <= select_ln168_2_fu_1015_p3;
                lastpulse_peak_time_s <= select_ln168_17_fu_1465_p3;
                lastpulse_start_V_0 <= select_ln168_1_fu_1009_p3;
                lastpulse_start_V_1 <= select_ln168_6_fu_1159_p3;
                lastpulse_start_V_2 <= select_ln168_11_fu_1309_p3;
                lastpulse_start_V_3 <= select_ln168_16_fu_1459_p3;
                lastpulse_stop_V_0 <= select_ln168_3_fu_1021_p3;
                lastpulse_stop_V_1 <= select_ln168_8_fu_1171_p3;
                lastpulse_stop_V_2 <= select_ln168_13_fu_1321_p3;
                lastpulse_stop_V_3 <= select_ln168_18_fu_1471_p3;
                lastpulse_trigger_0 <= and_ln168_fu_1033_p2;
                lastpulse_trigger_1 <= and_ln168_1_fu_1183_p2;
                lastpulse_trigger_2 <= and_ln168_2_fu_1333_p2;
                lastpulse_trigger_3 <= and_ln168_3_fu_1483_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_1_fu_1147_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(select_ln71_9_fu_1141_p3));
    add_ln700_2_fu_1297_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(select_ln71_14_fu_1291_p3));
    add_ln700_3_fu_1447_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(select_ln71_19_fu_1441_p3));
    add_ln700_fu_997_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(select_ln71_4_fu_991_p3));
    and_ln168_1_fu_1183_p2 <= (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg and or_ln71_1_fu_1137_p2);
    and_ln168_2_fu_1333_p2 <= (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg and or_ln71_2_fu_1287_p2);
    and_ln168_3_fu_1483_p2 <= (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg and or_ln71_3_fu_1437_p2);
    and_ln168_fu_1033_p2 <= (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg and or_ln71_fu_987_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_baseline_V_4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_baseline_V, select_ln168_4_fu_1027_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_baseline_V_4 <= select_ln168_4_fu_1027_p3;
        else 
            ap_sig_allocacmp_lastpulse_baseline_V_4 <= lastpulse_baseline_V;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_baseline_V_5_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_baseline_V_1, select_ln168_9_fu_1177_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_baseline_V_5 <= select_ln168_9_fu_1177_p3;
        else 
            ap_sig_allocacmp_lastpulse_baseline_V_5 <= lastpulse_baseline_V_1;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_baseline_V_6_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_baseline_V_2, select_ln168_14_fu_1327_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_baseline_V_6 <= select_ln168_14_fu_1327_p3;
        else 
            ap_sig_allocacmp_lastpulse_baseline_V_6 <= lastpulse_baseline_V_2;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_baseline_V_7_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_baseline_V_3, select_ln168_19_fu_1477_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_baseline_V_7 <= select_ln168_19_fu_1477_p3;
        else 
            ap_sig_allocacmp_lastpulse_baseline_V_7 <= lastpulse_baseline_V_3;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_V_0_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_V_0, select_ln168_fu_1003_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_V_0_l <= select_ln168_fu_1003_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_V_0_l <= lastpulse_peak_V_0;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_V_1_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_V_1, select_ln168_5_fu_1153_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_V_1_l <= select_ln168_5_fu_1153_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_V_1_l <= lastpulse_peak_V_1;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_V_2_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_V_2, select_ln168_10_fu_1303_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_V_2_l <= select_ln168_10_fu_1303_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_V_2_l <= lastpulse_peak_V_2;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_V_3_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_V_3, select_ln168_15_fu_1453_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_V_3_l <= select_ln168_15_fu_1453_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_V_3_l <= lastpulse_peak_V_3;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_time_4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_time_3, select_ln168_2_fu_1015_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_time_4 <= select_ln168_2_fu_1015_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_time_4 <= lastpulse_peak_time_3;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_time_5_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_time_2, select_ln168_7_fu_1165_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_time_5 <= select_ln168_7_fu_1165_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_time_5 <= lastpulse_peak_time_2;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_time_6_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_time_1, select_ln168_12_fu_1315_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_time_6 <= select_ln168_12_fu_1315_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_time_6 <= lastpulse_peak_time_1;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_peak_time_7_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_peak_time_s, select_ln168_17_fu_1465_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_peak_time_7 <= select_ln168_17_fu_1465_p3;
        else 
            ap_sig_allocacmp_lastpulse_peak_time_7 <= lastpulse_peak_time_s;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_start_V_0_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_start_V_0, select_ln168_1_fu_1009_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_start_V_0_s <= select_ln168_1_fu_1009_p3;
        else 
            ap_sig_allocacmp_lastpulse_start_V_0_s <= lastpulse_start_V_0;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_start_V_1_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_start_V_1, select_ln168_6_fu_1159_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_start_V_1_s <= select_ln168_6_fu_1159_p3;
        else 
            ap_sig_allocacmp_lastpulse_start_V_1_s <= lastpulse_start_V_1;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_start_V_2_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_start_V_2, select_ln168_11_fu_1309_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_start_V_2_s <= select_ln168_11_fu_1309_p3;
        else 
            ap_sig_allocacmp_lastpulse_start_V_2_s <= lastpulse_start_V_2;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_start_V_3_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_start_V_3, select_ln168_16_fu_1459_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_start_V_3_s <= select_ln168_16_fu_1459_p3;
        else 
            ap_sig_allocacmp_lastpulse_start_V_3_s <= lastpulse_start_V_3;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_stop_V_0_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_stop_V_0, select_ln168_3_fu_1021_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_stop_V_0_l <= select_ln168_3_fu_1021_p3;
        else 
            ap_sig_allocacmp_lastpulse_stop_V_0_l <= lastpulse_stop_V_0;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_stop_V_1_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_stop_V_1, select_ln168_8_fu_1171_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_stop_V_1_l <= select_ln168_8_fu_1171_p3;
        else 
            ap_sig_allocacmp_lastpulse_stop_V_1_l <= lastpulse_stop_V_1;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_stop_V_2_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_stop_V_2, select_ln168_13_fu_1321_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_stop_V_2_l <= select_ln168_13_fu_1321_p3;
        else 
            ap_sig_allocacmp_lastpulse_stop_V_2_l <= lastpulse_stop_V_2;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_stop_V_3_l_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_stop_V_3, select_ln168_18_fu_1471_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_stop_V_3_l <= select_ln168_18_fu_1471_p3;
        else 
            ap_sig_allocacmp_lastpulse_stop_V_3_l <= lastpulse_stop_V_3;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_trigger_0_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_trigger_0, and_ln168_fu_1033_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_trigger_0_s <= and_ln168_fu_1033_p2;
        else 
            ap_sig_allocacmp_lastpulse_trigger_0_s <= lastpulse_trigger_0;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_trigger_1_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_trigger_1, and_ln168_1_fu_1183_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_trigger_1_s <= and_ln168_1_fu_1183_p2;
        else 
            ap_sig_allocacmp_lastpulse_trigger_1_s <= lastpulse_trigger_1;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_trigger_2_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_trigger_2, and_ln168_2_fu_1333_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_trigger_2_s <= and_ln168_2_fu_1333_p2;
        else 
            ap_sig_allocacmp_lastpulse_trigger_2_s <= lastpulse_trigger_2;
        end if; 
    end process;


    ap_sig_allocacmp_lastpulse_trigger_3_s_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, lastpulse_trigger_3, and_ln168_3_fu_1483_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lastpulse_trigger_3_s <= and_ln168_3_fu_1483_p2;
        else 
            ap_sig_allocacmp_lastpulse_trigger_3_s <= lastpulse_trigger_3;
        end if; 
    end process;

    icmp_ln1495_1_fu_815_p2 <= "1" when (signed(trunc_ln203_1_reg_1709_pp0_iter2_reg) > signed(trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg)) else "0";
    icmp_ln1495_2_fu_865_p2 <= "1" when (signed(trunc_ln203_2_reg_1763_pp0_iter2_reg) > signed(trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg)) else "0";
    icmp_ln1495_3_fu_915_p2 <= "1" when (signed(trunc_ln203_3_reg_1817_pp0_iter2_reg) > signed(trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg)) else "0";
    icmp_ln1495_fu_762_p2 <= "1" when (signed(trunc_ln203_reg_1655_pp0_iter2_reg) > signed(trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg)) else "0";
    icmp_ln895_1_fu_819_p2 <= "1" when (signed(sub_ln1354_1_reg_1881) > signed(zext_ln895_fu_766_p1)) else "0";
    icmp_ln895_2_fu_869_p2 <= "1" when (signed(sub_ln1354_2_reg_1886) > signed(zext_ln895_fu_766_p1)) else "0";
    icmp_ln895_3_fu_919_p2 <= "1" when (signed(sub_ln1354_3_reg_1891) > signed(zext_ln895_fu_766_p1)) else "0";
    icmp_ln895_fu_769_p2 <= "1" when (signed(sub_ln1354_reg_1876) > signed(zext_ln895_fu_766_p1)) else "0";
    or_ln71_1_fu_1137_p2 <= (tmp_36_reg_1748_pp0_iter3_reg or icmp_ln895_1_reg_1918);
    or_ln71_2_fu_1287_p2 <= (tmp_37_reg_1802_pp0_iter3_reg or icmp_ln895_2_reg_1934);
    or_ln71_3_fu_1437_p2 <= (tmp_38_reg_1856_pp0_iter3_reg or icmp_ln895_3_reg_1950);
    or_ln71_fu_987_p2 <= (tmp_reg_1694_pp0_iter3_reg or icmp_ln895_reg_1902);
    pulsedata_V_0_din <= ((tmp_5_reg_1704 & group_V_read_reg_1626_pp0_iter1_reg) & trunc_ln203_reg_1655);

    pulsedata_V_0_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, pulsedata_V_0_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (pulsedata_V_0_full_n = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pulsedata_V_0_write <= ap_const_logic_1;
        else 
            pulsedata_V_0_write <= ap_const_logic_0;
        end if; 
    end process;

    pulsedata_V_1_din <= ((tmp_7_reg_1758 & group_V_read_reg_1626_pp0_iter1_reg) & trunc_ln203_1_reg_1709);

    pulsedata_V_1_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, pulsedata_V_1_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (pulsedata_V_1_full_n = ap_const_logic_1))) then 
            pulsedata_V_1_write <= ap_const_logic_1;
        else 
            pulsedata_V_1_write <= ap_const_logic_0;
        end if; 
    end process;

    pulsedata_V_2_din <= ((tmp_9_reg_1812 & group_V_read_reg_1626_pp0_iter1_reg) & trunc_ln203_2_reg_1763);

    pulsedata_V_2_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, pulsedata_V_2_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (pulsedata_V_2_full_n = ap_const_logic_1))) then 
            pulsedata_V_2_write <= ap_const_logic_1;
        else 
            pulsedata_V_2_write <= ap_const_logic_0;
        end if; 
    end process;

    pulsedata_V_3_din <= ((tmp_s_reg_1866 & group_V_read_reg_1626_pp0_iter1_reg) & trunc_ln203_3_reg_1817);

    pulsedata_V_3_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, pulsedata_V_3_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (pulsedata_V_3_full_n = ap_const_logic_1))) then 
            pulsedata_V_3_write <= ap_const_logic_1;
        else 
            pulsedata_V_3_write <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_0_address0 <= zext_ln544_fu_378_p1(9 - 1 downto 0);
    pulsedb_0_address1 <= sext_ln544_fu_714_p1(9 - 1 downto 0);

    pulsedb_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pulsedb_0_ce0 <= ap_const_logic_1;
        else 
            pulsedb_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pulsedb_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_0_ce1 <= ap_const_logic_1;
        else 
            pulsedb_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_0_d1 <= (((((ap_sig_allocacmp_lastpulse_trigger_0_s & ap_sig_allocacmp_lastpulse_baseline_V_4) & ap_sig_allocacmp_lastpulse_stop_V_0_l) & ap_sig_allocacmp_lastpulse_peak_time_4) & ap_sig_allocacmp_lastpulse_start_V_0_s) & ap_sig_allocacmp_lastpulse_peak_V_0_l);

    pulsedb_0_we1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_0_we1 <= ap_const_logic_1;
        else 
            pulsedb_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_1_address0 <= zext_ln544_fu_378_p1(9 - 1 downto 0);
    pulsedb_1_address1 <= sext_ln544_fu_714_p1(9 - 1 downto 0);

    pulsedb_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pulsedb_1_ce0 <= ap_const_logic_1;
        else 
            pulsedb_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pulsedb_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_1_ce1 <= ap_const_logic_1;
        else 
            pulsedb_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_1_d1 <= (((((ap_sig_allocacmp_lastpulse_trigger_1_s & ap_sig_allocacmp_lastpulse_baseline_V_5) & ap_sig_allocacmp_lastpulse_stop_V_1_l) & ap_sig_allocacmp_lastpulse_peak_time_5) & ap_sig_allocacmp_lastpulse_start_V_1_s) & ap_sig_allocacmp_lastpulse_peak_V_1_l);

    pulsedb_1_we1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_1_we1 <= ap_const_logic_1;
        else 
            pulsedb_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_2_address0 <= zext_ln544_fu_378_p1(9 - 1 downto 0);
    pulsedb_2_address1 <= sext_ln544_fu_714_p1(9 - 1 downto 0);

    pulsedb_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pulsedb_2_ce0 <= ap_const_logic_1;
        else 
            pulsedb_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pulsedb_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_2_ce1 <= ap_const_logic_1;
        else 
            pulsedb_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_2_d1 <= (((((ap_sig_allocacmp_lastpulse_trigger_2_s & ap_sig_allocacmp_lastpulse_baseline_V_6) & ap_sig_allocacmp_lastpulse_stop_V_2_l) & ap_sig_allocacmp_lastpulse_peak_time_6) & ap_sig_allocacmp_lastpulse_start_V_2_s) & ap_sig_allocacmp_lastpulse_peak_V_2_l);

    pulsedb_2_we1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_2_we1 <= ap_const_logic_1;
        else 
            pulsedb_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_3_address0 <= zext_ln544_fu_378_p1(9 - 1 downto 0);
    pulsedb_3_address1 <= sext_ln544_fu_714_p1(9 - 1 downto 0);

    pulsedb_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pulsedb_3_ce0 <= ap_const_logic_1;
        else 
            pulsedb_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pulsedb_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_3_ce1 <= ap_const_logic_1;
        else 
            pulsedb_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pulsedb_3_d1 <= (((((ap_sig_allocacmp_lastpulse_trigger_3_s & ap_sig_allocacmp_lastpulse_baseline_V_7) & ap_sig_allocacmp_lastpulse_stop_V_3_l) & ap_sig_allocacmp_lastpulse_peak_time_7) & ap_sig_allocacmp_lastpulse_start_V_3_s) & ap_sig_allocacmp_lastpulse_peak_V_3_l);

    pulsedb_3_we1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pulsedb_3_we1 <= ap_const_logic_1;
        else 
            pulsedb_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_637_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(zext_ln1354_fu_634_p1));
    select_ln151_10_fu_1234_p3 <= 
        trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg when (icmp_ln895_2_reg_1934(0) = '1') else 
        trunc_ln203_2_reg_1763_pp0_iter3_reg;
    select_ln151_11_fu_1239_p3 <= 
        timestamp_V_read_reg_1524_pp0_iter3_reg when (icmp_ln895_2_reg_1934(0) = '1') else 
        pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg;
    select_ln151_12_fu_1244_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_2_reg_1934(0) = '1') else 
        pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg;
    select_ln151_13_fu_1250_p3 <= 
        trigdata_2_baseline_1_reg_1583_pp0_iter3_reg when (icmp_ln895_2_reg_1934(0) = '1') else 
        pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg;
    select_ln151_14_fu_1255_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_2_reg_1934(0) = '1') else 
        pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg;
    select_ln151_15_fu_1384_p3 <= 
        trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg when (icmp_ln895_3_reg_1950(0) = '1') else 
        trunc_ln203_3_reg_1817_pp0_iter3_reg;
    select_ln151_16_fu_1389_p3 <= 
        timestamp_V_read_reg_1524_pp0_iter3_reg when (icmp_ln895_3_reg_1950(0) = '1') else 
        pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg;
    select_ln151_17_fu_1394_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_3_reg_1950(0) = '1') else 
        pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg;
    select_ln151_18_fu_1400_p3 <= 
        trigdata_3_baseline_1_reg_1578_pp0_iter3_reg when (icmp_ln895_3_reg_1950(0) = '1') else 
        pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg;
    select_ln151_19_fu_1405_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_3_reg_1950(0) = '1') else 
        pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg;
    select_ln151_1_fu_939_p3 <= 
        timestamp_V_read_reg_1524_pp0_iter3_reg when (icmp_ln895_reg_1902(0) = '1') else 
        pulsedb_start_V_load_reg_1664_pp0_iter3_reg;
    select_ln151_2_fu_944_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_reg_1902(0) = '1') else 
        pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg;
    select_ln151_3_fu_950_p3 <= 
        trigdata_0_baseline_1_reg_1593_pp0_iter3_reg when (icmp_ln895_reg_1902(0) = '1') else 
        pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg;
    select_ln151_4_fu_955_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_reg_1902(0) = '1') else 
        pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg;
    select_ln151_5_fu_1084_p3 <= 
        trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg when (icmp_ln895_1_reg_1918(0) = '1') else 
        trunc_ln203_1_reg_1709_pp0_iter3_reg;
    select_ln151_6_fu_1089_p3 <= 
        timestamp_V_read_reg_1524_pp0_iter3_reg when (icmp_ln895_1_reg_1918(0) = '1') else 
        pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg;
    select_ln151_7_fu_1094_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_1_reg_1918(0) = '1') else 
        pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg;
    select_ln151_8_fu_1100_p3 <= 
        trigdata_1_baseline_1_reg_1588_pp0_iter3_reg when (icmp_ln895_1_reg_1918(0) = '1') else 
        pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg;
    select_ln151_9_fu_1105_p3 <= 
        ap_const_lv10_0 when (icmp_ln895_1_reg_1918(0) = '1') else 
        pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg;
    select_ln151_fu_934_p3 <= 
        trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg when (icmp_ln895_reg_1902(0) = '1') else 
        trunc_ln203_reg_1655_pp0_iter3_reg;
    select_ln159_1_fu_929_p3 <= 
        pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg when (icmp_ln1495_reg_1896(0) = '1') else 
        pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg;
    select_ln159_2_fu_1074_p3 <= 
        trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg when (icmp_ln1495_1_reg_1912(0) = '1') else 
        trunc_ln203_1_reg_1709_pp0_iter3_reg;
    select_ln159_3_fu_1079_p3 <= 
        pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg when (icmp_ln1495_1_reg_1912(0) = '1') else 
        pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg;
    select_ln159_4_fu_1224_p3 <= 
        trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg when (icmp_ln1495_2_reg_1928(0) = '1') else 
        trunc_ln203_2_reg_1763_pp0_iter3_reg;
    select_ln159_5_fu_1229_p3 <= 
        pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg when (icmp_ln1495_2_reg_1928(0) = '1') else 
        pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg;
    select_ln159_6_fu_1374_p3 <= 
        trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg when (icmp_ln1495_3_reg_1944(0) = '1') else 
        trunc_ln203_3_reg_1817_pp0_iter3_reg;
    select_ln159_7_fu_1379_p3 <= 
        pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg when (icmp_ln1495_3_reg_1944(0) = '1') else 
        pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg;
    select_ln159_fu_924_p3 <= 
        trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg when (icmp_ln1495_reg_1896(0) = '1') else 
        trunc_ln203_reg_1655_pp0_iter3_reg;
    select_ln168_10_fu_1303_p3 <= 
        select_ln71_10_fu_1261_p3 when (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg(0) = '1') else 
        trunc_ln203_2_reg_1763_pp0_iter3_reg;
    select_ln168_11_fu_1309_p3 <= 
        select_ln71_11_fu_1268_p3 when (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg(0) = '1') else 
        pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg;
    select_ln168_12_fu_1315_p3 <= 
        select_ln71_12_fu_1274_p3 when (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg(0) = '1') else 
        pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg;
    select_ln168_13_fu_1321_p3 <= 
        add_ln700_2_fu_1297_p2 when (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg(0) = '1') else 
        pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg;
    select_ln168_14_fu_1327_p3 <= 
        select_ln71_13_fu_1281_p3 when (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg(0) = '1') else 
        pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg;
    select_ln168_15_fu_1453_p3 <= 
        select_ln71_15_fu_1411_p3 when (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg(0) = '1') else 
        trunc_ln203_3_reg_1817_pp0_iter3_reg;
    select_ln168_16_fu_1459_p3 <= 
        select_ln71_16_fu_1418_p3 when (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg(0) = '1') else 
        pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg;
    select_ln168_17_fu_1465_p3 <= 
        select_ln71_17_fu_1424_p3 when (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg(0) = '1') else 
        pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg;
    select_ln168_18_fu_1471_p3 <= 
        add_ln700_3_fu_1447_p2 when (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg(0) = '1') else 
        pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg;
    select_ln168_19_fu_1477_p3 <= 
        select_ln71_18_fu_1431_p3 when (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg(0) = '1') else 
        pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg;
    select_ln168_1_fu_1009_p3 <= 
        select_ln71_1_fu_968_p3 when (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg(0) = '1') else 
        pulsedb_start_V_load_reg_1664_pp0_iter3_reg;
    select_ln168_2_fu_1015_p3 <= 
        select_ln71_2_fu_974_p3 when (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg(0) = '1') else 
        pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg;
    select_ln168_3_fu_1021_p3 <= 
        add_ln700_fu_997_p2 when (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg(0) = '1') else 
        pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg;
    select_ln168_4_fu_1027_p3 <= 
        select_ln71_3_fu_981_p3 when (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg(0) = '1') else 
        pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg;
    select_ln168_5_fu_1153_p3 <= 
        select_ln71_5_fu_1111_p3 when (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg(0) = '1') else 
        trunc_ln203_1_reg_1709_pp0_iter3_reg;
    select_ln168_6_fu_1159_p3 <= 
        select_ln71_6_fu_1118_p3 when (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg(0) = '1') else 
        pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg;
    select_ln168_7_fu_1165_p3 <= 
        select_ln71_7_fu_1124_p3 when (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg(0) = '1') else 
        pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg;
    select_ln168_8_fu_1171_p3 <= 
        add_ln700_1_fu_1147_p2 when (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg(0) = '1') else 
        pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg;
    select_ln168_9_fu_1177_p3 <= 
        select_ln71_8_fu_1131_p3 when (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg(0) = '1') else 
        pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg;
    select_ln168_fu_1003_p3 <= 
        select_ln71_fu_961_p3 when (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg(0) = '1') else 
        trunc_ln203_reg_1655_pp0_iter3_reg;
    select_ln71_10_fu_1261_p3 <= 
        select_ln159_4_fu_1224_p3 when (tmp_37_reg_1802_pp0_iter3_reg(0) = '1') else 
        select_ln151_10_fu_1234_p3;
    select_ln71_11_fu_1268_p3 <= 
        pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg when (tmp_37_reg_1802_pp0_iter3_reg(0) = '1') else 
        select_ln151_11_fu_1239_p3;
    select_ln71_12_fu_1274_p3 <= 
        select_ln159_5_fu_1229_p3 when (tmp_37_reg_1802_pp0_iter3_reg(0) = '1') else 
        select_ln151_12_fu_1244_p3;
    select_ln71_13_fu_1281_p3 <= 
        pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg when (tmp_37_reg_1802_pp0_iter3_reg(0) = '1') else 
        select_ln151_13_fu_1250_p3;
    select_ln71_14_fu_1291_p3 <= 
        pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg when (tmp_37_reg_1802_pp0_iter3_reg(0) = '1') else 
        select_ln151_14_fu_1255_p3;
    select_ln71_15_fu_1411_p3 <= 
        select_ln159_6_fu_1374_p3 when (tmp_38_reg_1856_pp0_iter3_reg(0) = '1') else 
        select_ln151_15_fu_1384_p3;
    select_ln71_16_fu_1418_p3 <= 
        pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg when (tmp_38_reg_1856_pp0_iter3_reg(0) = '1') else 
        select_ln151_16_fu_1389_p3;
    select_ln71_17_fu_1424_p3 <= 
        select_ln159_7_fu_1379_p3 when (tmp_38_reg_1856_pp0_iter3_reg(0) = '1') else 
        select_ln151_17_fu_1394_p3;
    select_ln71_18_fu_1431_p3 <= 
        pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg when (tmp_38_reg_1856_pp0_iter3_reg(0) = '1') else 
        select_ln151_18_fu_1400_p3;
    select_ln71_19_fu_1441_p3 <= 
        pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg when (tmp_38_reg_1856_pp0_iter3_reg(0) = '1') else 
        select_ln151_19_fu_1405_p3;
    select_ln71_1_fu_968_p3 <= 
        pulsedb_start_V_load_reg_1664_pp0_iter3_reg when (tmp_reg_1694_pp0_iter3_reg(0) = '1') else 
        select_ln151_1_fu_939_p3;
    select_ln71_2_fu_974_p3 <= 
        select_ln159_1_fu_929_p3 when (tmp_reg_1694_pp0_iter3_reg(0) = '1') else 
        select_ln151_2_fu_944_p3;
    select_ln71_3_fu_981_p3 <= 
        pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg when (tmp_reg_1694_pp0_iter3_reg(0) = '1') else 
        select_ln151_3_fu_950_p3;
    select_ln71_4_fu_991_p3 <= 
        pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg when (tmp_reg_1694_pp0_iter3_reg(0) = '1') else 
        select_ln151_4_fu_955_p3;
    select_ln71_5_fu_1111_p3 <= 
        select_ln159_2_fu_1074_p3 when (tmp_36_reg_1748_pp0_iter3_reg(0) = '1') else 
        select_ln151_5_fu_1084_p3;
    select_ln71_6_fu_1118_p3 <= 
        pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg when (tmp_36_reg_1748_pp0_iter3_reg(0) = '1') else 
        select_ln151_6_fu_1089_p3;
    select_ln71_7_fu_1124_p3 <= 
        select_ln159_3_fu_1079_p3 when (tmp_36_reg_1748_pp0_iter3_reg(0) = '1') else 
        select_ln151_7_fu_1094_p3;
    select_ln71_8_fu_1131_p3 <= 
        pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg when (tmp_36_reg_1748_pp0_iter3_reg(0) = '1') else 
        select_ln151_8_fu_1100_p3;
    select_ln71_9_fu_1141_p3 <= 
        pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg when (tmp_36_reg_1748_pp0_iter3_reg(0) = '1') else 
        select_ln151_9_fu_1105_p3;
    select_ln71_fu_961_p3 <= 
        select_ln159_fu_924_p3 when (tmp_reg_1694_pp0_iter3_reg(0) = '1') else 
        select_ln151_fu_934_p3;
        sext_ln544_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_1871),64));

    sub_ln1354_1_fu_666_p2 <= std_logic_vector(unsigned(zext_ln215_fu_643_p1) - unsigned(zext_ln215_2_fu_663_p1));
    sub_ln1354_2_fu_683_p2 <= std_logic_vector(unsigned(zext_ln215_fu_643_p1) - unsigned(zext_ln215_3_fu_680_p1));
    sub_ln1354_3_fu_700_p2 <= std_logic_vector(unsigned(zext_ln215_fu_643_p1) - unsigned(zext_ln215_4_fu_697_p1));
    sub_ln1354_fu_649_p2 <= std_logic_vector(unsigned(zext_ln215_fu_643_p1) - unsigned(zext_ln215_1_fu_646_p1));
    trunc_ln203_1_fu_448_p1 <= pulsedb_1_q0(16 - 1 downto 0);
    trunc_ln203_2_fu_510_p1 <= pulsedb_2_q0(16 - 1 downto 0);
    trunc_ln203_3_fu_572_p1 <= pulsedb_3_q0(16 - 1 downto 0);
    trunc_ln203_fu_386_p1 <= pulsedb_0_q0(16 - 1 downto 0);
    zext_ln1354_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(group_V_read_reg_1626_pp0_iter1_reg),10));
    zext_ln215_1_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pulsedb_start_V_load_reg_1664),65));
    zext_ln215_2_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pulsedb_start_V_load_1_reg_1718),65));
    zext_ln215_3_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pulsedb_start_V_load_2_reg_1772),65));
    zext_ln215_4_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pulsedb_start_V_load_3_reg_1826),65));
    zext_ln215_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(timestamp_V_read_reg_1524_pp0_iter1_reg),65));
    zext_ln544_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(group_V),64));
    zext_ln895_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(holdoff_V_read_reg_1533_pp0_iter2_reg),65));
end behav;
