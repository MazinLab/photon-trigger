// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module analyze_pulse (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        group_V,
        trigdata_0_phase_V_s,
        trigdata_1_phase_V_s,
        trigdata_2_phase_V_s,
        trigdata_3_phase_V_s,
        trigdata_0_baseline,
        trigdata_1_baseline,
        trigdata_2_baseline,
        trigdata_3_baseline,
        trigdata_0_trigger_s,
        trigdata_1_trigger_s,
        trigdata_2_trigger_s,
        trigdata_3_trigger_s,
        holdoff_V,
        timestamp_V,
        pulsedata_V_0_din,
        pulsedata_V_0_full_n,
        pulsedata_V_0_write,
        pulsedata_V_1_din,
        pulsedata_V_1_full_n,
        pulsedata_V_1_write,
        pulsedata_V_2_din,
        pulsedata_V_2_full_n,
        pulsedata_V_2_write,
        pulsedata_V_3_din,
        pulsedata_V_3_full_n,
        pulsedata_V_3_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] group_V;
input  [15:0] trigdata_0_phase_V_s;
input  [15:0] trigdata_1_phase_V_s;
input  [15:0] trigdata_2_phase_V_s;
input  [15:0] trigdata_3_phase_V_s;
input  [15:0] trigdata_0_baseline;
input  [15:0] trigdata_1_baseline;
input  [15:0] trigdata_2_baseline;
input  [15:0] trigdata_3_baseline;
input   trigdata_0_trigger_s;
input   trigdata_1_trigger_s;
input   trigdata_2_trigger_s;
input   trigdata_3_trigger_s;
input  [9:0] holdoff_V;
input  [63:0] timestamp_V;
output  [124:0] pulsedata_V_0_din;
input   pulsedata_V_0_full_n;
output   pulsedata_V_0_write;
output  [124:0] pulsedata_V_1_din;
input   pulsedata_V_1_full_n;
output   pulsedata_V_1_write;
output  [124:0] pulsedata_V_2_din;
input   pulsedata_V_2_full_n;
output   pulsedata_V_2_write;
output  [124:0] pulsedata_V_3_din;
input   pulsedata_V_3_full_n;
output   pulsedata_V_3_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pulsedata_V_0_write;
reg pulsedata_V_1_write;
reg pulsedata_V_2_write;
reg pulsedata_V_3_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] lastpulse_peak_V_0;
reg   [63:0] lastpulse_start_V_0;
reg   [9:0] lastpulse_peak_time_3;
reg   [9:0] lastpulse_stop_V_0;
reg   [15:0] lastpulse_baseline_V;
reg   [0:0] lastpulse_trigger_0;
wire   [8:0] pulsedb_0_address0;
reg    pulsedb_0_ce0;
wire   [116:0] pulsedb_0_q0;
wire   [8:0] pulsedb_0_address1;
reg    pulsedb_0_ce1;
reg    pulsedb_0_we1;
wire   [116:0] pulsedb_0_d1;
reg   [15:0] lastpulse_peak_V_1;
reg   [63:0] lastpulse_start_V_1;
reg   [9:0] lastpulse_peak_time_2;
reg   [9:0] lastpulse_stop_V_1;
reg   [15:0] lastpulse_baseline_V_1;
reg   [0:0] lastpulse_trigger_1;
wire   [8:0] pulsedb_1_address0;
reg    pulsedb_1_ce0;
wire   [116:0] pulsedb_1_q0;
wire   [8:0] pulsedb_1_address1;
reg    pulsedb_1_ce1;
reg    pulsedb_1_we1;
wire   [116:0] pulsedb_1_d1;
reg   [15:0] lastpulse_peak_V_2;
reg   [63:0] lastpulse_start_V_2;
reg   [9:0] lastpulse_peak_time_1;
reg   [9:0] lastpulse_stop_V_2;
reg   [15:0] lastpulse_baseline_V_2;
reg   [0:0] lastpulse_trigger_2;
wire   [8:0] pulsedb_2_address0;
reg    pulsedb_2_ce0;
wire   [116:0] pulsedb_2_q0;
wire   [8:0] pulsedb_2_address1;
reg    pulsedb_2_ce1;
reg    pulsedb_2_we1;
wire   [116:0] pulsedb_2_d1;
reg   [15:0] lastpulse_peak_V_3;
reg   [63:0] lastpulse_start_V_3;
reg   [9:0] lastpulse_peak_time_s;
reg   [9:0] lastpulse_stop_V_3;
reg   [15:0] lastpulse_baseline_V_3;
reg   [0:0] lastpulse_trigger_3;
wire   [8:0] pulsedb_3_address0;
reg    pulsedb_3_ce0;
wire   [116:0] pulsedb_3_q0;
wire   [8:0] pulsedb_3_address1;
reg    pulsedb_3_ce1;
reg    pulsedb_3_we1;
wire   [116:0] pulsedb_3_d1;
reg   [63:0] timestamp_V_read_reg_1524;
reg   [63:0] timestamp_V_read_reg_1524_pp0_iter1_reg;
reg   [63:0] timestamp_V_read_reg_1524_pp0_iter2_reg;
reg   [63:0] timestamp_V_read_reg_1524_pp0_iter3_reg;
reg   [9:0] holdoff_V_read_reg_1533;
reg   [9:0] holdoff_V_read_reg_1533_pp0_iter1_reg;
reg   [9:0] holdoff_V_read_reg_1533_pp0_iter2_reg;
reg   [0:0] trigdata_3_trigger_1_reg_1538;
reg   [0:0] trigdata_3_trigger_1_reg_1538_pp0_iter1_reg;
reg   [0:0] trigdata_3_trigger_1_reg_1538_pp0_iter2_reg;
reg   [0:0] trigdata_3_trigger_1_reg_1538_pp0_iter3_reg;
reg   [0:0] trigdata_2_trigger_1_reg_1548;
reg   [0:0] trigdata_2_trigger_1_reg_1548_pp0_iter1_reg;
reg   [0:0] trigdata_2_trigger_1_reg_1548_pp0_iter2_reg;
reg   [0:0] trigdata_2_trigger_1_reg_1548_pp0_iter3_reg;
reg   [0:0] trigdata_1_trigger_1_reg_1558;
reg   [0:0] trigdata_1_trigger_1_reg_1558_pp0_iter1_reg;
reg   [0:0] trigdata_1_trigger_1_reg_1558_pp0_iter2_reg;
reg   [0:0] trigdata_1_trigger_1_reg_1558_pp0_iter3_reg;
reg   [0:0] trigdata_0_trigger_1_reg_1568;
reg   [0:0] trigdata_0_trigger_1_reg_1568_pp0_iter1_reg;
reg   [0:0] trigdata_0_trigger_1_reg_1568_pp0_iter2_reg;
reg   [0:0] trigdata_0_trigger_1_reg_1568_pp0_iter3_reg;
reg   [15:0] trigdata_3_baseline_1_reg_1578;
reg   [15:0] trigdata_3_baseline_1_reg_1578_pp0_iter1_reg;
reg   [15:0] trigdata_3_baseline_1_reg_1578_pp0_iter2_reg;
reg   [15:0] trigdata_3_baseline_1_reg_1578_pp0_iter3_reg;
reg   [15:0] trigdata_2_baseline_1_reg_1583;
reg   [15:0] trigdata_2_baseline_1_reg_1583_pp0_iter1_reg;
reg   [15:0] trigdata_2_baseline_1_reg_1583_pp0_iter2_reg;
reg   [15:0] trigdata_2_baseline_1_reg_1583_pp0_iter3_reg;
reg   [15:0] trigdata_1_baseline_1_reg_1588;
reg   [15:0] trigdata_1_baseline_1_reg_1588_pp0_iter1_reg;
reg   [15:0] trigdata_1_baseline_1_reg_1588_pp0_iter2_reg;
reg   [15:0] trigdata_1_baseline_1_reg_1588_pp0_iter3_reg;
reg   [15:0] trigdata_0_baseline_1_reg_1593;
reg   [15:0] trigdata_0_baseline_1_reg_1593_pp0_iter1_reg;
reg   [15:0] trigdata_0_baseline_1_reg_1593_pp0_iter2_reg;
reg   [15:0] trigdata_0_baseline_1_reg_1593_pp0_iter3_reg;
reg   [15:0] trigdata_3_phase_V_1_reg_1598;
reg   [15:0] trigdata_3_phase_V_1_reg_1598_pp0_iter1_reg;
reg   [15:0] trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg;
reg   [15:0] trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg;
reg   [15:0] trigdata_2_phase_V_1_reg_1605;
reg   [15:0] trigdata_2_phase_V_1_reg_1605_pp0_iter1_reg;
reg   [15:0] trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg;
reg   [15:0] trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg;
reg   [15:0] trigdata_1_phase_V_1_reg_1612;
reg   [15:0] trigdata_1_phase_V_1_reg_1612_pp0_iter1_reg;
reg   [15:0] trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg;
reg   [15:0] trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg;
reg   [15:0] trigdata_0_phase_V_1_reg_1619;
reg   [15:0] trigdata_0_phase_V_1_reg_1619_pp0_iter1_reg;
reg   [15:0] trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg;
reg   [15:0] trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg;
reg   [8:0] group_V_read_reg_1626;
reg   [8:0] group_V_read_reg_1626_pp0_iter1_reg;
wire   [15:0] trunc_ln203_fu_386_p1;
reg   [15:0] trunc_ln203_reg_1655;
reg   [15:0] trunc_ln203_reg_1655_pp0_iter2_reg;
reg   [15:0] trunc_ln203_reg_1655_pp0_iter3_reg;
reg   [63:0] pulsedb_start_V_load_reg_1664;
reg   [63:0] pulsedb_start_V_load_reg_1664_pp0_iter2_reg;
reg   [63:0] pulsedb_start_V_load_reg_1664_pp0_iter3_reg;
reg   [9:0] pulsedb_peak_time_V_s_reg_1672;
reg   [9:0] pulsedb_peak_time_V_s_reg_1672_pp0_iter2_reg;
reg   [9:0] pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg;
reg   [9:0] pulsedb_stop_V_load_s_reg_1679;
reg   [9:0] pulsedb_stop_V_load_s_reg_1679_pp0_iter2_reg;
reg   [9:0] pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg;
reg   [15:0] pulsedb_baseline_V_l_reg_1687;
reg   [15:0] pulsedb_baseline_V_l_reg_1687_pp0_iter2_reg;
reg   [15:0] pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg;
reg   [0:0] tmp_reg_1694;
reg   [0:0] tmp_reg_1694_pp0_iter2_reg;
reg   [0:0] tmp_reg_1694_pp0_iter3_reg;
reg   [99:0] tmp_4_reg_1704;
wire   [15:0] trunc_ln203_1_fu_448_p1;
reg   [15:0] trunc_ln203_1_reg_1709;
reg   [15:0] trunc_ln203_1_reg_1709_pp0_iter2_reg;
reg   [15:0] trunc_ln203_1_reg_1709_pp0_iter3_reg;
reg   [63:0] pulsedb_start_V_load_1_reg_1718;
reg   [63:0] pulsedb_start_V_load_1_reg_1718_pp0_iter2_reg;
reg   [63:0] pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg;
reg   [9:0] pulsedb_peak_time_V_1_reg_1726;
reg   [9:0] pulsedb_peak_time_V_1_reg_1726_pp0_iter2_reg;
reg   [9:0] pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg;
reg   [9:0] pulsedb_stop_V_load_1_reg_1733;
reg   [9:0] pulsedb_stop_V_load_1_reg_1733_pp0_iter2_reg;
reg   [9:0] pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg;
reg   [15:0] pulsedb_baseline_V_l_1_reg_1741;
reg   [15:0] pulsedb_baseline_V_l_1_reg_1741_pp0_iter2_reg;
reg   [15:0] pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg;
reg   [0:0] tmp_32_reg_1748;
reg   [0:0] tmp_32_reg_1748_pp0_iter2_reg;
reg   [0:0] tmp_32_reg_1748_pp0_iter3_reg;
reg   [99:0] tmp_6_reg_1758;
wire   [15:0] trunc_ln203_2_fu_510_p1;
reg   [15:0] trunc_ln203_2_reg_1763;
reg   [15:0] trunc_ln203_2_reg_1763_pp0_iter2_reg;
reg   [15:0] trunc_ln203_2_reg_1763_pp0_iter3_reg;
reg   [63:0] pulsedb_start_V_load_2_reg_1772;
reg   [63:0] pulsedb_start_V_load_2_reg_1772_pp0_iter2_reg;
reg   [63:0] pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg;
reg   [9:0] pulsedb_peak_time_V_2_reg_1780;
reg   [9:0] pulsedb_peak_time_V_2_reg_1780_pp0_iter2_reg;
reg   [9:0] pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg;
reg   [9:0] pulsedb_stop_V_load_2_reg_1787;
reg   [9:0] pulsedb_stop_V_load_2_reg_1787_pp0_iter2_reg;
reg   [9:0] pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg;
reg   [15:0] pulsedb_baseline_V_l_2_reg_1795;
reg   [15:0] pulsedb_baseline_V_l_2_reg_1795_pp0_iter2_reg;
reg   [15:0] pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg;
reg   [0:0] tmp_33_reg_1802;
reg   [0:0] tmp_33_reg_1802_pp0_iter2_reg;
reg   [0:0] tmp_33_reg_1802_pp0_iter3_reg;
reg   [99:0] tmp_8_reg_1812;
wire   [15:0] trunc_ln203_3_fu_572_p1;
reg   [15:0] trunc_ln203_3_reg_1817;
reg   [15:0] trunc_ln203_3_reg_1817_pp0_iter2_reg;
reg   [15:0] trunc_ln203_3_reg_1817_pp0_iter3_reg;
reg   [63:0] pulsedb_start_V_load_3_reg_1826;
reg   [63:0] pulsedb_start_V_load_3_reg_1826_pp0_iter2_reg;
reg   [63:0] pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg;
reg   [9:0] pulsedb_peak_time_V_3_reg_1834;
reg   [9:0] pulsedb_peak_time_V_3_reg_1834_pp0_iter2_reg;
reg   [9:0] pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg;
reg   [9:0] pulsedb_stop_V_load_3_reg_1841;
reg   [9:0] pulsedb_stop_V_load_3_reg_1841_pp0_iter2_reg;
reg   [9:0] pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg;
reg   [15:0] pulsedb_baseline_V_l_3_reg_1849;
reg   [15:0] pulsedb_baseline_V_l_3_reg_1849_pp0_iter2_reg;
reg   [15:0] pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg;
reg   [0:0] tmp_34_reg_1856;
reg   [0:0] tmp_34_reg_1856_pp0_iter2_reg;
reg   [0:0] tmp_34_reg_1856_pp0_iter3_reg;
reg   [99:0] tmp_s_reg_1866;
wire   [9:0] ret_V_fu_637_p2;
reg   [9:0] ret_V_reg_1871;
wire   [64:0] sub_ln1354_fu_649_p2;
reg   [64:0] sub_ln1354_reg_1876;
wire   [64:0] sub_ln1354_1_fu_666_p2;
reg   [64:0] sub_ln1354_1_reg_1881;
wire   [64:0] sub_ln1354_2_fu_683_p2;
reg   [64:0] sub_ln1354_2_reg_1886;
wire   [64:0] sub_ln1354_3_fu_700_p2;
reg   [64:0] sub_ln1354_3_reg_1891;
wire   [0:0] icmp_ln1495_fu_762_p2;
reg   [0:0] icmp_ln1495_reg_1896;
wire   [0:0] icmp_ln895_fu_769_p2;
reg   [0:0] icmp_ln895_reg_1902;
wire   [0:0] icmp_ln1495_1_fu_815_p2;
reg   [0:0] icmp_ln1495_1_reg_1912;
wire   [0:0] icmp_ln895_1_fu_819_p2;
reg   [0:0] icmp_ln895_1_reg_1918;
wire   [0:0] icmp_ln1495_2_fu_865_p2;
reg   [0:0] icmp_ln1495_2_reg_1928;
wire   [0:0] icmp_ln895_2_fu_869_p2;
reg   [0:0] icmp_ln895_2_reg_1934;
wire   [0:0] icmp_ln1495_3_fu_915_p2;
reg   [0:0] icmp_ln1495_3_reg_1944;
wire   [0:0] icmp_ln895_3_fu_919_p2;
reg   [0:0] icmp_ln895_3_reg_1950;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_378_p1;
wire  signed [63:0] sext_ln544_fu_714_p1;
wire   [15:0] select_ln168_fu_1003_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_peak_V_0_l;
wire   [63:0] select_ln168_1_fu_1009_p3;
reg   [63:0] ap_sig_allocacmp_lastpulse_start_V_0_s;
wire   [9:0] select_ln168_2_fu_1015_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_peak_time_4;
wire   [9:0] select_ln168_3_fu_1021_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_stop_V_0_l;
wire   [15:0] select_ln168_4_fu_1027_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_baseline_V_4;
wire   [0:0] and_ln168_fu_1033_p2;
reg   [0:0] ap_sig_allocacmp_lastpulse_trigger_0_s;
wire   [15:0] select_ln168_5_fu_1153_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_peak_V_1_l;
wire   [63:0] select_ln168_6_fu_1159_p3;
reg   [63:0] ap_sig_allocacmp_lastpulse_start_V_1_s;
wire   [9:0] select_ln168_7_fu_1165_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_peak_time_5;
wire   [9:0] select_ln168_8_fu_1171_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_stop_V_1_l;
wire   [15:0] select_ln168_9_fu_1177_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_baseline_V_5;
wire   [0:0] and_ln168_1_fu_1183_p2;
reg   [0:0] ap_sig_allocacmp_lastpulse_trigger_1_s;
wire   [15:0] select_ln168_10_fu_1303_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_peak_V_2_l;
wire   [63:0] select_ln168_11_fu_1309_p3;
reg   [63:0] ap_sig_allocacmp_lastpulse_start_V_2_s;
wire   [9:0] select_ln168_12_fu_1315_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_peak_time_6;
wire   [9:0] select_ln168_13_fu_1321_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_stop_V_2_l;
wire   [15:0] select_ln168_14_fu_1327_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_baseline_V_6;
wire   [0:0] and_ln168_2_fu_1333_p2;
reg   [0:0] ap_sig_allocacmp_lastpulse_trigger_2_s;
wire   [15:0] select_ln168_15_fu_1453_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_peak_V_3_l;
wire   [63:0] select_ln168_16_fu_1459_p3;
reg   [63:0] ap_sig_allocacmp_lastpulse_start_V_3_s;
wire   [9:0] select_ln168_17_fu_1465_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_peak_time_7;
wire   [9:0] select_ln168_18_fu_1471_p3;
reg   [9:0] ap_sig_allocacmp_lastpulse_stop_V_3_l;
wire   [15:0] select_ln168_19_fu_1477_p3;
reg   [15:0] ap_sig_allocacmp_lastpulse_baseline_V_7;
wire   [0:0] and_ln168_3_fu_1483_p2;
reg   [0:0] ap_sig_allocacmp_lastpulse_trigger_3_s;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] zext_ln1354_fu_634_p1;
wire   [64:0] zext_ln215_fu_643_p1;
wire   [64:0] zext_ln215_1_fu_646_p1;
wire   [64:0] zext_ln215_2_fu_663_p1;
wire   [64:0] zext_ln215_3_fu_680_p1;
wire   [64:0] zext_ln215_4_fu_697_p1;
wire   [64:0] zext_ln895_fu_766_p1;
wire   [15:0] select_ln159_fu_924_p3;
wire   [15:0] select_ln151_fu_934_p3;
wire   [63:0] select_ln151_1_fu_939_p3;
wire   [9:0] select_ln159_1_fu_929_p3;
wire   [9:0] select_ln151_2_fu_944_p3;
wire   [15:0] select_ln151_3_fu_950_p3;
wire   [9:0] select_ln151_4_fu_955_p3;
wire   [9:0] select_ln73_4_fu_991_p3;
wire   [15:0] select_ln73_fu_961_p3;
wire   [63:0] select_ln73_1_fu_968_p3;
wire   [9:0] select_ln73_2_fu_974_p3;
wire   [9:0] add_ln700_fu_997_p2;
wire   [15:0] select_ln73_3_fu_981_p3;
wire   [0:0] or_ln73_fu_987_p2;
wire   [15:0] select_ln159_2_fu_1074_p3;
wire   [15:0] select_ln151_5_fu_1084_p3;
wire   [63:0] select_ln151_6_fu_1089_p3;
wire   [9:0] select_ln159_3_fu_1079_p3;
wire   [9:0] select_ln151_7_fu_1094_p3;
wire   [15:0] select_ln151_8_fu_1100_p3;
wire   [9:0] select_ln151_9_fu_1105_p3;
wire   [9:0] select_ln73_9_fu_1141_p3;
wire   [15:0] select_ln73_5_fu_1111_p3;
wire   [63:0] select_ln73_6_fu_1118_p3;
wire   [9:0] select_ln73_7_fu_1124_p3;
wire   [9:0] add_ln700_1_fu_1147_p2;
wire   [15:0] select_ln73_8_fu_1131_p3;
wire   [0:0] or_ln73_1_fu_1137_p2;
wire   [15:0] select_ln159_4_fu_1224_p3;
wire   [15:0] select_ln151_10_fu_1234_p3;
wire   [63:0] select_ln151_11_fu_1239_p3;
wire   [9:0] select_ln159_5_fu_1229_p3;
wire   [9:0] select_ln151_12_fu_1244_p3;
wire   [15:0] select_ln151_13_fu_1250_p3;
wire   [9:0] select_ln151_14_fu_1255_p3;
wire   [9:0] select_ln73_14_fu_1291_p3;
wire   [15:0] select_ln73_10_fu_1261_p3;
wire   [63:0] select_ln73_11_fu_1268_p3;
wire   [9:0] select_ln73_12_fu_1274_p3;
wire   [9:0] add_ln700_2_fu_1297_p2;
wire   [15:0] select_ln73_13_fu_1281_p3;
wire   [0:0] or_ln73_2_fu_1287_p2;
wire   [15:0] select_ln159_6_fu_1374_p3;
wire   [15:0] select_ln151_15_fu_1384_p3;
wire   [63:0] select_ln151_16_fu_1389_p3;
wire   [9:0] select_ln159_7_fu_1379_p3;
wire   [9:0] select_ln151_17_fu_1394_p3;
wire   [15:0] select_ln151_18_fu_1400_p3;
wire   [9:0] select_ln151_19_fu_1405_p3;
wire   [9:0] select_ln73_19_fu_1441_p3;
wire   [15:0] select_ln73_15_fu_1411_p3;
wire   [63:0] select_ln73_16_fu_1418_p3;
wire   [9:0] select_ln73_17_fu_1424_p3;
wire   [9:0] add_ln700_3_fu_1447_p2;
wire   [15:0] select_ln73_18_fu_1431_p3;
wire   [0:0] or_ln73_3_fu_1437_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 lastpulse_peak_V_0 = 16'd0;
#0 lastpulse_start_V_0 = 64'd0;
#0 lastpulse_peak_time_3 = 10'd0;
#0 lastpulse_stop_V_0 = 10'd0;
#0 lastpulse_baseline_V = 16'd0;
#0 lastpulse_trigger_0 = 1'd0;
#0 lastpulse_peak_V_1 = 16'd0;
#0 lastpulse_start_V_1 = 64'd0;
#0 lastpulse_peak_time_2 = 10'd0;
#0 lastpulse_stop_V_1 = 10'd0;
#0 lastpulse_baseline_V_1 = 16'd0;
#0 lastpulse_trigger_1 = 1'd0;
#0 lastpulse_peak_V_2 = 16'd0;
#0 lastpulse_start_V_2 = 64'd0;
#0 lastpulse_peak_time_1 = 10'd0;
#0 lastpulse_stop_V_2 = 10'd0;
#0 lastpulse_baseline_V_2 = 16'd0;
#0 lastpulse_trigger_2 = 1'd0;
#0 lastpulse_peak_V_3 = 16'd0;
#0 lastpulse_start_V_3 = 64'd0;
#0 lastpulse_peak_time_s = 10'd0;
#0 lastpulse_stop_V_3 = 10'd0;
#0 lastpulse_baseline_V_3 = 16'd0;
#0 lastpulse_trigger_3 = 1'd0;
end

analyze_pulse_puljbC #(
    .DataWidth( 117 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pulsedb_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pulsedb_0_address0),
    .ce0(pulsedb_0_ce0),
    .q0(pulsedb_0_q0),
    .address1(pulsedb_0_address1),
    .ce1(pulsedb_0_ce1),
    .we1(pulsedb_0_we1),
    .d1(pulsedb_0_d1)
);

analyze_pulse_puljbC #(
    .DataWidth( 117 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pulsedb_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pulsedb_1_address0),
    .ce0(pulsedb_1_ce0),
    .q0(pulsedb_1_q0),
    .address1(pulsedb_1_address1),
    .ce1(pulsedb_1_ce1),
    .we1(pulsedb_1_we1),
    .d1(pulsedb_1_d1)
);

analyze_pulse_puljbC #(
    .DataWidth( 117 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pulsedb_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pulsedb_2_address0),
    .ce0(pulsedb_2_ce0),
    .q0(pulsedb_2_q0),
    .address1(pulsedb_2_address1),
    .ce1(pulsedb_2_ce1),
    .we1(pulsedb_2_we1),
    .d1(pulsedb_2_d1)
);

analyze_pulse_puljbC #(
    .DataWidth( 117 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pulsedb_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pulsedb_3_address0),
    .ce0(pulsedb_3_ce0),
    .q0(pulsedb_3_q0),
    .address1(pulsedb_3_address1),
    .ce1(pulsedb_3_ce1),
    .we1(pulsedb_3_we1),
    .d1(pulsedb_3_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        group_V_read_reg_1626 <= group_V;
        group_V_read_reg_1626_pp0_iter1_reg <= group_V_read_reg_1626;
        holdoff_V_read_reg_1533 <= holdoff_V;
        holdoff_V_read_reg_1533_pp0_iter1_reg <= holdoff_V_read_reg_1533;
        pulsedb_baseline_V_l_1_reg_1741 <= {{pulsedb_1_q0[115:100]}};
        pulsedb_baseline_V_l_2_reg_1795 <= {{pulsedb_2_q0[115:100]}};
        pulsedb_baseline_V_l_3_reg_1849 <= {{pulsedb_3_q0[115:100]}};
        pulsedb_baseline_V_l_reg_1687 <= {{pulsedb_0_q0[115:100]}};
        pulsedb_peak_time_V_1_reg_1726 <= {{pulsedb_1_q0[89:80]}};
        pulsedb_peak_time_V_2_reg_1780 <= {{pulsedb_2_q0[89:80]}};
        pulsedb_peak_time_V_3_reg_1834 <= {{pulsedb_3_q0[89:80]}};
        pulsedb_peak_time_V_s_reg_1672 <= {{pulsedb_0_q0[89:80]}};
        pulsedb_start_V_load_1_reg_1718 <= {{pulsedb_1_q0[79:16]}};
        pulsedb_start_V_load_2_reg_1772 <= {{pulsedb_2_q0[79:16]}};
        pulsedb_start_V_load_3_reg_1826 <= {{pulsedb_3_q0[79:16]}};
        pulsedb_start_V_load_reg_1664 <= {{pulsedb_0_q0[79:16]}};
        pulsedb_stop_V_load_1_reg_1733 <= {{pulsedb_1_q0[99:90]}};
        pulsedb_stop_V_load_2_reg_1787 <= {{pulsedb_2_q0[99:90]}};
        pulsedb_stop_V_load_3_reg_1841 <= {{pulsedb_3_q0[99:90]}};
        pulsedb_stop_V_load_s_reg_1679 <= {{pulsedb_0_q0[99:90]}};
        timestamp_V_read_reg_1524 <= timestamp_V;
        timestamp_V_read_reg_1524_pp0_iter1_reg <= timestamp_V_read_reg_1524;
        tmp_32_reg_1748 <= pulsedb_1_q0[32'd116];
        tmp_33_reg_1802 <= pulsedb_2_q0[32'd116];
        tmp_34_reg_1856 <= pulsedb_3_q0[32'd116];
        tmp_4_reg_1704 <= {{pulsedb_0_q0[115:16]}};
        tmp_6_reg_1758 <= {{pulsedb_1_q0[115:16]}};
        tmp_8_reg_1812 <= {{pulsedb_2_q0[115:16]}};
        tmp_reg_1694 <= pulsedb_0_q0[32'd116];
        tmp_s_reg_1866 <= {{pulsedb_3_q0[115:16]}};
        trigdata_0_baseline_1_reg_1593 <= trigdata_0_baseline;
        trigdata_0_baseline_1_reg_1593_pp0_iter1_reg <= trigdata_0_baseline_1_reg_1593;
        trigdata_0_phase_V_1_reg_1619 <= trigdata_0_phase_V_s;
        trigdata_0_phase_V_1_reg_1619_pp0_iter1_reg <= trigdata_0_phase_V_1_reg_1619;
        trigdata_0_trigger_1_reg_1568 <= trigdata_0_trigger_s;
        trigdata_0_trigger_1_reg_1568_pp0_iter1_reg <= trigdata_0_trigger_1_reg_1568;
        trigdata_1_baseline_1_reg_1588 <= trigdata_1_baseline;
        trigdata_1_baseline_1_reg_1588_pp0_iter1_reg <= trigdata_1_baseline_1_reg_1588;
        trigdata_1_phase_V_1_reg_1612 <= trigdata_1_phase_V_s;
        trigdata_1_phase_V_1_reg_1612_pp0_iter1_reg <= trigdata_1_phase_V_1_reg_1612;
        trigdata_1_trigger_1_reg_1558 <= trigdata_1_trigger_s;
        trigdata_1_trigger_1_reg_1558_pp0_iter1_reg <= trigdata_1_trigger_1_reg_1558;
        trigdata_2_baseline_1_reg_1583 <= trigdata_2_baseline;
        trigdata_2_baseline_1_reg_1583_pp0_iter1_reg <= trigdata_2_baseline_1_reg_1583;
        trigdata_2_phase_V_1_reg_1605 <= trigdata_2_phase_V_s;
        trigdata_2_phase_V_1_reg_1605_pp0_iter1_reg <= trigdata_2_phase_V_1_reg_1605;
        trigdata_2_trigger_1_reg_1548 <= trigdata_2_trigger_s;
        trigdata_2_trigger_1_reg_1548_pp0_iter1_reg <= trigdata_2_trigger_1_reg_1548;
        trigdata_3_baseline_1_reg_1578 <= trigdata_3_baseline;
        trigdata_3_baseline_1_reg_1578_pp0_iter1_reg <= trigdata_3_baseline_1_reg_1578;
        trigdata_3_phase_V_1_reg_1598 <= trigdata_3_phase_V_s;
        trigdata_3_phase_V_1_reg_1598_pp0_iter1_reg <= trigdata_3_phase_V_1_reg_1598;
        trigdata_3_trigger_1_reg_1538 <= trigdata_3_trigger_s;
        trigdata_3_trigger_1_reg_1538_pp0_iter1_reg <= trigdata_3_trigger_1_reg_1538;
        trunc_ln203_1_reg_1709 <= trunc_ln203_1_fu_448_p1;
        trunc_ln203_2_reg_1763 <= trunc_ln203_2_fu_510_p1;
        trunc_ln203_3_reg_1817 <= trunc_ln203_3_fu_572_p1;
        trunc_ln203_reg_1655 <= trunc_ln203_fu_386_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        holdoff_V_read_reg_1533_pp0_iter2_reg <= holdoff_V_read_reg_1533_pp0_iter1_reg;
        icmp_ln1495_1_reg_1912 <= icmp_ln1495_1_fu_815_p2;
        icmp_ln1495_2_reg_1928 <= icmp_ln1495_2_fu_865_p2;
        icmp_ln1495_3_reg_1944 <= icmp_ln1495_3_fu_915_p2;
        icmp_ln1495_reg_1896 <= icmp_ln1495_fu_762_p2;
        icmp_ln895_1_reg_1918 <= icmp_ln895_1_fu_819_p2;
        icmp_ln895_2_reg_1934 <= icmp_ln895_2_fu_869_p2;
        icmp_ln895_3_reg_1950 <= icmp_ln895_3_fu_919_p2;
        icmp_ln895_reg_1902 <= icmp_ln895_fu_769_p2;
        pulsedb_baseline_V_l_1_reg_1741_pp0_iter2_reg <= pulsedb_baseline_V_l_1_reg_1741;
        pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg <= pulsedb_baseline_V_l_1_reg_1741_pp0_iter2_reg;
        pulsedb_baseline_V_l_2_reg_1795_pp0_iter2_reg <= pulsedb_baseline_V_l_2_reg_1795;
        pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg <= pulsedb_baseline_V_l_2_reg_1795_pp0_iter2_reg;
        pulsedb_baseline_V_l_3_reg_1849_pp0_iter2_reg <= pulsedb_baseline_V_l_3_reg_1849;
        pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg <= pulsedb_baseline_V_l_3_reg_1849_pp0_iter2_reg;
        pulsedb_baseline_V_l_reg_1687_pp0_iter2_reg <= pulsedb_baseline_V_l_reg_1687;
        pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg <= pulsedb_baseline_V_l_reg_1687_pp0_iter2_reg;
        pulsedb_peak_time_V_1_reg_1726_pp0_iter2_reg <= pulsedb_peak_time_V_1_reg_1726;
        pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg <= pulsedb_peak_time_V_1_reg_1726_pp0_iter2_reg;
        pulsedb_peak_time_V_2_reg_1780_pp0_iter2_reg <= pulsedb_peak_time_V_2_reg_1780;
        pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg <= pulsedb_peak_time_V_2_reg_1780_pp0_iter2_reg;
        pulsedb_peak_time_V_3_reg_1834_pp0_iter2_reg <= pulsedb_peak_time_V_3_reg_1834;
        pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg <= pulsedb_peak_time_V_3_reg_1834_pp0_iter2_reg;
        pulsedb_peak_time_V_s_reg_1672_pp0_iter2_reg <= pulsedb_peak_time_V_s_reg_1672;
        pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg <= pulsedb_peak_time_V_s_reg_1672_pp0_iter2_reg;
        pulsedb_start_V_load_1_reg_1718_pp0_iter2_reg <= pulsedb_start_V_load_1_reg_1718;
        pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg <= pulsedb_start_V_load_1_reg_1718_pp0_iter2_reg;
        pulsedb_start_V_load_2_reg_1772_pp0_iter2_reg <= pulsedb_start_V_load_2_reg_1772;
        pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg <= pulsedb_start_V_load_2_reg_1772_pp0_iter2_reg;
        pulsedb_start_V_load_3_reg_1826_pp0_iter2_reg <= pulsedb_start_V_load_3_reg_1826;
        pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg <= pulsedb_start_V_load_3_reg_1826_pp0_iter2_reg;
        pulsedb_start_V_load_reg_1664_pp0_iter2_reg <= pulsedb_start_V_load_reg_1664;
        pulsedb_start_V_load_reg_1664_pp0_iter3_reg <= pulsedb_start_V_load_reg_1664_pp0_iter2_reg;
        pulsedb_stop_V_load_1_reg_1733_pp0_iter2_reg <= pulsedb_stop_V_load_1_reg_1733;
        pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg <= pulsedb_stop_V_load_1_reg_1733_pp0_iter2_reg;
        pulsedb_stop_V_load_2_reg_1787_pp0_iter2_reg <= pulsedb_stop_V_load_2_reg_1787;
        pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg <= pulsedb_stop_V_load_2_reg_1787_pp0_iter2_reg;
        pulsedb_stop_V_load_3_reg_1841_pp0_iter2_reg <= pulsedb_stop_V_load_3_reg_1841;
        pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg <= pulsedb_stop_V_load_3_reg_1841_pp0_iter2_reg;
        pulsedb_stop_V_load_s_reg_1679_pp0_iter2_reg <= pulsedb_stop_V_load_s_reg_1679;
        pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg <= pulsedb_stop_V_load_s_reg_1679_pp0_iter2_reg;
        ret_V_reg_1871 <= ret_V_fu_637_p2;
        sub_ln1354_1_reg_1881 <= sub_ln1354_1_fu_666_p2;
        sub_ln1354_2_reg_1886 <= sub_ln1354_2_fu_683_p2;
        sub_ln1354_3_reg_1891 <= sub_ln1354_3_fu_700_p2;
        sub_ln1354_reg_1876 <= sub_ln1354_fu_649_p2;
        timestamp_V_read_reg_1524_pp0_iter2_reg <= timestamp_V_read_reg_1524_pp0_iter1_reg;
        timestamp_V_read_reg_1524_pp0_iter3_reg <= timestamp_V_read_reg_1524_pp0_iter2_reg;
        tmp_32_reg_1748_pp0_iter2_reg <= tmp_32_reg_1748;
        tmp_32_reg_1748_pp0_iter3_reg <= tmp_32_reg_1748_pp0_iter2_reg;
        tmp_33_reg_1802_pp0_iter2_reg <= tmp_33_reg_1802;
        tmp_33_reg_1802_pp0_iter3_reg <= tmp_33_reg_1802_pp0_iter2_reg;
        tmp_34_reg_1856_pp0_iter2_reg <= tmp_34_reg_1856;
        tmp_34_reg_1856_pp0_iter3_reg <= tmp_34_reg_1856_pp0_iter2_reg;
        tmp_reg_1694_pp0_iter2_reg <= tmp_reg_1694;
        tmp_reg_1694_pp0_iter3_reg <= tmp_reg_1694_pp0_iter2_reg;
        trigdata_0_baseline_1_reg_1593_pp0_iter2_reg <= trigdata_0_baseline_1_reg_1593_pp0_iter1_reg;
        trigdata_0_baseline_1_reg_1593_pp0_iter3_reg <= trigdata_0_baseline_1_reg_1593_pp0_iter2_reg;
        trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg <= trigdata_0_phase_V_1_reg_1619_pp0_iter1_reg;
        trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg <= trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg;
        trigdata_0_trigger_1_reg_1568_pp0_iter2_reg <= trigdata_0_trigger_1_reg_1568_pp0_iter1_reg;
        trigdata_0_trigger_1_reg_1568_pp0_iter3_reg <= trigdata_0_trigger_1_reg_1568_pp0_iter2_reg;
        trigdata_1_baseline_1_reg_1588_pp0_iter2_reg <= trigdata_1_baseline_1_reg_1588_pp0_iter1_reg;
        trigdata_1_baseline_1_reg_1588_pp0_iter3_reg <= trigdata_1_baseline_1_reg_1588_pp0_iter2_reg;
        trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg <= trigdata_1_phase_V_1_reg_1612_pp0_iter1_reg;
        trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg <= trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg;
        trigdata_1_trigger_1_reg_1558_pp0_iter2_reg <= trigdata_1_trigger_1_reg_1558_pp0_iter1_reg;
        trigdata_1_trigger_1_reg_1558_pp0_iter3_reg <= trigdata_1_trigger_1_reg_1558_pp0_iter2_reg;
        trigdata_2_baseline_1_reg_1583_pp0_iter2_reg <= trigdata_2_baseline_1_reg_1583_pp0_iter1_reg;
        trigdata_2_baseline_1_reg_1583_pp0_iter3_reg <= trigdata_2_baseline_1_reg_1583_pp0_iter2_reg;
        trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg <= trigdata_2_phase_V_1_reg_1605_pp0_iter1_reg;
        trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg <= trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg;
        trigdata_2_trigger_1_reg_1548_pp0_iter2_reg <= trigdata_2_trigger_1_reg_1548_pp0_iter1_reg;
        trigdata_2_trigger_1_reg_1548_pp0_iter3_reg <= trigdata_2_trigger_1_reg_1548_pp0_iter2_reg;
        trigdata_3_baseline_1_reg_1578_pp0_iter2_reg <= trigdata_3_baseline_1_reg_1578_pp0_iter1_reg;
        trigdata_3_baseline_1_reg_1578_pp0_iter3_reg <= trigdata_3_baseline_1_reg_1578_pp0_iter2_reg;
        trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg <= trigdata_3_phase_V_1_reg_1598_pp0_iter1_reg;
        trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg <= trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg;
        trigdata_3_trigger_1_reg_1538_pp0_iter2_reg <= trigdata_3_trigger_1_reg_1538_pp0_iter1_reg;
        trigdata_3_trigger_1_reg_1538_pp0_iter3_reg <= trigdata_3_trigger_1_reg_1538_pp0_iter2_reg;
        trunc_ln203_1_reg_1709_pp0_iter2_reg <= trunc_ln203_1_reg_1709;
        trunc_ln203_1_reg_1709_pp0_iter3_reg <= trunc_ln203_1_reg_1709_pp0_iter2_reg;
        trunc_ln203_2_reg_1763_pp0_iter2_reg <= trunc_ln203_2_reg_1763;
        trunc_ln203_2_reg_1763_pp0_iter3_reg <= trunc_ln203_2_reg_1763_pp0_iter2_reg;
        trunc_ln203_3_reg_1817_pp0_iter2_reg <= trunc_ln203_3_reg_1817;
        trunc_ln203_3_reg_1817_pp0_iter3_reg <= trunc_ln203_3_reg_1817_pp0_iter2_reg;
        trunc_ln203_reg_1655_pp0_iter2_reg <= trunc_ln203_reg_1655;
        trunc_ln203_reg_1655_pp0_iter3_reg <= trunc_ln203_reg_1655_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        lastpulse_baseline_V <= select_ln168_4_fu_1027_p3;
        lastpulse_baseline_V_1 <= select_ln168_9_fu_1177_p3;
        lastpulse_baseline_V_2 <= select_ln168_14_fu_1327_p3;
        lastpulse_baseline_V_3 <= select_ln168_19_fu_1477_p3;
        lastpulse_peak_V_0 <= select_ln168_fu_1003_p3;
        lastpulse_peak_V_1 <= select_ln168_5_fu_1153_p3;
        lastpulse_peak_V_2 <= select_ln168_10_fu_1303_p3;
        lastpulse_peak_V_3 <= select_ln168_15_fu_1453_p3;
        lastpulse_peak_time_1 <= select_ln168_12_fu_1315_p3;
        lastpulse_peak_time_2 <= select_ln168_7_fu_1165_p3;
        lastpulse_peak_time_3 <= select_ln168_2_fu_1015_p3;
        lastpulse_peak_time_s <= select_ln168_17_fu_1465_p3;
        lastpulse_start_V_0 <= select_ln168_1_fu_1009_p3;
        lastpulse_start_V_1 <= select_ln168_6_fu_1159_p3;
        lastpulse_start_V_2 <= select_ln168_11_fu_1309_p3;
        lastpulse_start_V_3 <= select_ln168_16_fu_1459_p3;
        lastpulse_stop_V_0 <= select_ln168_3_fu_1021_p3;
        lastpulse_stop_V_1 <= select_ln168_8_fu_1171_p3;
        lastpulse_stop_V_2 <= select_ln168_13_fu_1321_p3;
        lastpulse_stop_V_3 <= select_ln168_18_fu_1471_p3;
        lastpulse_trigger_0 <= and_ln168_fu_1033_p2;
        lastpulse_trigger_1 <= and_ln168_1_fu_1183_p2;
        lastpulse_trigger_2 <= and_ln168_2_fu_1333_p2;
        lastpulse_trigger_3 <= and_ln168_3_fu_1483_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_baseline_V_4 = select_ln168_4_fu_1027_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_baseline_V_4 = lastpulse_baseline_V;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_baseline_V_5 = select_ln168_9_fu_1177_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_baseline_V_5 = lastpulse_baseline_V_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_baseline_V_6 = select_ln168_14_fu_1327_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_baseline_V_6 = lastpulse_baseline_V_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_baseline_V_7 = select_ln168_19_fu_1477_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_baseline_V_7 = lastpulse_baseline_V_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_V_0_l = select_ln168_fu_1003_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_V_0_l = lastpulse_peak_V_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_V_1_l = select_ln168_5_fu_1153_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_V_1_l = lastpulse_peak_V_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_V_2_l = select_ln168_10_fu_1303_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_V_2_l = lastpulse_peak_V_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_V_3_l = select_ln168_15_fu_1453_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_V_3_l = lastpulse_peak_V_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_time_4 = select_ln168_2_fu_1015_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_time_4 = lastpulse_peak_time_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_time_5 = select_ln168_7_fu_1165_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_time_5 = lastpulse_peak_time_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_time_6 = select_ln168_12_fu_1315_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_time_6 = lastpulse_peak_time_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_peak_time_7 = select_ln168_17_fu_1465_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_peak_time_7 = lastpulse_peak_time_s;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_start_V_0_s = select_ln168_1_fu_1009_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_start_V_0_s = lastpulse_start_V_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_start_V_1_s = select_ln168_6_fu_1159_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_start_V_1_s = lastpulse_start_V_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_start_V_2_s = select_ln168_11_fu_1309_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_start_V_2_s = lastpulse_start_V_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_start_V_3_s = select_ln168_16_fu_1459_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_start_V_3_s = lastpulse_start_V_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_stop_V_0_l = select_ln168_3_fu_1021_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_stop_V_0_l = lastpulse_stop_V_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_stop_V_1_l = select_ln168_8_fu_1171_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_stop_V_1_l = lastpulse_stop_V_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_stop_V_2_l = select_ln168_13_fu_1321_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_stop_V_2_l = lastpulse_stop_V_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_stop_V_3_l = select_ln168_18_fu_1471_p3;
    end else begin
        ap_sig_allocacmp_lastpulse_stop_V_3_l = lastpulse_stop_V_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_trigger_0_s = and_ln168_fu_1033_p2;
    end else begin
        ap_sig_allocacmp_lastpulse_trigger_0_s = lastpulse_trigger_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_trigger_1_s = and_ln168_1_fu_1183_p2;
    end else begin
        ap_sig_allocacmp_lastpulse_trigger_1_s = lastpulse_trigger_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_trigger_2_s = and_ln168_2_fu_1333_p2;
    end else begin
        ap_sig_allocacmp_lastpulse_trigger_2_s = lastpulse_trigger_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_lastpulse_trigger_3_s = and_ln168_3_fu_1483_p2;
    end else begin
        ap_sig_allocacmp_lastpulse_trigger_3_s = lastpulse_trigger_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (pulsedata_V_0_full_n == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pulsedata_V_0_write = 1'b1;
    end else begin
        pulsedata_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (pulsedata_V_1_full_n == 1'b1))) begin
        pulsedata_V_1_write = 1'b1;
    end else begin
        pulsedata_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (pulsedata_V_2_full_n == 1'b1))) begin
        pulsedata_V_2_write = 1'b1;
    end else begin
        pulsedata_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (pulsedata_V_3_full_n == 1'b1))) begin
        pulsedata_V_3_write = 1'b1;
    end else begin
        pulsedata_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pulsedb_0_ce0 = 1'b1;
    end else begin
        pulsedb_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_0_ce1 = 1'b1;
    end else begin
        pulsedb_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_0_we1 = 1'b1;
    end else begin
        pulsedb_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pulsedb_1_ce0 = 1'b1;
    end else begin
        pulsedb_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_1_ce1 = 1'b1;
    end else begin
        pulsedb_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_1_we1 = 1'b1;
    end else begin
        pulsedb_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pulsedb_2_ce0 = 1'b1;
    end else begin
        pulsedb_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_2_ce1 = 1'b1;
    end else begin
        pulsedb_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_2_we1 = 1'b1;
    end else begin
        pulsedb_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pulsedb_3_ce0 = 1'b1;
    end else begin
        pulsedb_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_3_ce1 = 1'b1;
    end else begin
        pulsedb_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pulsedb_3_we1 = 1'b1;
    end else begin
        pulsedb_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_1_fu_1147_p2 = (10'd1 + select_ln73_9_fu_1141_p3);

assign add_ln700_2_fu_1297_p2 = (10'd1 + select_ln73_14_fu_1291_p3);

assign add_ln700_3_fu_1447_p2 = (10'd1 + select_ln73_19_fu_1441_p3);

assign add_ln700_fu_997_p2 = (10'd1 + select_ln73_4_fu_991_p3);

assign and_ln168_1_fu_1183_p2 = (trigdata_1_trigger_1_reg_1558_pp0_iter3_reg & or_ln73_1_fu_1137_p2);

assign and_ln168_2_fu_1333_p2 = (trigdata_2_trigger_1_reg_1548_pp0_iter3_reg & or_ln73_2_fu_1287_p2);

assign and_ln168_3_fu_1483_p2 = (trigdata_3_trigger_1_reg_1538_pp0_iter3_reg & or_ln73_3_fu_1437_p2);

assign and_ln168_fu_1033_p2 = (trigdata_0_trigger_1_reg_1568_pp0_iter3_reg & or_ln73_fu_987_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln1495_1_fu_815_p2 = (($signed(trunc_ln203_1_reg_1709_pp0_iter2_reg) > $signed(trigdata_1_phase_V_1_reg_1612_pp0_iter2_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1495_2_fu_865_p2 = (($signed(trunc_ln203_2_reg_1763_pp0_iter2_reg) > $signed(trigdata_2_phase_V_1_reg_1605_pp0_iter2_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_915_p2 = (($signed(trunc_ln203_3_reg_1817_pp0_iter2_reg) > $signed(trigdata_3_phase_V_1_reg_1598_pp0_iter2_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_762_p2 = (($signed(trunc_ln203_reg_1655_pp0_iter2_reg) > $signed(trigdata_0_phase_V_1_reg_1619_pp0_iter2_reg)) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_819_p2 = (($signed(sub_ln1354_1_reg_1881) > $signed(zext_ln895_fu_766_p1)) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_869_p2 = (($signed(sub_ln1354_2_reg_1886) > $signed(zext_ln895_fu_766_p1)) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_919_p2 = (($signed(sub_ln1354_3_reg_1891) > $signed(zext_ln895_fu_766_p1)) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_769_p2 = (($signed(sub_ln1354_reg_1876) > $signed(zext_ln895_fu_766_p1)) ? 1'b1 : 1'b0);

assign or_ln73_1_fu_1137_p2 = (tmp_32_reg_1748_pp0_iter3_reg | icmp_ln895_1_reg_1918);

assign or_ln73_2_fu_1287_p2 = (tmp_33_reg_1802_pp0_iter3_reg | icmp_ln895_2_reg_1934);

assign or_ln73_3_fu_1437_p2 = (tmp_34_reg_1856_pp0_iter3_reg | icmp_ln895_3_reg_1950);

assign or_ln73_fu_987_p2 = (tmp_reg_1694_pp0_iter3_reg | icmp_ln895_reg_1902);

assign pulsedata_V_0_din = {{{tmp_4_reg_1704}, {group_V_read_reg_1626_pp0_iter1_reg}}, {trunc_ln203_reg_1655}};

assign pulsedata_V_1_din = {{{tmp_6_reg_1758}, {group_V_read_reg_1626_pp0_iter1_reg}}, {trunc_ln203_1_reg_1709}};

assign pulsedata_V_2_din = {{{tmp_8_reg_1812}, {group_V_read_reg_1626_pp0_iter1_reg}}, {trunc_ln203_2_reg_1763}};

assign pulsedata_V_3_din = {{{tmp_s_reg_1866}, {group_V_read_reg_1626_pp0_iter1_reg}}, {trunc_ln203_3_reg_1817}};

assign pulsedb_0_address0 = zext_ln544_fu_378_p1;

assign pulsedb_0_address1 = sext_ln544_fu_714_p1;

assign pulsedb_0_d1 = {{{{{{ap_sig_allocacmp_lastpulse_trigger_0_s}, {ap_sig_allocacmp_lastpulse_baseline_V_4}}, {ap_sig_allocacmp_lastpulse_stop_V_0_l}}, {ap_sig_allocacmp_lastpulse_peak_time_4}}, {ap_sig_allocacmp_lastpulse_start_V_0_s}}, {ap_sig_allocacmp_lastpulse_peak_V_0_l}};

assign pulsedb_1_address0 = zext_ln544_fu_378_p1;

assign pulsedb_1_address1 = sext_ln544_fu_714_p1;

assign pulsedb_1_d1 = {{{{{{ap_sig_allocacmp_lastpulse_trigger_1_s}, {ap_sig_allocacmp_lastpulse_baseline_V_5}}, {ap_sig_allocacmp_lastpulse_stop_V_1_l}}, {ap_sig_allocacmp_lastpulse_peak_time_5}}, {ap_sig_allocacmp_lastpulse_start_V_1_s}}, {ap_sig_allocacmp_lastpulse_peak_V_1_l}};

assign pulsedb_2_address0 = zext_ln544_fu_378_p1;

assign pulsedb_2_address1 = sext_ln544_fu_714_p1;

assign pulsedb_2_d1 = {{{{{{ap_sig_allocacmp_lastpulse_trigger_2_s}, {ap_sig_allocacmp_lastpulse_baseline_V_6}}, {ap_sig_allocacmp_lastpulse_stop_V_2_l}}, {ap_sig_allocacmp_lastpulse_peak_time_6}}, {ap_sig_allocacmp_lastpulse_start_V_2_s}}, {ap_sig_allocacmp_lastpulse_peak_V_2_l}};

assign pulsedb_3_address0 = zext_ln544_fu_378_p1;

assign pulsedb_3_address1 = sext_ln544_fu_714_p1;

assign pulsedb_3_d1 = {{{{{{ap_sig_allocacmp_lastpulse_trigger_3_s}, {ap_sig_allocacmp_lastpulse_baseline_V_7}}, {ap_sig_allocacmp_lastpulse_stop_V_3_l}}, {ap_sig_allocacmp_lastpulse_peak_time_7}}, {ap_sig_allocacmp_lastpulse_start_V_3_s}}, {ap_sig_allocacmp_lastpulse_peak_V_3_l}};

assign ret_V_fu_637_p2 = ($signed(10'd1023) + $signed(zext_ln1354_fu_634_p1));

assign select_ln151_10_fu_1234_p3 = ((icmp_ln895_2_reg_1934[0:0] === 1'b1) ? trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg : trunc_ln203_2_reg_1763_pp0_iter3_reg);

assign select_ln151_11_fu_1239_p3 = ((icmp_ln895_2_reg_1934[0:0] === 1'b1) ? timestamp_V_read_reg_1524_pp0_iter3_reg : pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg);

assign select_ln151_12_fu_1244_p3 = ((icmp_ln895_2_reg_1934[0:0] === 1'b1) ? 10'd0 : pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg);

assign select_ln151_13_fu_1250_p3 = ((icmp_ln895_2_reg_1934[0:0] === 1'b1) ? trigdata_2_baseline_1_reg_1583_pp0_iter3_reg : pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg);

assign select_ln151_14_fu_1255_p3 = ((icmp_ln895_2_reg_1934[0:0] === 1'b1) ? 10'd0 : pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg);

assign select_ln151_15_fu_1384_p3 = ((icmp_ln895_3_reg_1950[0:0] === 1'b1) ? trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg : trunc_ln203_3_reg_1817_pp0_iter3_reg);

assign select_ln151_16_fu_1389_p3 = ((icmp_ln895_3_reg_1950[0:0] === 1'b1) ? timestamp_V_read_reg_1524_pp0_iter3_reg : pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg);

assign select_ln151_17_fu_1394_p3 = ((icmp_ln895_3_reg_1950[0:0] === 1'b1) ? 10'd0 : pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg);

assign select_ln151_18_fu_1400_p3 = ((icmp_ln895_3_reg_1950[0:0] === 1'b1) ? trigdata_3_baseline_1_reg_1578_pp0_iter3_reg : pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg);

assign select_ln151_19_fu_1405_p3 = ((icmp_ln895_3_reg_1950[0:0] === 1'b1) ? 10'd0 : pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg);

assign select_ln151_1_fu_939_p3 = ((icmp_ln895_reg_1902[0:0] === 1'b1) ? timestamp_V_read_reg_1524_pp0_iter3_reg : pulsedb_start_V_load_reg_1664_pp0_iter3_reg);

assign select_ln151_2_fu_944_p3 = ((icmp_ln895_reg_1902[0:0] === 1'b1) ? 10'd0 : pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg);

assign select_ln151_3_fu_950_p3 = ((icmp_ln895_reg_1902[0:0] === 1'b1) ? trigdata_0_baseline_1_reg_1593_pp0_iter3_reg : pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg);

assign select_ln151_4_fu_955_p3 = ((icmp_ln895_reg_1902[0:0] === 1'b1) ? 10'd0 : pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg);

assign select_ln151_5_fu_1084_p3 = ((icmp_ln895_1_reg_1918[0:0] === 1'b1) ? trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg : trunc_ln203_1_reg_1709_pp0_iter3_reg);

assign select_ln151_6_fu_1089_p3 = ((icmp_ln895_1_reg_1918[0:0] === 1'b1) ? timestamp_V_read_reg_1524_pp0_iter3_reg : pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg);

assign select_ln151_7_fu_1094_p3 = ((icmp_ln895_1_reg_1918[0:0] === 1'b1) ? 10'd0 : pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg);

assign select_ln151_8_fu_1100_p3 = ((icmp_ln895_1_reg_1918[0:0] === 1'b1) ? trigdata_1_baseline_1_reg_1588_pp0_iter3_reg : pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg);

assign select_ln151_9_fu_1105_p3 = ((icmp_ln895_1_reg_1918[0:0] === 1'b1) ? 10'd0 : pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg);

assign select_ln151_fu_934_p3 = ((icmp_ln895_reg_1902[0:0] === 1'b1) ? trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg : trunc_ln203_reg_1655_pp0_iter3_reg);

assign select_ln159_1_fu_929_p3 = ((icmp_ln1495_reg_1896[0:0] === 1'b1) ? pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg : pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg);

assign select_ln159_2_fu_1074_p3 = ((icmp_ln1495_1_reg_1912[0:0] === 1'b1) ? trigdata_1_phase_V_1_reg_1612_pp0_iter3_reg : trunc_ln203_1_reg_1709_pp0_iter3_reg);

assign select_ln159_3_fu_1079_p3 = ((icmp_ln1495_1_reg_1912[0:0] === 1'b1) ? pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg : pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg);

assign select_ln159_4_fu_1224_p3 = ((icmp_ln1495_2_reg_1928[0:0] === 1'b1) ? trigdata_2_phase_V_1_reg_1605_pp0_iter3_reg : trunc_ln203_2_reg_1763_pp0_iter3_reg);

assign select_ln159_5_fu_1229_p3 = ((icmp_ln1495_2_reg_1928[0:0] === 1'b1) ? pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg : pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg);

assign select_ln159_6_fu_1374_p3 = ((icmp_ln1495_3_reg_1944[0:0] === 1'b1) ? trigdata_3_phase_V_1_reg_1598_pp0_iter3_reg : trunc_ln203_3_reg_1817_pp0_iter3_reg);

assign select_ln159_7_fu_1379_p3 = ((icmp_ln1495_3_reg_1944[0:0] === 1'b1) ? pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg : pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg);

assign select_ln159_fu_924_p3 = ((icmp_ln1495_reg_1896[0:0] === 1'b1) ? trigdata_0_phase_V_1_reg_1619_pp0_iter3_reg : trunc_ln203_reg_1655_pp0_iter3_reg);

assign select_ln168_10_fu_1303_p3 = ((trigdata_2_trigger_1_reg_1548_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_10_fu_1261_p3 : trunc_ln203_2_reg_1763_pp0_iter3_reg);

assign select_ln168_11_fu_1309_p3 = ((trigdata_2_trigger_1_reg_1548_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_11_fu_1268_p3 : pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg);

assign select_ln168_12_fu_1315_p3 = ((trigdata_2_trigger_1_reg_1548_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_12_fu_1274_p3 : pulsedb_peak_time_V_2_reg_1780_pp0_iter3_reg);

assign select_ln168_13_fu_1321_p3 = ((trigdata_2_trigger_1_reg_1548_pp0_iter3_reg[0:0] === 1'b1) ? add_ln700_2_fu_1297_p2 : pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg);

assign select_ln168_14_fu_1327_p3 = ((trigdata_2_trigger_1_reg_1548_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_13_fu_1281_p3 : pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg);

assign select_ln168_15_fu_1453_p3 = ((trigdata_3_trigger_1_reg_1538_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_15_fu_1411_p3 : trunc_ln203_3_reg_1817_pp0_iter3_reg);

assign select_ln168_16_fu_1459_p3 = ((trigdata_3_trigger_1_reg_1538_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_16_fu_1418_p3 : pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg);

assign select_ln168_17_fu_1465_p3 = ((trigdata_3_trigger_1_reg_1538_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_17_fu_1424_p3 : pulsedb_peak_time_V_3_reg_1834_pp0_iter3_reg);

assign select_ln168_18_fu_1471_p3 = ((trigdata_3_trigger_1_reg_1538_pp0_iter3_reg[0:0] === 1'b1) ? add_ln700_3_fu_1447_p2 : pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg);

assign select_ln168_19_fu_1477_p3 = ((trigdata_3_trigger_1_reg_1538_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_18_fu_1431_p3 : pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg);

assign select_ln168_1_fu_1009_p3 = ((trigdata_0_trigger_1_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_1_fu_968_p3 : pulsedb_start_V_load_reg_1664_pp0_iter3_reg);

assign select_ln168_2_fu_1015_p3 = ((trigdata_0_trigger_1_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_2_fu_974_p3 : pulsedb_peak_time_V_s_reg_1672_pp0_iter3_reg);

assign select_ln168_3_fu_1021_p3 = ((trigdata_0_trigger_1_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? add_ln700_fu_997_p2 : pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg);

assign select_ln168_4_fu_1027_p3 = ((trigdata_0_trigger_1_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_3_fu_981_p3 : pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg);

assign select_ln168_5_fu_1153_p3 = ((trigdata_1_trigger_1_reg_1558_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_5_fu_1111_p3 : trunc_ln203_1_reg_1709_pp0_iter3_reg);

assign select_ln168_6_fu_1159_p3 = ((trigdata_1_trigger_1_reg_1558_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_6_fu_1118_p3 : pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg);

assign select_ln168_7_fu_1165_p3 = ((trigdata_1_trigger_1_reg_1558_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_7_fu_1124_p3 : pulsedb_peak_time_V_1_reg_1726_pp0_iter3_reg);

assign select_ln168_8_fu_1171_p3 = ((trigdata_1_trigger_1_reg_1558_pp0_iter3_reg[0:0] === 1'b1) ? add_ln700_1_fu_1147_p2 : pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg);

assign select_ln168_9_fu_1177_p3 = ((trigdata_1_trigger_1_reg_1558_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_8_fu_1131_p3 : pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg);

assign select_ln168_fu_1003_p3 = ((trigdata_0_trigger_1_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? select_ln73_fu_961_p3 : trunc_ln203_reg_1655_pp0_iter3_reg);

assign select_ln73_10_fu_1261_p3 = ((tmp_33_reg_1802_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_4_fu_1224_p3 : select_ln151_10_fu_1234_p3);

assign select_ln73_11_fu_1268_p3 = ((tmp_33_reg_1802_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_start_V_load_2_reg_1772_pp0_iter3_reg : select_ln151_11_fu_1239_p3);

assign select_ln73_12_fu_1274_p3 = ((tmp_33_reg_1802_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_5_fu_1229_p3 : select_ln151_12_fu_1244_p3);

assign select_ln73_13_fu_1281_p3 = ((tmp_33_reg_1802_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_baseline_V_l_2_reg_1795_pp0_iter3_reg : select_ln151_13_fu_1250_p3);

assign select_ln73_14_fu_1291_p3 = ((tmp_33_reg_1802_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_stop_V_load_2_reg_1787_pp0_iter3_reg : select_ln151_14_fu_1255_p3);

assign select_ln73_15_fu_1411_p3 = ((tmp_34_reg_1856_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_6_fu_1374_p3 : select_ln151_15_fu_1384_p3);

assign select_ln73_16_fu_1418_p3 = ((tmp_34_reg_1856_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_start_V_load_3_reg_1826_pp0_iter3_reg : select_ln151_16_fu_1389_p3);

assign select_ln73_17_fu_1424_p3 = ((tmp_34_reg_1856_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_7_fu_1379_p3 : select_ln151_17_fu_1394_p3);

assign select_ln73_18_fu_1431_p3 = ((tmp_34_reg_1856_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_baseline_V_l_3_reg_1849_pp0_iter3_reg : select_ln151_18_fu_1400_p3);

assign select_ln73_19_fu_1441_p3 = ((tmp_34_reg_1856_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_stop_V_load_3_reg_1841_pp0_iter3_reg : select_ln151_19_fu_1405_p3);

assign select_ln73_1_fu_968_p3 = ((tmp_reg_1694_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_start_V_load_reg_1664_pp0_iter3_reg : select_ln151_1_fu_939_p3);

assign select_ln73_2_fu_974_p3 = ((tmp_reg_1694_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_1_fu_929_p3 : select_ln151_2_fu_944_p3);

assign select_ln73_3_fu_981_p3 = ((tmp_reg_1694_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_baseline_V_l_reg_1687_pp0_iter3_reg : select_ln151_3_fu_950_p3);

assign select_ln73_4_fu_991_p3 = ((tmp_reg_1694_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_stop_V_load_s_reg_1679_pp0_iter3_reg : select_ln151_4_fu_955_p3);

assign select_ln73_5_fu_1111_p3 = ((tmp_32_reg_1748_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_2_fu_1074_p3 : select_ln151_5_fu_1084_p3);

assign select_ln73_6_fu_1118_p3 = ((tmp_32_reg_1748_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_start_V_load_1_reg_1718_pp0_iter3_reg : select_ln151_6_fu_1089_p3);

assign select_ln73_7_fu_1124_p3 = ((tmp_32_reg_1748_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_3_fu_1079_p3 : select_ln151_7_fu_1094_p3);

assign select_ln73_8_fu_1131_p3 = ((tmp_32_reg_1748_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_baseline_V_l_1_reg_1741_pp0_iter3_reg : select_ln151_8_fu_1100_p3);

assign select_ln73_9_fu_1141_p3 = ((tmp_32_reg_1748_pp0_iter3_reg[0:0] === 1'b1) ? pulsedb_stop_V_load_1_reg_1733_pp0_iter3_reg : select_ln151_9_fu_1105_p3);

assign select_ln73_fu_961_p3 = ((tmp_reg_1694_pp0_iter3_reg[0:0] === 1'b1) ? select_ln159_fu_924_p3 : select_ln151_fu_934_p3);

assign sext_ln544_fu_714_p1 = $signed(ret_V_reg_1871);

assign sub_ln1354_1_fu_666_p2 = (zext_ln215_fu_643_p1 - zext_ln215_2_fu_663_p1);

assign sub_ln1354_2_fu_683_p2 = (zext_ln215_fu_643_p1 - zext_ln215_3_fu_680_p1);

assign sub_ln1354_3_fu_700_p2 = (zext_ln215_fu_643_p1 - zext_ln215_4_fu_697_p1);

assign sub_ln1354_fu_649_p2 = (zext_ln215_fu_643_p1 - zext_ln215_1_fu_646_p1);

assign trunc_ln203_1_fu_448_p1 = pulsedb_1_q0[15:0];

assign trunc_ln203_2_fu_510_p1 = pulsedb_2_q0[15:0];

assign trunc_ln203_3_fu_572_p1 = pulsedb_3_q0[15:0];

assign trunc_ln203_fu_386_p1 = pulsedb_0_q0[15:0];

assign zext_ln1354_fu_634_p1 = group_V_read_reg_1626_pp0_iter1_reg;

assign zext_ln215_1_fu_646_p1 = pulsedb_start_V_load_reg_1664;

assign zext_ln215_2_fu_663_p1 = pulsedb_start_V_load_1_reg_1718;

assign zext_ln215_3_fu_680_p1 = pulsedb_start_V_load_2_reg_1772;

assign zext_ln215_4_fu_697_p1 = pulsedb_start_V_load_3_reg_1826;

assign zext_ln215_fu_643_p1 = timestamp_V_read_reg_1524_pp0_iter1_reg;

assign zext_ln544_fu_378_p1 = group_V;

assign zext_ln895_fu_766_p1 = holdoff_V_read_reg_1533_pp0_iter2_reg;

endmodule //analyze_pulse
