// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module update_baselines (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        group_V,
        phases_0_V_read,
        phases_1_V_read,
        phases_2_V_read,
        phases_3_V_read,
        grow_n_V,
        shrink_n_V,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] group_V;
input  [15:0] phases_0_V_read;
input  [15:0] phases_1_V_read;
input  [15:0] phases_2_V_read;
input  [15:0] phases_3_V_read;
input  [8:0] grow_n_V;
input  [8:0] shrink_n_V;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] lastbase_baseline_V_s;
reg   [15:0] lastbase_win_V_0;
reg   [5:0] lastbase_addr_V_0;
reg   [31:0] lastbase_accum_V_0;
reg   [8:0] lastbase_num_in_V_0;
reg   [8:0] lastbase_num_out_V_0;
wire   [8:0] basedb_0_address0;
reg    basedb_0_ce0;
wire   [87:0] basedb_0_q0;
wire   [8:0] basedb_0_address1;
reg    basedb_0_ce1;
reg    basedb_0_we1;
wire   [87:0] basedb_0_d1;
reg   [15:0] lastbase_baseline_V_1;
reg   [15:0] lastbase_win_V_1;
reg   [5:0] lastbase_addr_V_1;
reg   [31:0] lastbase_accum_V_1;
reg   [8:0] lastbase_num_in_V_1;
reg   [8:0] lastbase_num_out_V_1;
wire   [8:0] basedb_1_address0;
reg    basedb_1_ce0;
wire   [87:0] basedb_1_q0;
wire   [8:0] basedb_1_address1;
reg    basedb_1_ce1;
reg    basedb_1_we1;
wire   [87:0] basedb_1_d1;
reg   [15:0] lastbase_baseline_V_2;
reg   [15:0] lastbase_win_V_2;
reg   [5:0] lastbase_addr_V_2;
reg   [31:0] lastbase_accum_V_2;
reg   [8:0] lastbase_num_in_V_2;
reg   [8:0] lastbase_num_out_V_2;
wire   [8:0] basedb_2_address0;
reg    basedb_2_ce0;
wire   [87:0] basedb_2_q0;
wire   [8:0] basedb_2_address1;
reg    basedb_2_ce1;
reg    basedb_2_we1;
wire   [87:0] basedb_2_d1;
reg   [15:0] lastbase_baseline_V_3;
reg   [15:0] lastbase_win_V_3;
reg   [5:0] lastbase_addr_V_3;
reg   [31:0] lastbase_accum_V_3;
reg   [8:0] lastbase_num_in_V_3;
reg   [8:0] lastbase_num_out_V_3;
wire   [8:0] basedb_3_address0;
reg    basedb_3_ce0;
wire   [87:0] basedb_3_q0;
wire   [8:0] basedb_3_address1;
reg    basedb_3_ce1;
reg    basedb_3_we1;
wire   [87:0] basedb_3_d1;
reg   [0:0] started;
wire   [14:0] basline_mem_V_0_address0;
reg    basline_mem_V_0_ce0;
wire   [15:0] basline_mem_V_0_q0;
wire   [14:0] basline_mem_V_0_address1;
reg    basline_mem_V_0_ce1;
reg    basline_mem_V_0_we1;
wire   [14:0] basline_mem_V_1_address0;
reg    basline_mem_V_1_ce0;
wire   [15:0] basline_mem_V_1_q0;
wire   [14:0] basline_mem_V_1_address1;
reg    basline_mem_V_1_ce1;
reg    basline_mem_V_1_we1;
wire   [14:0] basline_mem_V_2_address0;
reg    basline_mem_V_2_ce0;
wire   [15:0] basline_mem_V_2_q0;
wire   [14:0] basline_mem_V_2_address1;
reg    basline_mem_V_2_ce1;
reg    basline_mem_V_2_we1;
wire   [14:0] basline_mem_V_3_address0;
reg    basline_mem_V_3_ce0;
wire   [15:0] basline_mem_V_3_q0;
wire   [14:0] basline_mem_V_3_address1;
reg    basline_mem_V_3_ce1;
reg    basline_mem_V_3_we1;
reg   [8:0] shrink_n_V_read_reg_2410;
reg   [8:0] shrink_n_V_read_reg_2410_pp0_iter1_reg;
reg   [8:0] grow_n_V_read_reg_2418;
reg   [8:0] grow_n_V_read_reg_2418_pp0_iter1_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter1_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter2_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter3_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter4_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter5_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter6_reg;
reg  signed [15:0] phases_3_V_read_1_reg_2426_pp0_iter7_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter1_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter2_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter3_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter4_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter5_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter6_reg;
reg  signed [15:0] phases_2_V_read_1_reg_2433_pp0_iter7_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter1_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter2_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter3_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter4_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter5_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter6_reg;
reg  signed [15:0] phases_1_V_read_1_reg_2440_pp0_iter7_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter1_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter2_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter3_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter4_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter5_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter6_reg;
reg  signed [15:0] phases_0_V_read_1_reg_2447_pp0_iter7_reg;
reg   [8:0] group_V_read_reg_2454;
reg   [8:0] group_V_read_reg_2454_pp0_iter1_reg;
reg   [8:0] group_V_read_reg_2454_pp0_iter2_reg;
reg   [8:0] group_V_read_reg_2454_pp0_iter3_reg;
reg   [8:0] group_V_read_reg_2454_pp0_iter4_reg;
reg   [8:0] group_V_read_reg_2454_pp0_iter5_reg;
wire  signed [15:0] trunc_ln81_fu_432_p1;
reg  signed [15:0] trunc_ln81_reg_2485;
reg  signed [15:0] trunc_ln81_reg_2485_pp0_iter2_reg;
reg  signed [15:0] trunc_ln81_reg_2485_pp0_iter3_reg;
reg  signed [15:0] trunc_ln81_reg_2485_pp0_iter4_reg;
reg   [15:0] db_win_V_new_reg_2492;
reg   [15:0] db_win_V_new_reg_2492_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new_reg_2497;
reg   [5:0] db_addr_V_1_new_reg_2497_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new_reg_2497_pp0_iter3_reg;
reg   [5:0] db_addr_V_1_new_reg_2497_pp0_iter4_reg;
reg   [5:0] db_addr_V_1_new_reg_2497_pp0_iter5_reg;
reg   [5:0] db_addr_V_1_new_reg_2497_pp0_iter6_reg;
reg   [31:0] db_accum_V_new_reg_2504;
reg   [31:0] db_accum_V_new_reg_2504_pp0_iter2_reg;
reg   [31:0] db_accum_V_new_reg_2504_pp0_iter3_reg;
reg   [31:0] db_accum_V_new_reg_2504_pp0_iter4_reg;
reg   [31:0] db_accum_V_new_reg_2504_pp0_iter5_reg;
reg   [8:0] db_num_in_V_1_new_reg_2509;
reg   [8:0] db_num_in_V_1_new_reg_2509_pp0_iter2_reg;
reg   [8:0] db_num_in_V_1_new_reg_2509_pp0_iter3_reg;
reg   [8:0] db_num_in_V_1_new_reg_2509_pp0_iter4_reg;
reg   [8:0] db_num_out_V_1_new_reg_2516;
reg   [8:0] db_num_out_V_1_new_reg_2516_pp0_iter2_reg;
reg   [8:0] db_num_out_V_1_new_reg_2516_pp0_iter3_reg;
reg   [8:0] db_num_out_V_1_new_reg_2516_pp0_iter4_reg;
reg   [21:0] tmp_reg_2523;
reg   [21:0] tmp_reg_2523_pp0_iter2_reg;
reg   [21:0] tmp_reg_2523_pp0_iter3_reg;
reg   [21:0] tmp_reg_2523_pp0_iter4_reg;
reg   [21:0] tmp_reg_2523_pp0_iter5_reg;
wire  signed [15:0] trunc_ln81_1_fu_496_p1;
reg  signed [15:0] trunc_ln81_1_reg_2528;
reg  signed [15:0] trunc_ln81_1_reg_2528_pp0_iter2_reg;
reg  signed [15:0] trunc_ln81_1_reg_2528_pp0_iter3_reg;
reg  signed [15:0] trunc_ln81_1_reg_2528_pp0_iter4_reg;
reg   [15:0] db_win_V_new11_1_reg_2535;
reg   [15:0] db_win_V_new11_1_reg_2535_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new20_1_reg_2540;
reg   [5:0] db_addr_V_1_new20_1_reg_2540_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new20_1_reg_2540_pp0_iter3_reg;
reg   [5:0] db_addr_V_1_new20_1_reg_2540_pp0_iter4_reg;
reg   [5:0] db_addr_V_1_new20_1_reg_2540_pp0_iter5_reg;
reg   [5:0] db_addr_V_1_new20_1_reg_2540_pp0_iter6_reg;
reg   [31:0] db_accum_V_new29_1_reg_2547;
reg   [31:0] db_accum_V_new29_1_reg_2547_pp0_iter2_reg;
reg   [31:0] db_accum_V_new29_1_reg_2547_pp0_iter3_reg;
reg   [31:0] db_accum_V_new29_1_reg_2547_pp0_iter4_reg;
reg   [31:0] db_accum_V_new29_1_reg_2547_pp0_iter5_reg;
reg   [8:0] db_num_in_V_1_new38_1_reg_2552;
reg   [8:0] db_num_in_V_1_new38_1_reg_2552_pp0_iter2_reg;
reg   [8:0] db_num_in_V_1_new38_1_reg_2552_pp0_iter3_reg;
reg   [8:0] db_num_in_V_1_new38_1_reg_2552_pp0_iter4_reg;
reg   [8:0] db_num_out_V_1_new47_1_reg_2559;
reg   [8:0] db_num_out_V_1_new47_1_reg_2559_pp0_iter2_reg;
reg   [8:0] db_num_out_V_1_new47_1_reg_2559_pp0_iter3_reg;
reg   [8:0] db_num_out_V_1_new47_1_reg_2559_pp0_iter4_reg;
reg   [21:0] tmp_1_reg_2566;
reg   [21:0] tmp_1_reg_2566_pp0_iter2_reg;
reg   [21:0] tmp_1_reg_2566_pp0_iter3_reg;
reg   [21:0] tmp_1_reg_2566_pp0_iter4_reg;
reg   [21:0] tmp_1_reg_2566_pp0_iter5_reg;
wire  signed [15:0] trunc_ln81_2_fu_560_p1;
reg  signed [15:0] trunc_ln81_2_reg_2571;
reg  signed [15:0] trunc_ln81_2_reg_2571_pp0_iter2_reg;
reg  signed [15:0] trunc_ln81_2_reg_2571_pp0_iter3_reg;
reg  signed [15:0] trunc_ln81_2_reg_2571_pp0_iter4_reg;
reg   [15:0] db_win_V_new11_2_reg_2578;
reg   [15:0] db_win_V_new11_2_reg_2578_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new20_2_reg_2583;
reg   [5:0] db_addr_V_1_new20_2_reg_2583_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new20_2_reg_2583_pp0_iter3_reg;
reg   [5:0] db_addr_V_1_new20_2_reg_2583_pp0_iter4_reg;
reg   [5:0] db_addr_V_1_new20_2_reg_2583_pp0_iter5_reg;
reg   [5:0] db_addr_V_1_new20_2_reg_2583_pp0_iter6_reg;
reg   [31:0] db_accum_V_new29_2_reg_2590;
reg   [31:0] db_accum_V_new29_2_reg_2590_pp0_iter2_reg;
reg   [31:0] db_accum_V_new29_2_reg_2590_pp0_iter3_reg;
reg   [31:0] db_accum_V_new29_2_reg_2590_pp0_iter4_reg;
reg   [31:0] db_accum_V_new29_2_reg_2590_pp0_iter5_reg;
reg   [8:0] db_num_in_V_1_new38_2_reg_2595;
reg   [8:0] db_num_in_V_1_new38_2_reg_2595_pp0_iter2_reg;
reg   [8:0] db_num_in_V_1_new38_2_reg_2595_pp0_iter3_reg;
reg   [8:0] db_num_in_V_1_new38_2_reg_2595_pp0_iter4_reg;
reg   [8:0] db_num_out_V_1_new47_2_reg_2602;
reg   [8:0] db_num_out_V_1_new47_2_reg_2602_pp0_iter2_reg;
reg   [8:0] db_num_out_V_1_new47_2_reg_2602_pp0_iter3_reg;
reg   [8:0] db_num_out_V_1_new47_2_reg_2602_pp0_iter4_reg;
reg   [21:0] tmp_2_reg_2609;
reg   [21:0] tmp_2_reg_2609_pp0_iter2_reg;
reg   [21:0] tmp_2_reg_2609_pp0_iter3_reg;
reg   [21:0] tmp_2_reg_2609_pp0_iter4_reg;
reg   [21:0] tmp_2_reg_2609_pp0_iter5_reg;
wire  signed [15:0] trunc_ln81_3_fu_624_p1;
reg  signed [15:0] trunc_ln81_3_reg_2614;
reg  signed [15:0] trunc_ln81_3_reg_2614_pp0_iter2_reg;
reg  signed [15:0] trunc_ln81_3_reg_2614_pp0_iter3_reg;
reg  signed [15:0] trunc_ln81_3_reg_2614_pp0_iter4_reg;
reg   [15:0] db_win_V_new11_3_reg_2621;
reg   [15:0] db_win_V_new11_3_reg_2621_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new20_3_reg_2626;
reg   [5:0] db_addr_V_1_new20_3_reg_2626_pp0_iter2_reg;
reg   [5:0] db_addr_V_1_new20_3_reg_2626_pp0_iter3_reg;
reg   [5:0] db_addr_V_1_new20_3_reg_2626_pp0_iter4_reg;
reg   [5:0] db_addr_V_1_new20_3_reg_2626_pp0_iter5_reg;
reg   [5:0] db_addr_V_1_new20_3_reg_2626_pp0_iter6_reg;
reg   [31:0] db_accum_V_new29_3_reg_2633;
reg   [31:0] db_accum_V_new29_3_reg_2633_pp0_iter2_reg;
reg   [31:0] db_accum_V_new29_3_reg_2633_pp0_iter3_reg;
reg   [31:0] db_accum_V_new29_3_reg_2633_pp0_iter4_reg;
reg   [31:0] db_accum_V_new29_3_reg_2633_pp0_iter5_reg;
reg   [8:0] db_num_in_V_1_new38_3_reg_2638;
reg   [8:0] db_num_in_V_1_new38_3_reg_2638_pp0_iter2_reg;
reg   [8:0] db_num_in_V_1_new38_3_reg_2638_pp0_iter3_reg;
reg   [8:0] db_num_in_V_1_new38_3_reg_2638_pp0_iter4_reg;
reg   [8:0] db_num_out_V_1_new47_3_reg_2645;
reg   [8:0] db_num_out_V_1_new47_3_reg_2645_pp0_iter2_reg;
reg   [8:0] db_num_out_V_1_new47_3_reg_2645_pp0_iter3_reg;
reg   [8:0] db_num_out_V_1_new47_3_reg_2645_pp0_iter4_reg;
reg   [21:0] tmp_3_reg_2652;
reg   [21:0] tmp_3_reg_2652_pp0_iter2_reg;
reg   [21:0] tmp_3_reg_2652_pp0_iter3_reg;
reg   [21:0] tmp_3_reg_2652_pp0_iter4_reg;
reg   [21:0] tmp_3_reg_2652_pp0_iter5_reg;
wire   [16:0] p_Val2_s_fu_705_p2;
reg   [16:0] p_Val2_s_reg_2657;
reg   [16:0] p_Val2_s_reg_2657_pp0_iter3_reg;
wire   [0:0] icmp_ln891_fu_711_p2;
reg   [0:0] icmp_ln891_reg_2664;
reg   [0:0] icmp_ln891_reg_2664_pp0_iter3_reg;
wire   [0:0] icmp_ln891_1_fu_715_p2;
reg   [0:0] icmp_ln891_1_reg_2670;
reg   [0:0] icmp_ln891_1_reg_2670_pp0_iter3_reg;
reg   [0:0] icmp_ln891_1_reg_2670_pp0_iter4_reg;
wire   [15:0] add_ln47_fu_732_p2;
reg   [15:0] add_ln47_reg_2675;
wire   [16:0] p_Val2_2_fu_744_p2;
reg   [16:0] p_Val2_2_reg_2680;
reg   [16:0] p_Val2_2_reg_2680_pp0_iter3_reg;
wire   [0:0] icmp_ln891_4_fu_750_p2;
reg   [0:0] icmp_ln891_4_reg_2687;
reg   [0:0] icmp_ln891_4_reg_2687_pp0_iter3_reg;
wire   [0:0] icmp_ln891_5_fu_754_p2;
reg   [0:0] icmp_ln891_5_reg_2693;
reg   [0:0] icmp_ln891_5_reg_2693_pp0_iter3_reg;
reg   [0:0] icmp_ln891_5_reg_2693_pp0_iter4_reg;
wire   [15:0] add_ln47_1_fu_771_p2;
reg   [15:0] add_ln47_1_reg_2698;
wire   [16:0] p_Val2_4_fu_783_p2;
reg   [16:0] p_Val2_4_reg_2703;
reg   [16:0] p_Val2_4_reg_2703_pp0_iter3_reg;
wire   [0:0] icmp_ln891_2_fu_789_p2;
reg   [0:0] icmp_ln891_2_reg_2710;
reg   [0:0] icmp_ln891_2_reg_2710_pp0_iter3_reg;
wire   [0:0] icmp_ln891_6_fu_793_p2;
reg   [0:0] icmp_ln891_6_reg_2716;
reg   [0:0] icmp_ln891_6_reg_2716_pp0_iter3_reg;
reg   [0:0] icmp_ln891_6_reg_2716_pp0_iter4_reg;
wire   [15:0] add_ln47_2_fu_810_p2;
reg   [15:0] add_ln47_2_reg_2721;
wire   [16:0] p_Val2_6_fu_822_p2;
reg   [16:0] p_Val2_6_reg_2726;
reg   [16:0] p_Val2_6_reg_2726_pp0_iter3_reg;
wire   [0:0] icmp_ln891_3_fu_828_p2;
reg   [0:0] icmp_ln891_3_reg_2733;
reg   [0:0] icmp_ln891_3_reg_2733_pp0_iter3_reg;
wire   [0:0] icmp_ln891_7_fu_832_p2;
reg   [0:0] icmp_ln891_7_reg_2739;
reg   [0:0] icmp_ln891_7_reg_2739_pp0_iter3_reg;
reg   [0:0] icmp_ln891_7_reg_2739_pp0_iter4_reg;
wire   [15:0] add_ln47_3_fu_849_p2;
reg   [15:0] add_ln47_3_reg_2744;
wire   [15:0] select_ln83_fu_859_p3;
reg   [15:0] select_ln83_reg_2749;
reg   [15:0] select_ln83_reg_2749_pp0_iter4_reg;
wire   [16:0] xs_V_7_fu_866_p2;
reg   [16:0] xs_V_7_reg_2759;
wire   [15:0] select_ln83_1_fu_875_p3;
reg   [15:0] select_ln83_1_reg_2769;
reg   [15:0] select_ln83_1_reg_2769_pp0_iter4_reg;
wire   [16:0] xs_V_8_fu_882_p2;
reg   [16:0] xs_V_8_reg_2779;
wire   [15:0] select_ln83_2_fu_891_p3;
reg   [15:0] select_ln83_2_reg_2789;
reg   [15:0] select_ln83_2_reg_2789_pp0_iter4_reg;
wire   [16:0] xs_V_9_fu_898_p2;
reg   [16:0] xs_V_9_reg_2799;
wire   [15:0] select_ln83_3_fu_907_p3;
reg   [15:0] select_ln83_3_reg_2809;
reg   [15:0] select_ln83_3_reg_2809_pp0_iter4_reg;
wire   [16:0] xs_V_10_fu_914_p2;
reg   [16:0] xs_V_10_reg_2819;
wire   [0:0] icmp_ln1494_fu_957_p2;
reg   [0:0] icmp_ln1494_reg_2829;
wire   [0:0] and_ln891_1_fu_963_p2;
reg   [0:0] and_ln891_1_reg_2835;
wire   [0:0] and_ln891_2_fu_973_p2;
reg   [0:0] and_ln891_2_reg_2842;
reg   [15:0] basline_mem_V_0_load_reg_2849;
wire   [0:0] icmp_ln1494_1_fu_1013_p2;
reg   [0:0] icmp_ln1494_1_reg_2854;
wire   [0:0] and_ln891_4_fu_1019_p2;
reg   [0:0] and_ln891_4_reg_2860;
wire   [0:0] and_ln891_5_fu_1029_p2;
reg   [0:0] and_ln891_5_reg_2867;
reg   [15:0] basline_mem_V_1_load_reg_2874;
wire   [0:0] icmp_ln1494_2_fu_1069_p2;
reg   [0:0] icmp_ln1494_2_reg_2879;
wire   [0:0] and_ln891_7_fu_1075_p2;
reg   [0:0] and_ln891_7_reg_2885;
wire   [0:0] and_ln891_8_fu_1085_p2;
reg   [0:0] and_ln891_8_reg_2892;
reg   [15:0] basline_mem_V_2_load_reg_2899;
wire   [0:0] icmp_ln1494_3_fu_1125_p2;
reg   [0:0] icmp_ln1494_3_reg_2904;
wire   [0:0] and_ln891_10_fu_1131_p2;
reg   [0:0] and_ln891_10_reg_2910;
wire   [0:0] and_ln891_11_fu_1141_p2;
reg   [0:0] and_ln891_11_reg_2917;
reg   [15:0] basline_mem_V_3_load_reg_2924;
wire   [0:0] icmp_ln879_fu_1147_p2;
wire   [15:0] select_ln891_2_fu_1248_p3;
reg   [15:0] select_ln891_2_reg_2933;
reg   [15:0] select_ln891_2_reg_2933_pp0_iter6_reg;
wire   [8:0] select_ln891_4_fu_1263_p3;
reg   [8:0] select_ln891_4_reg_2938;
reg   [8:0] select_ln891_4_reg_2938_pp0_iter6_reg;
wire   [8:0] select_ln891_6_fu_1275_p3;
reg   [8:0] select_ln891_6_reg_2943;
reg   [8:0] select_ln891_6_reg_2943_pp0_iter6_reg;
wire  signed [16:0] sub_ln1193_fu_1312_p2;
reg  signed [16:0] sub_ln1193_reg_2948;
wire   [15:0] select_ln891_11_fu_1408_p3;
reg   [15:0] select_ln891_11_reg_2954;
reg   [15:0] select_ln891_11_reg_2954_pp0_iter6_reg;
wire   [8:0] select_ln891_13_fu_1423_p3;
reg   [8:0] select_ln891_13_reg_2959;
reg   [8:0] select_ln891_13_reg_2959_pp0_iter6_reg;
wire   [8:0] select_ln891_15_fu_1435_p3;
reg   [8:0] select_ln891_15_reg_2964;
reg   [8:0] select_ln891_15_reg_2964_pp0_iter6_reg;
wire  signed [16:0] sub_ln1193_2_fu_1472_p2;
reg  signed [16:0] sub_ln1193_2_reg_2969;
wire   [15:0] select_ln891_20_fu_1568_p3;
reg   [15:0] select_ln891_20_reg_2975;
reg   [15:0] select_ln891_20_reg_2975_pp0_iter6_reg;
wire   [8:0] select_ln891_22_fu_1583_p3;
reg   [8:0] select_ln891_22_reg_2980;
reg   [8:0] select_ln891_22_reg_2980_pp0_iter6_reg;
wire   [8:0] select_ln891_24_fu_1595_p3;
reg   [8:0] select_ln891_24_reg_2985;
reg   [8:0] select_ln891_24_reg_2985_pp0_iter6_reg;
wire  signed [16:0] sub_ln1193_4_fu_1632_p2;
reg  signed [16:0] sub_ln1193_4_reg_2990;
wire   [15:0] select_ln891_29_fu_1728_p3;
reg   [15:0] select_ln891_29_reg_2996;
reg   [15:0] select_ln891_29_reg_2996_pp0_iter6_reg;
wire   [8:0] select_ln891_31_fu_1743_p3;
reg   [8:0] select_ln891_31_reg_3001;
reg   [8:0] select_ln891_31_reg_3001_pp0_iter6_reg;
wire   [8:0] select_ln891_33_fu_1755_p3;
reg   [8:0] select_ln891_33_reg_3006;
reg   [8:0] select_ln891_33_reg_3006_pp0_iter6_reg;
wire  signed [16:0] sub_ln1193_6_fu_1792_p2;
reg  signed [16:0] sub_ln1193_6_reg_3011;
wire   [9:0] ret_V_fu_1801_p2;
reg   [9:0] ret_V_reg_3017;
wire   [31:0] add_ln703_2_fu_1813_p2;
reg   [31:0] add_ln703_2_reg_3022;
reg   [0:0] tmp_13_reg_3028;
reg   [0:0] tmp_13_reg_3028_pp0_iter7_reg;
reg   [15:0] trunc_ln1148_2_reg_3033;
reg   [15:0] trunc_ln1148_2_reg_3033_pp0_iter7_reg;
wire   [31:0] add_ln703_5_fu_1847_p2;
reg   [31:0] add_ln703_5_reg_3038;
reg   [0:0] tmp_18_reg_3044;
reg   [0:0] tmp_18_reg_3044_pp0_iter7_reg;
reg   [15:0] trunc_ln1148_5_reg_3049;
reg   [15:0] trunc_ln1148_5_reg_3049_pp0_iter7_reg;
wire   [31:0] add_ln703_8_fu_1881_p2;
reg   [31:0] add_ln703_8_reg_3054;
reg   [0:0] tmp_23_reg_3060;
reg   [0:0] tmp_23_reg_3060_pp0_iter7_reg;
reg   [15:0] trunc_ln1148_8_reg_3065;
reg   [15:0] trunc_ln1148_8_reg_3065_pp0_iter7_reg;
wire   [31:0] add_ln703_11_fu_1915_p2;
reg   [31:0] add_ln703_11_reg_3070;
reg   [0:0] tmp_28_reg_3076;
reg   [0:0] tmp_28_reg_3076_pp0_iter7_reg;
reg   [15:0] trunc_ln1148_3_reg_3081;
reg   [15:0] trunc_ln1148_3_reg_3081_pp0_iter7_reg;
reg   [15:0] trunc_ln1148_1_reg_3086;
reg   [15:0] trunc_ln1148_4_reg_3091;
reg   [15:0] trunc_ln1148_7_reg_3096;
reg   [15:0] trunc_ln1148_s_reg_3101;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_424_p1;
wire   [63:0] zext_ln47_1_fu_871_p1;
wire   [63:0] zext_ln47_3_fu_887_p1;
wire   [63:0] zext_ln47_5_fu_903_p1;
wire   [63:0] zext_ln47_7_fu_919_p1;
wire   [63:0] zext_ln203_fu_1300_p1;
wire   [63:0] zext_ln203_1_fu_1460_p1;
wire   [63:0] zext_ln203_2_fu_1620_p1;
wire   [63:0] zext_ln203_3_fu_1780_p1;
wire  signed [63:0] sext_ln544_fu_1943_p1;
wire   [15:0] select_ln1148_fu_2303_p3;
reg   [15:0] ap_sig_allocacmp_lastbase_baseline_V_1;
wire   [5:0] add_ln700_2_fu_2114_p2;
wire   [15:0] select_ln1148_1_fu_2320_p3;
reg   [15:0] ap_sig_allocacmp_lastbase_baseline_V_2;
wire   [5:0] add_ln700_5_fu_2160_p2;
wire   [15:0] select_ln1148_2_fu_2337_p3;
reg   [15:0] ap_sig_allocacmp_lastbase_baseline_V_3;
wire   [5:0] add_ln700_8_fu_2206_p2;
wire   [15:0] select_ln1148_3_fu_2354_p3;
reg   [15:0] ap_sig_allocacmp_lastbase_baseline_V_4;
wire   [5:0] add_ln700_11_fu_2252_p2;
reg   [0:0] ap_sig_allocacmp_started_load;
wire   [15:0] select_ln891_8_fu_1287_p3;
wire   [15:0] select_ln891_17_fu_1447_p3;
wire   [15:0] select_ln891_26_fu_1607_p3;
wire   [15:0] select_ln891_35_fu_1767_p3;
wire   [14:0] tmp_4_fu_688_p3;
wire  signed [16:0] sext_ln703_fu_699_p1;
wire  signed [16:0] sext_ln703_1_fu_702_p1;
wire   [6:0] zext_ln1353_fu_719_p1;
wire   [6:0] add_ln1353_fu_722_p2;
wire   [15:0] zext_ln81_fu_695_p1;
wire   [15:0] zext_ln47_fu_728_p1;
wire  signed [16:0] sext_ln703_5_fu_738_p1;
wire  signed [16:0] sext_ln703_6_fu_741_p1;
wire   [6:0] zext_ln1353_1_fu_758_p1;
wire   [6:0] add_ln1353_1_fu_761_p2;
wire   [15:0] zext_ln47_2_fu_767_p1;
wire  signed [16:0] sext_ln703_10_fu_777_p1;
wire  signed [16:0] sext_ln703_11_fu_780_p1;
wire   [6:0] zext_ln1353_2_fu_797_p1;
wire   [6:0] add_ln1353_2_fu_800_p2;
wire   [15:0] zext_ln47_4_fu_806_p1;
wire  signed [16:0] sext_ln703_15_fu_816_p1;
wire  signed [16:0] sext_ln703_16_fu_819_p1;
wire   [6:0] zext_ln1353_3_fu_836_p1;
wire   [6:0] add_ln1353_3_fu_839_p2;
wire   [15:0] zext_ln47_6_fu_845_p1;
wire   [0:0] p_Result_s_fu_932_p3;
reg   [16:0] p_Result_7_fu_923_p4;
wire   [16:0] select_ln178_fu_939_p3;
wire   [17:0] shl_ln_fu_946_p3;
wire   [17:0] zext_ln1494_fu_954_p1;
wire   [0:0] xor_ln891_fu_968_p2;
wire   [0:0] p_Result_2_fu_988_p3;
reg   [16:0] p_Result_8_fu_979_p4;
wire   [16:0] select_ln178_1_fu_995_p3;
wire   [17:0] shl_ln728_1_fu_1002_p3;
wire   [17:0] zext_ln1494_1_fu_1010_p1;
wire   [0:0] xor_ln891_1_fu_1024_p2;
wire   [0:0] p_Result_4_fu_1044_p3;
reg   [16:0] p_Result_9_fu_1035_p4;
wire   [16:0] select_ln178_2_fu_1051_p3;
wire   [17:0] shl_ln728_2_fu_1058_p3;
wire   [17:0] zext_ln1494_2_fu_1066_p1;
wire   [0:0] xor_ln891_2_fu_1080_p2;
wire   [0:0] p_Result_6_fu_1100_p3;
reg   [16:0] p_Result_10_fu_1091_p4;
wire   [16:0] select_ln178_3_fu_1107_p3;
wire   [17:0] shl_ln728_3_fu_1114_p3;
wire   [17:0] zext_ln1494_3_fu_1122_p1;
wire   [0:0] xor_ln891_3_fu_1136_p2;
wire   [16:0] zext_ln703_fu_1163_p1;
wire   [16:0] add_ln1192_fu_1166_p2;
wire   [0:0] tmp_11_fu_1177_p3;
wire   [15:0] add_ln703_fu_1172_p2;
wire   [16:0] add_ln1193_fu_1198_p2;
wire   [0:0] tmp_12_fu_1204_p3;
wire   [15:0] add_ln703_1_fu_1212_p2;
wire   [0:0] xor_ln1494_fu_1225_p2;
wire   [0:0] and_ln891_fu_1230_p2;
wire   [15:0] select_ln340_1_fu_1217_p3;
wire   [15:0] select_ln891_fu_1235_p3;
wire   [15:0] select_ln340_fu_1185_p3;
wire   [15:0] select_ln891_1_fu_1242_p3;
wire   [8:0] add_ln700_1_fu_1193_p2;
wire   [8:0] select_ln891_3_fu_1255_p3;
wire   [8:0] add_ln700_fu_1158_p2;
wire   [8:0] select_ln891_5_fu_1269_p3;
wire   [15:0] select_ln891_7_fu_1282_p3;
wire   [14:0] tmp_5_fu_1294_p3;
wire  signed [16:0] sext_ln703_2_fu_1305_p1;
wire  signed [16:0] sext_ln703_3_fu_1309_p1;
wire   [16:0] zext_ln703_1_fu_1323_p1;
wire   [16:0] add_ln1192_1_fu_1326_p2;
wire   [0:0] tmp_16_fu_1337_p3;
wire   [15:0] add_ln703_3_fu_1332_p2;
wire   [16:0] add_ln1193_1_fu_1358_p2;
wire   [0:0] tmp_17_fu_1364_p3;
wire   [15:0] add_ln703_4_fu_1372_p2;
wire   [0:0] xor_ln1494_1_fu_1385_p2;
wire   [0:0] and_ln891_3_fu_1390_p2;
wire   [15:0] select_ln340_3_fu_1377_p3;
wire   [15:0] select_ln891_9_fu_1395_p3;
wire   [15:0] select_ln340_2_fu_1345_p3;
wire   [15:0] select_ln891_10_fu_1402_p3;
wire   [8:0] add_ln700_4_fu_1353_p2;
wire   [8:0] select_ln891_12_fu_1415_p3;
wire   [8:0] add_ln700_3_fu_1318_p2;
wire   [8:0] select_ln891_14_fu_1429_p3;
wire   [15:0] select_ln891_16_fu_1442_p3;
wire   [14:0] tmp_6_fu_1454_p3;
wire  signed [16:0] sext_ln703_7_fu_1465_p1;
wire  signed [16:0] sext_ln703_8_fu_1469_p1;
wire   [16:0] zext_ln703_2_fu_1483_p1;
wire   [16:0] add_ln1192_2_fu_1486_p2;
wire   [0:0] tmp_21_fu_1497_p3;
wire   [15:0] add_ln703_6_fu_1492_p2;
wire   [16:0] add_ln1193_2_fu_1518_p2;
wire   [0:0] tmp_22_fu_1524_p3;
wire   [15:0] add_ln703_7_fu_1532_p2;
wire   [0:0] xor_ln1494_2_fu_1545_p2;
wire   [0:0] and_ln891_6_fu_1550_p2;
wire   [15:0] select_ln340_5_fu_1537_p3;
wire   [15:0] select_ln891_18_fu_1555_p3;
wire   [15:0] select_ln340_4_fu_1505_p3;
wire   [15:0] select_ln891_19_fu_1562_p3;
wire   [8:0] add_ln700_7_fu_1513_p2;
wire   [8:0] select_ln891_21_fu_1575_p3;
wire   [8:0] add_ln700_6_fu_1478_p2;
wire   [8:0] select_ln891_23_fu_1589_p3;
wire   [15:0] select_ln891_25_fu_1602_p3;
wire   [14:0] tmp_7_fu_1614_p3;
wire  signed [16:0] sext_ln703_12_fu_1625_p1;
wire  signed [16:0] sext_ln703_13_fu_1629_p1;
wire   [16:0] zext_ln703_3_fu_1643_p1;
wire   [16:0] add_ln1192_3_fu_1646_p2;
wire   [0:0] tmp_26_fu_1657_p3;
wire   [15:0] add_ln703_9_fu_1652_p2;
wire   [16:0] add_ln1193_3_fu_1678_p2;
wire   [0:0] tmp_27_fu_1684_p3;
wire   [15:0] add_ln703_10_fu_1692_p2;
wire   [0:0] xor_ln1494_3_fu_1705_p2;
wire   [0:0] and_ln891_9_fu_1710_p2;
wire   [15:0] select_ln340_7_fu_1697_p3;
wire   [15:0] select_ln891_27_fu_1715_p3;
wire   [15:0] select_ln340_6_fu_1665_p3;
wire   [15:0] select_ln891_28_fu_1722_p3;
wire   [8:0] add_ln700_10_fu_1673_p2;
wire   [8:0] select_ln891_30_fu_1735_p3;
wire   [8:0] add_ln700_9_fu_1638_p2;
wire   [8:0] select_ln891_32_fu_1749_p3;
wire   [15:0] select_ln891_34_fu_1762_p3;
wire   [14:0] tmp_8_fu_1774_p3;
wire  signed [16:0] sext_ln703_17_fu_1785_p1;
wire  signed [16:0] sext_ln703_18_fu_1789_p1;
wire   [9:0] zext_ln1354_fu_1798_p1;
wire  signed [31:0] sext_ln703_4_fu_1807_p1;
wire  signed [21:0] sext_ln703_20_fu_1810_p1;
wire   [21:0] add_ln1148_fu_1818_p2;
wire  signed [31:0] sext_ln703_9_fu_1841_p1;
wire  signed [21:0] sext_ln703_21_fu_1844_p1;
wire   [21:0] add_ln1148_1_fu_1852_p2;
wire  signed [31:0] sext_ln703_14_fu_1875_p1;
wire  signed [21:0] sext_ln703_22_fu_1878_p1;
wire   [21:0] add_ln1148_2_fu_1886_p2;
wire  signed [31:0] sext_ln703_19_fu_1909_p1;
wire  signed [21:0] sext_ln703_23_fu_1912_p1;
wire   [21:0] add_ln1148_3_fu_1920_p2;
wire   [31:0] sub_ln1148_fu_2119_p2;
wire   [31:0] sub_ln1148_2_fu_2165_p2;
wire   [31:0] sub_ln1148_4_fu_2211_p2;
wire   [31:0] sub_ln1148_6_fu_2257_p2;
wire   [15:0] sub_ln1148_1_fu_2298_p2;
wire   [15:0] sub_ln1148_3_fu_2315_p2;
wire   [15:0] sub_ln1148_5_fu_2332_p2;
wire   [15:0] sub_ln1148_7_fu_2349_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to7;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 lastbase_baseline_V_s = 16'd0;
#0 lastbase_win_V_0 = 16'd0;
#0 lastbase_addr_V_0 = 6'd0;
#0 lastbase_accum_V_0 = 32'd0;
#0 lastbase_num_in_V_0 = 9'd0;
#0 lastbase_num_out_V_0 = 9'd0;
#0 lastbase_baseline_V_1 = 16'd0;
#0 lastbase_win_V_1 = 16'd0;
#0 lastbase_addr_V_1 = 6'd0;
#0 lastbase_accum_V_1 = 32'd0;
#0 lastbase_num_in_V_1 = 9'd0;
#0 lastbase_num_out_V_1 = 9'd0;
#0 lastbase_baseline_V_2 = 16'd0;
#0 lastbase_win_V_2 = 16'd0;
#0 lastbase_addr_V_2 = 6'd0;
#0 lastbase_accum_V_2 = 32'd0;
#0 lastbase_num_in_V_2 = 9'd0;
#0 lastbase_num_out_V_2 = 9'd0;
#0 lastbase_baseline_V_3 = 16'd0;
#0 lastbase_win_V_3 = 16'd0;
#0 lastbase_addr_V_3 = 6'd0;
#0 lastbase_accum_V_3 = 32'd0;
#0 lastbase_num_in_V_3 = 9'd0;
#0 lastbase_num_out_V_3 = 9'd0;
#0 started = 1'd0;
end

update_baselines_bkb #(
    .DataWidth( 88 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
basedb_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basedb_0_address0),
    .ce0(basedb_0_ce0),
    .q0(basedb_0_q0),
    .address1(basedb_0_address1),
    .ce1(basedb_0_ce1),
    .we1(basedb_0_we1),
    .d1(basedb_0_d1)
);

update_baselines_bkb #(
    .DataWidth( 88 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
basedb_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basedb_1_address0),
    .ce0(basedb_1_ce0),
    .q0(basedb_1_q0),
    .address1(basedb_1_address1),
    .ce1(basedb_1_ce1),
    .we1(basedb_1_we1),
    .d1(basedb_1_d1)
);

update_baselines_bkb #(
    .DataWidth( 88 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
basedb_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basedb_2_address0),
    .ce0(basedb_2_ce0),
    .q0(basedb_2_q0),
    .address1(basedb_2_address1),
    .ce1(basedb_2_ce1),
    .we1(basedb_2_we1),
    .d1(basedb_2_d1)
);

update_baselines_bkb #(
    .DataWidth( 88 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
basedb_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basedb_3_address0),
    .ce0(basedb_3_ce0),
    .q0(basedb_3_q0),
    .address1(basedb_3_address1),
    .ce1(basedb_3_ce1),
    .we1(basedb_3_we1),
    .d1(basedb_3_d1)
);

update_baselines_fYi #(
    .DataWidth( 16 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
basline_mem_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basline_mem_V_0_address0),
    .ce0(basline_mem_V_0_ce0),
    .q0(basline_mem_V_0_q0),
    .address1(basline_mem_V_0_address1),
    .ce1(basline_mem_V_0_ce1),
    .we1(basline_mem_V_0_we1),
    .d1(select_ln891_8_fu_1287_p3)
);

update_baselines_fYi #(
    .DataWidth( 16 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
basline_mem_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basline_mem_V_1_address0),
    .ce0(basline_mem_V_1_ce0),
    .q0(basline_mem_V_1_q0),
    .address1(basline_mem_V_1_address1),
    .ce1(basline_mem_V_1_ce1),
    .we1(basline_mem_V_1_we1),
    .d1(select_ln891_17_fu_1447_p3)
);

update_baselines_fYi #(
    .DataWidth( 16 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
basline_mem_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basline_mem_V_2_address0),
    .ce0(basline_mem_V_2_ce0),
    .q0(basline_mem_V_2_q0),
    .address1(basline_mem_V_2_address1),
    .ce1(basline_mem_V_2_ce1),
    .we1(basline_mem_V_2_we1),
    .d1(select_ln891_26_fu_1607_p3)
);

update_baselines_fYi #(
    .DataWidth( 16 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
basline_mem_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(basline_mem_V_3_address0),
    .ce0(basline_mem_V_3_ce0),
    .q0(basline_mem_V_3_q0),
    .address1(basline_mem_V_3_address1),
    .ce1(basline_mem_V_3_ce1),
    .we1(basline_mem_V_3_we1),
    .d1(select_ln891_35_fu_1767_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln47_1_reg_2698 <= add_ln47_1_fu_771_p2;
        add_ln47_2_reg_2721 <= add_ln47_2_fu_810_p2;
        add_ln47_3_reg_2744 <= add_ln47_3_fu_849_p2;
        add_ln47_reg_2675 <= add_ln47_fu_732_p2;
        add_ln703_11_reg_3070 <= add_ln703_11_fu_1915_p2;
        add_ln703_2_reg_3022 <= add_ln703_2_fu_1813_p2;
        add_ln703_5_reg_3038 <= add_ln703_5_fu_1847_p2;
        add_ln703_8_reg_3054 <= add_ln703_8_fu_1881_p2;
        and_ln891_10_reg_2910 <= and_ln891_10_fu_1131_p2;
        and_ln891_11_reg_2917 <= and_ln891_11_fu_1141_p2;
        and_ln891_1_reg_2835 <= and_ln891_1_fu_963_p2;
        and_ln891_2_reg_2842 <= and_ln891_2_fu_973_p2;
        and_ln891_4_reg_2860 <= and_ln891_4_fu_1019_p2;
        and_ln891_5_reg_2867 <= and_ln891_5_fu_1029_p2;
        and_ln891_7_reg_2885 <= and_ln891_7_fu_1075_p2;
        and_ln891_8_reg_2892 <= and_ln891_8_fu_1085_p2;
        db_accum_V_new29_1_reg_2547_pp0_iter2_reg <= db_accum_V_new29_1_reg_2547;
        db_accum_V_new29_1_reg_2547_pp0_iter3_reg <= db_accum_V_new29_1_reg_2547_pp0_iter2_reg;
        db_accum_V_new29_1_reg_2547_pp0_iter4_reg <= db_accum_V_new29_1_reg_2547_pp0_iter3_reg;
        db_accum_V_new29_1_reg_2547_pp0_iter5_reg <= db_accum_V_new29_1_reg_2547_pp0_iter4_reg;
        db_accum_V_new29_2_reg_2590_pp0_iter2_reg <= db_accum_V_new29_2_reg_2590;
        db_accum_V_new29_2_reg_2590_pp0_iter3_reg <= db_accum_V_new29_2_reg_2590_pp0_iter2_reg;
        db_accum_V_new29_2_reg_2590_pp0_iter4_reg <= db_accum_V_new29_2_reg_2590_pp0_iter3_reg;
        db_accum_V_new29_2_reg_2590_pp0_iter5_reg <= db_accum_V_new29_2_reg_2590_pp0_iter4_reg;
        db_accum_V_new29_3_reg_2633_pp0_iter2_reg <= db_accum_V_new29_3_reg_2633;
        db_accum_V_new29_3_reg_2633_pp0_iter3_reg <= db_accum_V_new29_3_reg_2633_pp0_iter2_reg;
        db_accum_V_new29_3_reg_2633_pp0_iter4_reg <= db_accum_V_new29_3_reg_2633_pp0_iter3_reg;
        db_accum_V_new29_3_reg_2633_pp0_iter5_reg <= db_accum_V_new29_3_reg_2633_pp0_iter4_reg;
        db_accum_V_new_reg_2504_pp0_iter2_reg <= db_accum_V_new_reg_2504;
        db_accum_V_new_reg_2504_pp0_iter3_reg <= db_accum_V_new_reg_2504_pp0_iter2_reg;
        db_accum_V_new_reg_2504_pp0_iter4_reg <= db_accum_V_new_reg_2504_pp0_iter3_reg;
        db_accum_V_new_reg_2504_pp0_iter5_reg <= db_accum_V_new_reg_2504_pp0_iter4_reg;
        db_addr_V_1_new20_1_reg_2540_pp0_iter2_reg <= db_addr_V_1_new20_1_reg_2540;
        db_addr_V_1_new20_1_reg_2540_pp0_iter3_reg <= db_addr_V_1_new20_1_reg_2540_pp0_iter2_reg;
        db_addr_V_1_new20_1_reg_2540_pp0_iter4_reg <= db_addr_V_1_new20_1_reg_2540_pp0_iter3_reg;
        db_addr_V_1_new20_1_reg_2540_pp0_iter5_reg <= db_addr_V_1_new20_1_reg_2540_pp0_iter4_reg;
        db_addr_V_1_new20_1_reg_2540_pp0_iter6_reg <= db_addr_V_1_new20_1_reg_2540_pp0_iter5_reg;
        db_addr_V_1_new20_2_reg_2583_pp0_iter2_reg <= db_addr_V_1_new20_2_reg_2583;
        db_addr_V_1_new20_2_reg_2583_pp0_iter3_reg <= db_addr_V_1_new20_2_reg_2583_pp0_iter2_reg;
        db_addr_V_1_new20_2_reg_2583_pp0_iter4_reg <= db_addr_V_1_new20_2_reg_2583_pp0_iter3_reg;
        db_addr_V_1_new20_2_reg_2583_pp0_iter5_reg <= db_addr_V_1_new20_2_reg_2583_pp0_iter4_reg;
        db_addr_V_1_new20_2_reg_2583_pp0_iter6_reg <= db_addr_V_1_new20_2_reg_2583_pp0_iter5_reg;
        db_addr_V_1_new20_3_reg_2626_pp0_iter2_reg <= db_addr_V_1_new20_3_reg_2626;
        db_addr_V_1_new20_3_reg_2626_pp0_iter3_reg <= db_addr_V_1_new20_3_reg_2626_pp0_iter2_reg;
        db_addr_V_1_new20_3_reg_2626_pp0_iter4_reg <= db_addr_V_1_new20_3_reg_2626_pp0_iter3_reg;
        db_addr_V_1_new20_3_reg_2626_pp0_iter5_reg <= db_addr_V_1_new20_3_reg_2626_pp0_iter4_reg;
        db_addr_V_1_new20_3_reg_2626_pp0_iter6_reg <= db_addr_V_1_new20_3_reg_2626_pp0_iter5_reg;
        db_addr_V_1_new_reg_2497_pp0_iter2_reg <= db_addr_V_1_new_reg_2497;
        db_addr_V_1_new_reg_2497_pp0_iter3_reg <= db_addr_V_1_new_reg_2497_pp0_iter2_reg;
        db_addr_V_1_new_reg_2497_pp0_iter4_reg <= db_addr_V_1_new_reg_2497_pp0_iter3_reg;
        db_addr_V_1_new_reg_2497_pp0_iter5_reg <= db_addr_V_1_new_reg_2497_pp0_iter4_reg;
        db_addr_V_1_new_reg_2497_pp0_iter6_reg <= db_addr_V_1_new_reg_2497_pp0_iter5_reg;
        db_num_in_V_1_new38_1_reg_2552_pp0_iter2_reg <= db_num_in_V_1_new38_1_reg_2552;
        db_num_in_V_1_new38_1_reg_2552_pp0_iter3_reg <= db_num_in_V_1_new38_1_reg_2552_pp0_iter2_reg;
        db_num_in_V_1_new38_1_reg_2552_pp0_iter4_reg <= db_num_in_V_1_new38_1_reg_2552_pp0_iter3_reg;
        db_num_in_V_1_new38_2_reg_2595_pp0_iter2_reg <= db_num_in_V_1_new38_2_reg_2595;
        db_num_in_V_1_new38_2_reg_2595_pp0_iter3_reg <= db_num_in_V_1_new38_2_reg_2595_pp0_iter2_reg;
        db_num_in_V_1_new38_2_reg_2595_pp0_iter4_reg <= db_num_in_V_1_new38_2_reg_2595_pp0_iter3_reg;
        db_num_in_V_1_new38_3_reg_2638_pp0_iter2_reg <= db_num_in_V_1_new38_3_reg_2638;
        db_num_in_V_1_new38_3_reg_2638_pp0_iter3_reg <= db_num_in_V_1_new38_3_reg_2638_pp0_iter2_reg;
        db_num_in_V_1_new38_3_reg_2638_pp0_iter4_reg <= db_num_in_V_1_new38_3_reg_2638_pp0_iter3_reg;
        db_num_in_V_1_new_reg_2509_pp0_iter2_reg <= db_num_in_V_1_new_reg_2509;
        db_num_in_V_1_new_reg_2509_pp0_iter3_reg <= db_num_in_V_1_new_reg_2509_pp0_iter2_reg;
        db_num_in_V_1_new_reg_2509_pp0_iter4_reg <= db_num_in_V_1_new_reg_2509_pp0_iter3_reg;
        db_num_out_V_1_new47_1_reg_2559_pp0_iter2_reg <= db_num_out_V_1_new47_1_reg_2559;
        db_num_out_V_1_new47_1_reg_2559_pp0_iter3_reg <= db_num_out_V_1_new47_1_reg_2559_pp0_iter2_reg;
        db_num_out_V_1_new47_1_reg_2559_pp0_iter4_reg <= db_num_out_V_1_new47_1_reg_2559_pp0_iter3_reg;
        db_num_out_V_1_new47_2_reg_2602_pp0_iter2_reg <= db_num_out_V_1_new47_2_reg_2602;
        db_num_out_V_1_new47_2_reg_2602_pp0_iter3_reg <= db_num_out_V_1_new47_2_reg_2602_pp0_iter2_reg;
        db_num_out_V_1_new47_2_reg_2602_pp0_iter4_reg <= db_num_out_V_1_new47_2_reg_2602_pp0_iter3_reg;
        db_num_out_V_1_new47_3_reg_2645_pp0_iter2_reg <= db_num_out_V_1_new47_3_reg_2645;
        db_num_out_V_1_new47_3_reg_2645_pp0_iter3_reg <= db_num_out_V_1_new47_3_reg_2645_pp0_iter2_reg;
        db_num_out_V_1_new47_3_reg_2645_pp0_iter4_reg <= db_num_out_V_1_new47_3_reg_2645_pp0_iter3_reg;
        db_num_out_V_1_new_reg_2516_pp0_iter2_reg <= db_num_out_V_1_new_reg_2516;
        db_num_out_V_1_new_reg_2516_pp0_iter3_reg <= db_num_out_V_1_new_reg_2516_pp0_iter2_reg;
        db_num_out_V_1_new_reg_2516_pp0_iter4_reg <= db_num_out_V_1_new_reg_2516_pp0_iter3_reg;
        db_win_V_new11_1_reg_2535_pp0_iter2_reg <= db_win_V_new11_1_reg_2535;
        db_win_V_new11_2_reg_2578_pp0_iter2_reg <= db_win_V_new11_2_reg_2578;
        db_win_V_new11_3_reg_2621_pp0_iter2_reg <= db_win_V_new11_3_reg_2621;
        db_win_V_new_reg_2492_pp0_iter2_reg <= db_win_V_new_reg_2492;
        group_V_read_reg_2454_pp0_iter2_reg <= group_V_read_reg_2454_pp0_iter1_reg;
        group_V_read_reg_2454_pp0_iter3_reg <= group_V_read_reg_2454_pp0_iter2_reg;
        group_V_read_reg_2454_pp0_iter4_reg <= group_V_read_reg_2454_pp0_iter3_reg;
        group_V_read_reg_2454_pp0_iter5_reg <= group_V_read_reg_2454_pp0_iter4_reg;
        icmp_ln1494_1_reg_2854 <= icmp_ln1494_1_fu_1013_p2;
        icmp_ln1494_2_reg_2879 <= icmp_ln1494_2_fu_1069_p2;
        icmp_ln1494_3_reg_2904 <= icmp_ln1494_3_fu_1125_p2;
        icmp_ln1494_reg_2829 <= icmp_ln1494_fu_957_p2;
        icmp_ln891_1_reg_2670 <= icmp_ln891_1_fu_715_p2;
        icmp_ln891_1_reg_2670_pp0_iter3_reg <= icmp_ln891_1_reg_2670;
        icmp_ln891_1_reg_2670_pp0_iter4_reg <= icmp_ln891_1_reg_2670_pp0_iter3_reg;
        icmp_ln891_2_reg_2710 <= icmp_ln891_2_fu_789_p2;
        icmp_ln891_2_reg_2710_pp0_iter3_reg <= icmp_ln891_2_reg_2710;
        icmp_ln891_3_reg_2733 <= icmp_ln891_3_fu_828_p2;
        icmp_ln891_3_reg_2733_pp0_iter3_reg <= icmp_ln891_3_reg_2733;
        icmp_ln891_4_reg_2687 <= icmp_ln891_4_fu_750_p2;
        icmp_ln891_4_reg_2687_pp0_iter3_reg <= icmp_ln891_4_reg_2687;
        icmp_ln891_5_reg_2693 <= icmp_ln891_5_fu_754_p2;
        icmp_ln891_5_reg_2693_pp0_iter3_reg <= icmp_ln891_5_reg_2693;
        icmp_ln891_5_reg_2693_pp0_iter4_reg <= icmp_ln891_5_reg_2693_pp0_iter3_reg;
        icmp_ln891_6_reg_2716 <= icmp_ln891_6_fu_793_p2;
        icmp_ln891_6_reg_2716_pp0_iter3_reg <= icmp_ln891_6_reg_2716;
        icmp_ln891_6_reg_2716_pp0_iter4_reg <= icmp_ln891_6_reg_2716_pp0_iter3_reg;
        icmp_ln891_7_reg_2739 <= icmp_ln891_7_fu_832_p2;
        icmp_ln891_7_reg_2739_pp0_iter3_reg <= icmp_ln891_7_reg_2739;
        icmp_ln891_7_reg_2739_pp0_iter4_reg <= icmp_ln891_7_reg_2739_pp0_iter3_reg;
        icmp_ln891_reg_2664 <= icmp_ln891_fu_711_p2;
        icmp_ln891_reg_2664_pp0_iter3_reg <= icmp_ln891_reg_2664;
        p_Val2_2_reg_2680 <= p_Val2_2_fu_744_p2;
        p_Val2_2_reg_2680_pp0_iter3_reg <= p_Val2_2_reg_2680;
        p_Val2_4_reg_2703 <= p_Val2_4_fu_783_p2;
        p_Val2_4_reg_2703_pp0_iter3_reg <= p_Val2_4_reg_2703;
        p_Val2_6_reg_2726 <= p_Val2_6_fu_822_p2;
        p_Val2_6_reg_2726_pp0_iter3_reg <= p_Val2_6_reg_2726;
        p_Val2_s_reg_2657 <= p_Val2_s_fu_705_p2;
        p_Val2_s_reg_2657_pp0_iter3_reg <= p_Val2_s_reg_2657;
        phases_0_V_read_1_reg_2447_pp0_iter2_reg <= phases_0_V_read_1_reg_2447_pp0_iter1_reg;
        phases_0_V_read_1_reg_2447_pp0_iter3_reg <= phases_0_V_read_1_reg_2447_pp0_iter2_reg;
        phases_0_V_read_1_reg_2447_pp0_iter4_reg <= phases_0_V_read_1_reg_2447_pp0_iter3_reg;
        phases_0_V_read_1_reg_2447_pp0_iter5_reg <= phases_0_V_read_1_reg_2447_pp0_iter4_reg;
        phases_0_V_read_1_reg_2447_pp0_iter6_reg <= phases_0_V_read_1_reg_2447_pp0_iter5_reg;
        phases_0_V_read_1_reg_2447_pp0_iter7_reg <= phases_0_V_read_1_reg_2447_pp0_iter6_reg;
        phases_1_V_read_1_reg_2440_pp0_iter2_reg <= phases_1_V_read_1_reg_2440_pp0_iter1_reg;
        phases_1_V_read_1_reg_2440_pp0_iter3_reg <= phases_1_V_read_1_reg_2440_pp0_iter2_reg;
        phases_1_V_read_1_reg_2440_pp0_iter4_reg <= phases_1_V_read_1_reg_2440_pp0_iter3_reg;
        phases_1_V_read_1_reg_2440_pp0_iter5_reg <= phases_1_V_read_1_reg_2440_pp0_iter4_reg;
        phases_1_V_read_1_reg_2440_pp0_iter6_reg <= phases_1_V_read_1_reg_2440_pp0_iter5_reg;
        phases_1_V_read_1_reg_2440_pp0_iter7_reg <= phases_1_V_read_1_reg_2440_pp0_iter6_reg;
        phases_2_V_read_1_reg_2433_pp0_iter2_reg <= phases_2_V_read_1_reg_2433_pp0_iter1_reg;
        phases_2_V_read_1_reg_2433_pp0_iter3_reg <= phases_2_V_read_1_reg_2433_pp0_iter2_reg;
        phases_2_V_read_1_reg_2433_pp0_iter4_reg <= phases_2_V_read_1_reg_2433_pp0_iter3_reg;
        phases_2_V_read_1_reg_2433_pp0_iter5_reg <= phases_2_V_read_1_reg_2433_pp0_iter4_reg;
        phases_2_V_read_1_reg_2433_pp0_iter6_reg <= phases_2_V_read_1_reg_2433_pp0_iter5_reg;
        phases_2_V_read_1_reg_2433_pp0_iter7_reg <= phases_2_V_read_1_reg_2433_pp0_iter6_reg;
        phases_3_V_read_1_reg_2426_pp0_iter2_reg <= phases_3_V_read_1_reg_2426_pp0_iter1_reg;
        phases_3_V_read_1_reg_2426_pp0_iter3_reg <= phases_3_V_read_1_reg_2426_pp0_iter2_reg;
        phases_3_V_read_1_reg_2426_pp0_iter4_reg <= phases_3_V_read_1_reg_2426_pp0_iter3_reg;
        phases_3_V_read_1_reg_2426_pp0_iter5_reg <= phases_3_V_read_1_reg_2426_pp0_iter4_reg;
        phases_3_V_read_1_reg_2426_pp0_iter6_reg <= phases_3_V_read_1_reg_2426_pp0_iter5_reg;
        phases_3_V_read_1_reg_2426_pp0_iter7_reg <= phases_3_V_read_1_reg_2426_pp0_iter6_reg;
        ret_V_reg_3017 <= ret_V_fu_1801_p2;
        select_ln83_1_reg_2769 <= select_ln83_1_fu_875_p3;
        select_ln83_1_reg_2769_pp0_iter4_reg <= select_ln83_1_reg_2769;
        select_ln83_2_reg_2789 <= select_ln83_2_fu_891_p3;
        select_ln83_2_reg_2789_pp0_iter4_reg <= select_ln83_2_reg_2789;
        select_ln83_3_reg_2809 <= select_ln83_3_fu_907_p3;
        select_ln83_3_reg_2809_pp0_iter4_reg <= select_ln83_3_reg_2809;
        select_ln83_reg_2749 <= select_ln83_fu_859_p3;
        select_ln83_reg_2749_pp0_iter4_reg <= select_ln83_reg_2749;
        select_ln891_11_reg_2954 <= select_ln891_11_fu_1408_p3;
        select_ln891_11_reg_2954_pp0_iter6_reg <= select_ln891_11_reg_2954;
        select_ln891_13_reg_2959 <= select_ln891_13_fu_1423_p3;
        select_ln891_13_reg_2959_pp0_iter6_reg <= select_ln891_13_reg_2959;
        select_ln891_15_reg_2964 <= select_ln891_15_fu_1435_p3;
        select_ln891_15_reg_2964_pp0_iter6_reg <= select_ln891_15_reg_2964;
        select_ln891_20_reg_2975 <= select_ln891_20_fu_1568_p3;
        select_ln891_20_reg_2975_pp0_iter6_reg <= select_ln891_20_reg_2975;
        select_ln891_22_reg_2980 <= select_ln891_22_fu_1583_p3;
        select_ln891_22_reg_2980_pp0_iter6_reg <= select_ln891_22_reg_2980;
        select_ln891_24_reg_2985 <= select_ln891_24_fu_1595_p3;
        select_ln891_24_reg_2985_pp0_iter6_reg <= select_ln891_24_reg_2985;
        select_ln891_29_reg_2996 <= select_ln891_29_fu_1728_p3;
        select_ln891_29_reg_2996_pp0_iter6_reg <= select_ln891_29_reg_2996;
        select_ln891_2_reg_2933 <= select_ln891_2_fu_1248_p3;
        select_ln891_2_reg_2933_pp0_iter6_reg <= select_ln891_2_reg_2933;
        select_ln891_31_reg_3001 <= select_ln891_31_fu_1743_p3;
        select_ln891_31_reg_3001_pp0_iter6_reg <= select_ln891_31_reg_3001;
        select_ln891_33_reg_3006 <= select_ln891_33_fu_1755_p3;
        select_ln891_33_reg_3006_pp0_iter6_reg <= select_ln891_33_reg_3006;
        select_ln891_4_reg_2938 <= select_ln891_4_fu_1263_p3;
        select_ln891_4_reg_2938_pp0_iter6_reg <= select_ln891_4_reg_2938;
        select_ln891_6_reg_2943 <= select_ln891_6_fu_1275_p3;
        select_ln891_6_reg_2943_pp0_iter6_reg <= select_ln891_6_reg_2943;
        sub_ln1193_2_reg_2969 <= sub_ln1193_2_fu_1472_p2;
        sub_ln1193_4_reg_2990 <= sub_ln1193_4_fu_1632_p2;
        sub_ln1193_6_reg_3011 <= sub_ln1193_6_fu_1792_p2;
        sub_ln1193_reg_2948 <= sub_ln1193_fu_1312_p2;
        tmp_13_reg_3028 <= add_ln703_2_fu_1813_p2[32'd31];
        tmp_13_reg_3028_pp0_iter7_reg <= tmp_13_reg_3028;
        tmp_18_reg_3044 <= add_ln703_5_fu_1847_p2[32'd31];
        tmp_18_reg_3044_pp0_iter7_reg <= tmp_18_reg_3044;
        tmp_1_reg_2566_pp0_iter2_reg <= tmp_1_reg_2566;
        tmp_1_reg_2566_pp0_iter3_reg <= tmp_1_reg_2566_pp0_iter2_reg;
        tmp_1_reg_2566_pp0_iter4_reg <= tmp_1_reg_2566_pp0_iter3_reg;
        tmp_1_reg_2566_pp0_iter5_reg <= tmp_1_reg_2566_pp0_iter4_reg;
        tmp_23_reg_3060 <= add_ln703_8_fu_1881_p2[32'd31];
        tmp_23_reg_3060_pp0_iter7_reg <= tmp_23_reg_3060;
        tmp_28_reg_3076 <= add_ln703_11_fu_1915_p2[32'd31];
        tmp_28_reg_3076_pp0_iter7_reg <= tmp_28_reg_3076;
        tmp_2_reg_2609_pp0_iter2_reg <= tmp_2_reg_2609;
        tmp_2_reg_2609_pp0_iter3_reg <= tmp_2_reg_2609_pp0_iter2_reg;
        tmp_2_reg_2609_pp0_iter4_reg <= tmp_2_reg_2609_pp0_iter3_reg;
        tmp_2_reg_2609_pp0_iter5_reg <= tmp_2_reg_2609_pp0_iter4_reg;
        tmp_3_reg_2652_pp0_iter2_reg <= tmp_3_reg_2652;
        tmp_3_reg_2652_pp0_iter3_reg <= tmp_3_reg_2652_pp0_iter2_reg;
        tmp_3_reg_2652_pp0_iter4_reg <= tmp_3_reg_2652_pp0_iter3_reg;
        tmp_3_reg_2652_pp0_iter5_reg <= tmp_3_reg_2652_pp0_iter4_reg;
        tmp_reg_2523_pp0_iter2_reg <= tmp_reg_2523;
        tmp_reg_2523_pp0_iter3_reg <= tmp_reg_2523_pp0_iter2_reg;
        tmp_reg_2523_pp0_iter4_reg <= tmp_reg_2523_pp0_iter3_reg;
        tmp_reg_2523_pp0_iter5_reg <= tmp_reg_2523_pp0_iter4_reg;
        trunc_ln1148_2_reg_3033 <= {{add_ln1148_fu_1818_p2[21:6]}};
        trunc_ln1148_2_reg_3033_pp0_iter7_reg <= trunc_ln1148_2_reg_3033;
        trunc_ln1148_3_reg_3081 <= {{add_ln1148_3_fu_1920_p2[21:6]}};
        trunc_ln1148_3_reg_3081_pp0_iter7_reg <= trunc_ln1148_3_reg_3081;
        trunc_ln1148_5_reg_3049 <= {{add_ln1148_1_fu_1852_p2[21:6]}};
        trunc_ln1148_5_reg_3049_pp0_iter7_reg <= trunc_ln1148_5_reg_3049;
        trunc_ln1148_8_reg_3065 <= {{add_ln1148_2_fu_1886_p2[21:6]}};
        trunc_ln1148_8_reg_3065_pp0_iter7_reg <= trunc_ln1148_8_reg_3065;
        trunc_ln81_1_reg_2528_pp0_iter2_reg <= trunc_ln81_1_reg_2528;
        trunc_ln81_1_reg_2528_pp0_iter3_reg <= trunc_ln81_1_reg_2528_pp0_iter2_reg;
        trunc_ln81_1_reg_2528_pp0_iter4_reg <= trunc_ln81_1_reg_2528_pp0_iter3_reg;
        trunc_ln81_2_reg_2571_pp0_iter2_reg <= trunc_ln81_2_reg_2571;
        trunc_ln81_2_reg_2571_pp0_iter3_reg <= trunc_ln81_2_reg_2571_pp0_iter2_reg;
        trunc_ln81_2_reg_2571_pp0_iter4_reg <= trunc_ln81_2_reg_2571_pp0_iter3_reg;
        trunc_ln81_3_reg_2614_pp0_iter2_reg <= trunc_ln81_3_reg_2614;
        trunc_ln81_3_reg_2614_pp0_iter3_reg <= trunc_ln81_3_reg_2614_pp0_iter2_reg;
        trunc_ln81_3_reg_2614_pp0_iter4_reg <= trunc_ln81_3_reg_2614_pp0_iter3_reg;
        trunc_ln81_reg_2485_pp0_iter2_reg <= trunc_ln81_reg_2485;
        trunc_ln81_reg_2485_pp0_iter3_reg <= trunc_ln81_reg_2485_pp0_iter2_reg;
        trunc_ln81_reg_2485_pp0_iter4_reg <= trunc_ln81_reg_2485_pp0_iter3_reg;
        xs_V_10_reg_2819 <= xs_V_10_fu_914_p2;
        xs_V_7_reg_2759 <= xs_V_7_fu_866_p2;
        xs_V_8_reg_2779 <= xs_V_8_fu_882_p2;
        xs_V_9_reg_2799 <= xs_V_9_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        basline_mem_V_0_load_reg_2849 <= basline_mem_V_0_q0;
        basline_mem_V_1_load_reg_2874 <= basline_mem_V_1_q0;
        basline_mem_V_2_load_reg_2899 <= basline_mem_V_2_q0;
        basline_mem_V_3_load_reg_2924 <= basline_mem_V_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        db_accum_V_new29_1_reg_2547 <= {{basedb_1_q0[69:38]}};
        db_accum_V_new29_2_reg_2590 <= {{basedb_2_q0[69:38]}};
        db_accum_V_new29_3_reg_2633 <= {{basedb_3_q0[69:38]}};
        db_accum_V_new_reg_2504 <= {{basedb_0_q0[69:38]}};
        db_addr_V_1_new20_1_reg_2540 <= {{basedb_1_q0[37:32]}};
        db_addr_V_1_new20_2_reg_2583 <= {{basedb_2_q0[37:32]}};
        db_addr_V_1_new20_3_reg_2626 <= {{basedb_3_q0[37:32]}};
        db_addr_V_1_new_reg_2497 <= {{basedb_0_q0[37:32]}};
        db_num_in_V_1_new38_1_reg_2552 <= {{basedb_1_q0[78:70]}};
        db_num_in_V_1_new38_2_reg_2595 <= {{basedb_2_q0[78:70]}};
        db_num_in_V_1_new38_3_reg_2638 <= {{basedb_3_q0[78:70]}};
        db_num_in_V_1_new_reg_2509 <= {{basedb_0_q0[78:70]}};
        db_num_out_V_1_new47_1_reg_2559 <= {{basedb_1_q0[87:79]}};
        db_num_out_V_1_new47_2_reg_2602 <= {{basedb_2_q0[87:79]}};
        db_num_out_V_1_new47_3_reg_2645 <= {{basedb_3_q0[87:79]}};
        db_num_out_V_1_new_reg_2516 <= {{basedb_0_q0[87:79]}};
        db_win_V_new11_1_reg_2535 <= {{basedb_1_q0[31:16]}};
        db_win_V_new11_2_reg_2578 <= {{basedb_2_q0[31:16]}};
        db_win_V_new11_3_reg_2621 <= {{basedb_3_q0[31:16]}};
        db_win_V_new_reg_2492 <= {{basedb_0_q0[31:16]}};
        group_V_read_reg_2454 <= group_V;
        group_V_read_reg_2454_pp0_iter1_reg <= group_V_read_reg_2454;
        grow_n_V_read_reg_2418 <= grow_n_V;
        grow_n_V_read_reg_2418_pp0_iter1_reg <= grow_n_V_read_reg_2418;
        phases_0_V_read_1_reg_2447 <= phases_0_V_read;
        phases_0_V_read_1_reg_2447_pp0_iter1_reg <= phases_0_V_read_1_reg_2447;
        phases_1_V_read_1_reg_2440 <= phases_1_V_read;
        phases_1_V_read_1_reg_2440_pp0_iter1_reg <= phases_1_V_read_1_reg_2440;
        phases_2_V_read_1_reg_2433 <= phases_2_V_read;
        phases_2_V_read_1_reg_2433_pp0_iter1_reg <= phases_2_V_read_1_reg_2433;
        phases_3_V_read_1_reg_2426 <= phases_3_V_read;
        phases_3_V_read_1_reg_2426_pp0_iter1_reg <= phases_3_V_read_1_reg_2426;
        shrink_n_V_read_reg_2410 <= shrink_n_V;
        shrink_n_V_read_reg_2410_pp0_iter1_reg <= shrink_n_V_read_reg_2410;
        tmp_1_reg_2566 <= {{basedb_1_q0[59:38]}};
        tmp_2_reg_2609 <= {{basedb_2_q0[59:38]}};
        tmp_3_reg_2652 <= {{basedb_3_q0[59:38]}};
        tmp_reg_2523 <= {{basedb_0_q0[59:38]}};
        trunc_ln81_1_reg_2528 <= trunc_ln81_1_fu_496_p1;
        trunc_ln81_2_reg_2571 <= trunc_ln81_2_fu_560_p1;
        trunc_ln81_3_reg_2614 <= trunc_ln81_3_fu_624_p1;
        trunc_ln81_reg_2485 <= trunc_ln81_fu_432_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        lastbase_accum_V_0 <= add_ln703_2_reg_3022;
        lastbase_accum_V_1 <= add_ln703_5_reg_3038;
        lastbase_accum_V_2 <= add_ln703_8_reg_3054;
        lastbase_accum_V_3 <= add_ln703_11_reg_3070;
        lastbase_addr_V_0 <= add_ln700_2_fu_2114_p2;
        lastbase_addr_V_1 <= add_ln700_5_fu_2160_p2;
        lastbase_addr_V_2 <= add_ln700_8_fu_2206_p2;
        lastbase_addr_V_3 <= add_ln700_11_fu_2252_p2;
        lastbase_num_in_V_0 <= select_ln891_4_reg_2938_pp0_iter6_reg;
        lastbase_num_in_V_1 <= select_ln891_13_reg_2959_pp0_iter6_reg;
        lastbase_num_in_V_2 <= select_ln891_22_reg_2980_pp0_iter6_reg;
        lastbase_num_in_V_3 <= select_ln891_31_reg_3001_pp0_iter6_reg;
        lastbase_num_out_V_0 <= select_ln891_6_reg_2943_pp0_iter6_reg;
        lastbase_num_out_V_1 <= select_ln891_15_reg_2964_pp0_iter6_reg;
        lastbase_num_out_V_2 <= select_ln891_24_reg_2985_pp0_iter6_reg;
        lastbase_num_out_V_3 <= select_ln891_33_reg_3006_pp0_iter6_reg;
        lastbase_win_V_0 <= select_ln891_2_reg_2933_pp0_iter6_reg;
        lastbase_win_V_1 <= select_ln891_11_reg_2954_pp0_iter6_reg;
        lastbase_win_V_2 <= select_ln891_20_reg_2975_pp0_iter6_reg;
        lastbase_win_V_3 <= select_ln891_29_reg_2996_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        lastbase_baseline_V_1 <= select_ln1148_1_fu_2320_p3;
        lastbase_baseline_V_2 <= select_ln1148_2_fu_2337_p3;
        lastbase_baseline_V_3 <= select_ln1148_3_fu_2354_p3;
        lastbase_baseline_V_s <= select_ln1148_fu_2303_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln879_fu_1147_p2 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        started <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_13_reg_3028 == 1'd1))) begin
        trunc_ln1148_1_reg_3086 <= {{sub_ln1148_fu_2119_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_18_reg_3044 == 1'd1))) begin
        trunc_ln1148_4_reg_3091 <= {{sub_ln1148_2_fu_2165_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_23_reg_3060 == 1'd1))) begin
        trunc_ln1148_7_reg_3096 <= {{sub_ln1148_4_fu_2211_p2[21:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_28_reg_3076 == 1'd1))) begin
        trunc_ln1148_s_reg_3101 <= {{sub_ln1148_6_fu_2257_p2[21:6]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_lastbase_baseline_V_1 = select_ln1148_fu_2303_p3;
    end else begin
        ap_sig_allocacmp_lastbase_baseline_V_1 = lastbase_baseline_V_s;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_lastbase_baseline_V_2 = select_ln1148_1_fu_2320_p3;
    end else begin
        ap_sig_allocacmp_lastbase_baseline_V_2 = lastbase_baseline_V_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_lastbase_baseline_V_3 = select_ln1148_2_fu_2337_p3;
    end else begin
        ap_sig_allocacmp_lastbase_baseline_V_3 = lastbase_baseline_V_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_lastbase_baseline_V_4 = select_ln1148_3_fu_2354_p3;
    end else begin
        ap_sig_allocacmp_lastbase_baseline_V_4 = lastbase_baseline_V_3;
    end
end

always @ (*) begin
    if (((icmp_ln879_fu_1147_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_started_load = 1'd1;
    end else begin
        ap_sig_allocacmp_started_load = started;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        basedb_0_ce0 = 1'b1;
    end else begin
        basedb_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_0_ce1 = 1'b1;
    end else begin
        basedb_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_0_we1 = 1'b1;
    end else begin
        basedb_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        basedb_1_ce0 = 1'b1;
    end else begin
        basedb_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_1_ce1 = 1'b1;
    end else begin
        basedb_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_1_we1 = 1'b1;
    end else begin
        basedb_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        basedb_2_ce0 = 1'b1;
    end else begin
        basedb_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_2_ce1 = 1'b1;
    end else begin
        basedb_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_2_we1 = 1'b1;
    end else begin
        basedb_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        basedb_3_ce0 = 1'b1;
    end else begin
        basedb_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_3_ce1 = 1'b1;
    end else begin
        basedb_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        basedb_3_we1 = 1'b1;
    end else begin
        basedb_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        basline_mem_V_0_ce0 = 1'b1;
    end else begin
        basline_mem_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_0_ce1 = 1'b1;
    end else begin
        basline_mem_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_0_we1 = 1'b1;
    end else begin
        basline_mem_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        basline_mem_V_1_ce0 = 1'b1;
    end else begin
        basline_mem_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_1_ce1 = 1'b1;
    end else begin
        basline_mem_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_1_we1 = 1'b1;
    end else begin
        basline_mem_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        basline_mem_V_2_ce0 = 1'b1;
    end else begin
        basline_mem_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_2_ce1 = 1'b1;
    end else begin
        basline_mem_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_2_we1 = 1'b1;
    end else begin
        basline_mem_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        basline_mem_V_3_ce0 = 1'b1;
    end else begin
        basline_mem_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_3_ce1 = 1'b1;
    end else begin
        basline_mem_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        basline_mem_V_3_we1 = 1'b1;
    end else begin
        basline_mem_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1148_1_fu_1852_p2 = ($signed(tmp_1_reg_2566_pp0_iter5_reg) + $signed(sext_ln703_21_fu_1844_p1));

assign add_ln1148_2_fu_1886_p2 = ($signed(tmp_2_reg_2609_pp0_iter5_reg) + $signed(sext_ln703_22_fu_1878_p1));

assign add_ln1148_3_fu_1920_p2 = ($signed(tmp_3_reg_2652_pp0_iter5_reg) + $signed(sext_ln703_23_fu_1912_p1));

assign add_ln1148_fu_1818_p2 = ($signed(tmp_reg_2523_pp0_iter5_reg) + $signed(sext_ln703_20_fu_1810_p1));

assign add_ln1192_1_fu_1326_p2 = (17'd453 + zext_ln703_1_fu_1323_p1);

assign add_ln1192_2_fu_1486_p2 = (17'd453 + zext_ln703_2_fu_1483_p1);

assign add_ln1192_3_fu_1646_p2 = (17'd453 + zext_ln703_3_fu_1643_p1);

assign add_ln1192_fu_1166_p2 = (17'd453 + zext_ln703_fu_1163_p1);

assign add_ln1193_1_fu_1358_p2 = ($signed(17'd130619) + $signed(zext_ln703_1_fu_1323_p1));

assign add_ln1193_2_fu_1518_p2 = ($signed(17'd130619) + $signed(zext_ln703_2_fu_1483_p1));

assign add_ln1193_3_fu_1678_p2 = ($signed(17'd130619) + $signed(zext_ln703_3_fu_1643_p1));

assign add_ln1193_fu_1198_p2 = ($signed(17'd130619) + $signed(zext_ln703_fu_1163_p1));

assign add_ln1353_1_fu_761_p2 = (7'd1 + zext_ln1353_1_fu_758_p1);

assign add_ln1353_2_fu_800_p2 = (7'd1 + zext_ln1353_2_fu_797_p1);

assign add_ln1353_3_fu_839_p2 = (7'd1 + zext_ln1353_3_fu_836_p1);

assign add_ln1353_fu_722_p2 = (7'd1 + zext_ln1353_fu_719_p1);

assign add_ln47_1_fu_771_p2 = (zext_ln81_fu_695_p1 + zext_ln47_2_fu_767_p1);

assign add_ln47_2_fu_810_p2 = (zext_ln81_fu_695_p1 + zext_ln47_4_fu_806_p1);

assign add_ln47_3_fu_849_p2 = (zext_ln81_fu_695_p1 + zext_ln47_6_fu_845_p1);

assign add_ln47_fu_732_p2 = (zext_ln81_fu_695_p1 + zext_ln47_fu_728_p1);

assign add_ln700_10_fu_1673_p2 = (9'd1 + db_num_in_V_1_new38_3_reg_2638_pp0_iter4_reg);

assign add_ln700_11_fu_2252_p2 = (6'd1 + db_addr_V_1_new20_3_reg_2626_pp0_iter6_reg);

assign add_ln700_1_fu_1193_p2 = (9'd1 + db_num_in_V_1_new_reg_2509_pp0_iter4_reg);

assign add_ln700_2_fu_2114_p2 = (6'd1 + db_addr_V_1_new_reg_2497_pp0_iter6_reg);

assign add_ln700_3_fu_1318_p2 = (9'd1 + db_num_out_V_1_new47_1_reg_2559_pp0_iter4_reg);

assign add_ln700_4_fu_1353_p2 = (9'd1 + db_num_in_V_1_new38_1_reg_2552_pp0_iter4_reg);

assign add_ln700_5_fu_2160_p2 = (6'd1 + db_addr_V_1_new20_1_reg_2540_pp0_iter6_reg);

assign add_ln700_6_fu_1478_p2 = (9'd1 + db_num_out_V_1_new47_2_reg_2602_pp0_iter4_reg);

assign add_ln700_7_fu_1513_p2 = (9'd1 + db_num_in_V_1_new38_2_reg_2595_pp0_iter4_reg);

assign add_ln700_8_fu_2206_p2 = (6'd1 + db_addr_V_1_new20_2_reg_2583_pp0_iter6_reg);

assign add_ln700_9_fu_1638_p2 = (9'd1 + db_num_out_V_1_new47_3_reg_2645_pp0_iter4_reg);

assign add_ln700_fu_1158_p2 = (9'd1 + db_num_out_V_1_new_reg_2516_pp0_iter4_reg);

assign add_ln703_10_fu_1692_p2 = ($signed(16'd65083) + $signed(select_ln83_3_reg_2809_pp0_iter4_reg));

assign add_ln703_11_fu_1915_p2 = ($signed(sext_ln703_19_fu_1909_p1) + $signed(db_accum_V_new29_3_reg_2633_pp0_iter5_reg));

assign add_ln703_1_fu_1212_p2 = ($signed(16'd65083) + $signed(select_ln83_reg_2749_pp0_iter4_reg));

assign add_ln703_2_fu_1813_p2 = ($signed(sext_ln703_4_fu_1807_p1) + $signed(db_accum_V_new_reg_2504_pp0_iter5_reg));

assign add_ln703_3_fu_1332_p2 = (16'd453 + select_ln83_1_reg_2769_pp0_iter4_reg);

assign add_ln703_4_fu_1372_p2 = ($signed(16'd65083) + $signed(select_ln83_1_reg_2769_pp0_iter4_reg));

assign add_ln703_5_fu_1847_p2 = ($signed(sext_ln703_9_fu_1841_p1) + $signed(db_accum_V_new29_1_reg_2547_pp0_iter5_reg));

assign add_ln703_6_fu_1492_p2 = (16'd453 + select_ln83_2_reg_2789_pp0_iter4_reg);

assign add_ln703_7_fu_1532_p2 = ($signed(16'd65083) + $signed(select_ln83_2_reg_2789_pp0_iter4_reg));

assign add_ln703_8_fu_1881_p2 = ($signed(sext_ln703_14_fu_1875_p1) + $signed(db_accum_V_new29_2_reg_2590_pp0_iter5_reg));

assign add_ln703_9_fu_1652_p2 = (16'd453 + select_ln83_3_reg_2809_pp0_iter4_reg);

assign add_ln703_fu_1172_p2 = (16'd453 + select_ln83_reg_2749_pp0_iter4_reg);

assign and_ln891_10_fu_1131_p2 = (icmp_ln891_3_reg_2733_pp0_iter3_reg & icmp_ln1494_3_fu_1125_p2);

assign and_ln891_11_fu_1141_p2 = (xor_ln891_3_fu_1136_p2 & icmp_ln1494_3_fu_1125_p2);

assign and_ln891_1_fu_963_p2 = (icmp_ln891_reg_2664_pp0_iter3_reg & icmp_ln1494_fu_957_p2);

assign and_ln891_2_fu_973_p2 = (xor_ln891_fu_968_p2 & icmp_ln1494_fu_957_p2);

assign and_ln891_3_fu_1390_p2 = (xor_ln1494_1_fu_1385_p2 & icmp_ln891_5_reg_2693_pp0_iter4_reg);

assign and_ln891_4_fu_1019_p2 = (icmp_ln891_4_reg_2687_pp0_iter3_reg & icmp_ln1494_1_fu_1013_p2);

assign and_ln891_5_fu_1029_p2 = (xor_ln891_1_fu_1024_p2 & icmp_ln1494_1_fu_1013_p2);

assign and_ln891_6_fu_1550_p2 = (xor_ln1494_2_fu_1545_p2 & icmp_ln891_6_reg_2716_pp0_iter4_reg);

assign and_ln891_7_fu_1075_p2 = (icmp_ln891_2_reg_2710_pp0_iter3_reg & icmp_ln1494_2_fu_1069_p2);

assign and_ln891_8_fu_1085_p2 = (xor_ln891_2_fu_1080_p2 & icmp_ln1494_2_fu_1069_p2);

assign and_ln891_9_fu_1710_p2 = (xor_ln1494_3_fu_1705_p2 & icmp_ln891_7_reg_2739_pp0_iter4_reg);

assign and_ln891_fu_1230_p2 = (xor_ln1494_fu_1225_p2 & icmp_ln891_1_reg_2670_pp0_iter4_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = phases_0_V_read_1_reg_2447_pp0_iter7_reg;

assign ap_return_1 = phases_1_V_read_1_reg_2440_pp0_iter7_reg;

assign ap_return_2 = phases_2_V_read_1_reg_2433_pp0_iter7_reg;

assign ap_return_3 = phases_3_V_read_1_reg_2426_pp0_iter7_reg;

assign ap_return_4 = select_ln1148_fu_2303_p3;

assign ap_return_5 = select_ln1148_1_fu_2320_p3;

assign ap_return_6 = select_ln1148_2_fu_2337_p3;

assign ap_return_7 = select_ln1148_3_fu_2354_p3;

assign basedb_0_address0 = zext_ln544_fu_424_p1;

assign basedb_0_address1 = sext_ln544_fu_1943_p1;

assign basedb_0_d1 = {{{{{{lastbase_num_out_V_0}, {lastbase_num_in_V_0}}, {lastbase_accum_V_0}}, {lastbase_addr_V_0}}, {lastbase_win_V_0}}, {ap_sig_allocacmp_lastbase_baseline_V_1}};

assign basedb_1_address0 = zext_ln544_fu_424_p1;

assign basedb_1_address1 = sext_ln544_fu_1943_p1;

assign basedb_1_d1 = {{{{{{lastbase_num_out_V_1}, {lastbase_num_in_V_1}}, {lastbase_accum_V_1}}, {lastbase_addr_V_1}}, {lastbase_win_V_1}}, {ap_sig_allocacmp_lastbase_baseline_V_2}};

assign basedb_2_address0 = zext_ln544_fu_424_p1;

assign basedb_2_address1 = sext_ln544_fu_1943_p1;

assign basedb_2_d1 = {{{{{{lastbase_num_out_V_2}, {lastbase_num_in_V_2}}, {lastbase_accum_V_2}}, {lastbase_addr_V_2}}, {lastbase_win_V_2}}, {ap_sig_allocacmp_lastbase_baseline_V_3}};

assign basedb_3_address0 = zext_ln544_fu_424_p1;

assign basedb_3_address1 = sext_ln544_fu_1943_p1;

assign basedb_3_d1 = {{{{{{lastbase_num_out_V_3}, {lastbase_num_in_V_3}}, {lastbase_accum_V_3}}, {lastbase_addr_V_3}}, {lastbase_win_V_3}}, {ap_sig_allocacmp_lastbase_baseline_V_4}};

assign basline_mem_V_0_address0 = zext_ln47_1_fu_871_p1;

assign basline_mem_V_0_address1 = zext_ln203_fu_1300_p1;

assign basline_mem_V_1_address0 = zext_ln47_3_fu_887_p1;

assign basline_mem_V_1_address1 = zext_ln203_1_fu_1460_p1;

assign basline_mem_V_2_address0 = zext_ln47_5_fu_903_p1;

assign basline_mem_V_2_address1 = zext_ln203_2_fu_1620_p1;

assign basline_mem_V_3_address0 = zext_ln47_7_fu_919_p1;

assign basline_mem_V_3_address1 = zext_ln203_3_fu_1780_p1;

assign icmp_ln1494_1_fu_1013_p2 = (($signed(shl_ln728_1_fu_1002_p3) > $signed(zext_ln1494_1_fu_1010_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_1069_p2 = (($signed(shl_ln728_2_fu_1058_p3) > $signed(zext_ln1494_2_fu_1066_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_1125_p2 = (($signed(shl_ln728_3_fu_1114_p3) > $signed(zext_ln1494_3_fu_1122_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_957_p2 = (($signed(shl_ln_fu_946_p3) > $signed(zext_ln1494_fu_954_p1)) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1147_p2 = ((group_V_read_reg_2454_pp0_iter3_reg == 9'd511) ? 1'b1 : 1'b0);

assign icmp_ln891_1_fu_715_p2 = ((db_num_in_V_1_new_reg_2509 < shrink_n_V_read_reg_2410_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_2_fu_789_p2 = ((db_num_out_V_1_new47_2_reg_2602 < grow_n_V_read_reg_2418_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_3_fu_828_p2 = ((db_num_out_V_1_new47_3_reg_2645 < grow_n_V_read_reg_2418_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_4_fu_750_p2 = ((db_num_out_V_1_new47_1_reg_2559 < grow_n_V_read_reg_2418_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_5_fu_754_p2 = ((db_num_in_V_1_new38_1_reg_2552 < shrink_n_V_read_reg_2410_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_6_fu_793_p2 = ((db_num_in_V_1_new38_2_reg_2595 < shrink_n_V_read_reg_2410_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_7_fu_832_p2 = ((db_num_in_V_1_new38_3_reg_2638 < shrink_n_V_read_reg_2410_pp0_iter1_reg) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_711_p2 = ((db_num_out_V_1_new_reg_2516 < grow_n_V_read_reg_2418_pp0_iter1_reg) ? 1'b1 : 1'b0);

always @ (*) begin
    p_Result_10_fu_1091_p4 = xs_V_10_reg_2819;
    p_Result_10_fu_1091_p4[32'd16] = |(1'd0);
end

assign p_Result_2_fu_988_p3 = p_Val2_2_reg_2680_pp0_iter3_reg[32'd16];

assign p_Result_4_fu_1044_p3 = p_Val2_4_reg_2703_pp0_iter3_reg[32'd16];

assign p_Result_6_fu_1100_p3 = p_Val2_6_reg_2726_pp0_iter3_reg[32'd16];

always @ (*) begin
    p_Result_7_fu_923_p4 = xs_V_7_reg_2759;
    p_Result_7_fu_923_p4[32'd16] = |(1'd0);
end

always @ (*) begin
    p_Result_8_fu_979_p4 = xs_V_8_reg_2779;
    p_Result_8_fu_979_p4[32'd16] = |(1'd0);
end

always @ (*) begin
    p_Result_9_fu_1035_p4 = xs_V_9_reg_2799;
    p_Result_9_fu_1035_p4[32'd16] = |(1'd0);
end

assign p_Result_s_fu_932_p3 = p_Val2_s_reg_2657_pp0_iter3_reg[32'd16];

assign p_Val2_2_fu_744_p2 = ($signed(sext_ln703_5_fu_738_p1) - $signed(sext_ln703_6_fu_741_p1));

assign p_Val2_4_fu_783_p2 = ($signed(sext_ln703_10_fu_777_p1) - $signed(sext_ln703_11_fu_780_p1));

assign p_Val2_6_fu_822_p2 = ($signed(sext_ln703_15_fu_816_p1) - $signed(sext_ln703_16_fu_819_p1));

assign p_Val2_s_fu_705_p2 = ($signed(sext_ln703_fu_699_p1) - $signed(sext_ln703_1_fu_702_p1));

assign ret_V_fu_1801_p2 = ($signed(10'd1023) + $signed(zext_ln1354_fu_1798_p1));

assign select_ln1148_1_fu_2320_p3 = ((tmp_18_reg_3044_pp0_iter7_reg[0:0] === 1'b1) ? sub_ln1148_3_fu_2315_p2 : trunc_ln1148_5_reg_3049_pp0_iter7_reg);

assign select_ln1148_2_fu_2337_p3 = ((tmp_23_reg_3060_pp0_iter7_reg[0:0] === 1'b1) ? sub_ln1148_5_fu_2332_p2 : trunc_ln1148_8_reg_3065_pp0_iter7_reg);

assign select_ln1148_3_fu_2354_p3 = ((tmp_28_reg_3076_pp0_iter7_reg[0:0] === 1'b1) ? sub_ln1148_7_fu_2349_p2 : trunc_ln1148_3_reg_3081_pp0_iter7_reg);

assign select_ln1148_fu_2303_p3 = ((tmp_13_reg_3028_pp0_iter7_reg[0:0] === 1'b1) ? sub_ln1148_1_fu_2298_p2 : trunc_ln1148_2_reg_3033_pp0_iter7_reg);

assign select_ln178_1_fu_995_p3 = ((p_Result_2_fu_988_p3[0:0] === 1'b1) ? p_Result_8_fu_979_p4 : p_Val2_2_reg_2680_pp0_iter3_reg);

assign select_ln178_2_fu_1051_p3 = ((p_Result_4_fu_1044_p3[0:0] === 1'b1) ? p_Result_9_fu_1035_p4 : p_Val2_4_reg_2703_pp0_iter3_reg);

assign select_ln178_3_fu_1107_p3 = ((p_Result_6_fu_1100_p3[0:0] === 1'b1) ? p_Result_10_fu_1091_p4 : p_Val2_6_reg_2726_pp0_iter3_reg);

assign select_ln178_fu_939_p3 = ((p_Result_s_fu_932_p3[0:0] === 1'b1) ? p_Result_7_fu_923_p4 : p_Val2_s_reg_2657_pp0_iter3_reg);

assign select_ln340_1_fu_1217_p3 = ((tmp_12_fu_1204_p3[0:0] === 1'b1) ? 16'd0 : add_ln703_1_fu_1212_p2);

assign select_ln340_2_fu_1345_p3 = ((tmp_16_fu_1337_p3[0:0] === 1'b1) ? 16'd65535 : add_ln703_3_fu_1332_p2);

assign select_ln340_3_fu_1377_p3 = ((tmp_17_fu_1364_p3[0:0] === 1'b1) ? 16'd0 : add_ln703_4_fu_1372_p2);

assign select_ln340_4_fu_1505_p3 = ((tmp_21_fu_1497_p3[0:0] === 1'b1) ? 16'd65535 : add_ln703_6_fu_1492_p2);

assign select_ln340_5_fu_1537_p3 = ((tmp_22_fu_1524_p3[0:0] === 1'b1) ? 16'd0 : add_ln703_7_fu_1532_p2);

assign select_ln340_6_fu_1665_p3 = ((tmp_26_fu_1657_p3[0:0] === 1'b1) ? 16'd65535 : add_ln703_9_fu_1652_p2);

assign select_ln340_7_fu_1697_p3 = ((tmp_27_fu_1684_p3[0:0] === 1'b1) ? 16'd0 : add_ln703_10_fu_1692_p2);

assign select_ln340_fu_1185_p3 = ((tmp_11_fu_1177_p3[0:0] === 1'b1) ? 16'd65535 : add_ln703_fu_1172_p2);

assign select_ln83_1_fu_875_p3 = ((ap_sig_allocacmp_started_load[0:0] === 1'b1) ? db_win_V_new11_1_reg_2535_pp0_iter2_reg : 16'd13576);

assign select_ln83_2_fu_891_p3 = ((ap_sig_allocacmp_started_load[0:0] === 1'b1) ? db_win_V_new11_2_reg_2578_pp0_iter2_reg : 16'd13576);

assign select_ln83_3_fu_907_p3 = ((ap_sig_allocacmp_started_load[0:0] === 1'b1) ? db_win_V_new11_3_reg_2621_pp0_iter2_reg : 16'd13576);

assign select_ln83_fu_859_p3 = ((ap_sig_allocacmp_started_load[0:0] === 1'b1) ? db_win_V_new_reg_2492_pp0_iter2_reg : 16'd13576);

assign select_ln891_10_fu_1402_p3 = ((and_ln891_4_reg_2860[0:0] === 1'b1) ? select_ln83_1_reg_2769_pp0_iter4_reg : select_ln891_9_fu_1395_p3);

assign select_ln891_11_fu_1408_p3 = ((and_ln891_5_reg_2867[0:0] === 1'b1) ? select_ln340_2_fu_1345_p3 : select_ln891_10_fu_1402_p3);

assign select_ln891_12_fu_1415_p3 = ((and_ln891_3_fu_1390_p2[0:0] === 1'b1) ? add_ln700_4_fu_1353_p2 : 9'd0);

assign select_ln891_13_fu_1423_p3 = ((icmp_ln1494_1_reg_2854[0:0] === 1'b1) ? db_num_in_V_1_new38_1_reg_2552_pp0_iter4_reg : select_ln891_12_fu_1415_p3);

assign select_ln891_14_fu_1429_p3 = ((and_ln891_4_reg_2860[0:0] === 1'b1) ? add_ln700_3_fu_1318_p2 : db_num_out_V_1_new47_1_reg_2559_pp0_iter4_reg);

assign select_ln891_15_fu_1435_p3 = ((and_ln891_5_reg_2867[0:0] === 1'b1) ? 9'd0 : select_ln891_14_fu_1429_p3);

assign select_ln891_16_fu_1442_p3 = ((and_ln891_4_reg_2860[0:0] === 1'b1) ? trunc_ln81_1_reg_2528_pp0_iter4_reg : phases_1_V_read_1_reg_2440_pp0_iter4_reg);

assign select_ln891_17_fu_1447_p3 = ((and_ln891_5_reg_2867[0:0] === 1'b1) ? trunc_ln81_1_reg_2528_pp0_iter4_reg : select_ln891_16_fu_1442_p3);

assign select_ln891_18_fu_1555_p3 = ((and_ln891_6_fu_1550_p2[0:0] === 1'b1) ? select_ln83_2_reg_2789_pp0_iter4_reg : select_ln340_5_fu_1537_p3);

assign select_ln891_19_fu_1562_p3 = ((and_ln891_7_reg_2885[0:0] === 1'b1) ? select_ln83_2_reg_2789_pp0_iter4_reg : select_ln891_18_fu_1555_p3);

assign select_ln891_1_fu_1242_p3 = ((and_ln891_1_reg_2835[0:0] === 1'b1) ? select_ln83_reg_2749_pp0_iter4_reg : select_ln891_fu_1235_p3);

assign select_ln891_20_fu_1568_p3 = ((and_ln891_8_reg_2892[0:0] === 1'b1) ? select_ln340_4_fu_1505_p3 : select_ln891_19_fu_1562_p3);

assign select_ln891_21_fu_1575_p3 = ((and_ln891_6_fu_1550_p2[0:0] === 1'b1) ? add_ln700_7_fu_1513_p2 : 9'd0);

assign select_ln891_22_fu_1583_p3 = ((icmp_ln1494_2_reg_2879[0:0] === 1'b1) ? db_num_in_V_1_new38_2_reg_2595_pp0_iter4_reg : select_ln891_21_fu_1575_p3);

assign select_ln891_23_fu_1589_p3 = ((and_ln891_7_reg_2885[0:0] === 1'b1) ? add_ln700_6_fu_1478_p2 : db_num_out_V_1_new47_2_reg_2602_pp0_iter4_reg);

assign select_ln891_24_fu_1595_p3 = ((and_ln891_8_reg_2892[0:0] === 1'b1) ? 9'd0 : select_ln891_23_fu_1589_p3);

assign select_ln891_25_fu_1602_p3 = ((and_ln891_7_reg_2885[0:0] === 1'b1) ? trunc_ln81_2_reg_2571_pp0_iter4_reg : phases_2_V_read_1_reg_2433_pp0_iter4_reg);

assign select_ln891_26_fu_1607_p3 = ((and_ln891_8_reg_2892[0:0] === 1'b1) ? trunc_ln81_2_reg_2571_pp0_iter4_reg : select_ln891_25_fu_1602_p3);

assign select_ln891_27_fu_1715_p3 = ((and_ln891_9_fu_1710_p2[0:0] === 1'b1) ? select_ln83_3_reg_2809_pp0_iter4_reg : select_ln340_7_fu_1697_p3);

assign select_ln891_28_fu_1722_p3 = ((and_ln891_10_reg_2910[0:0] === 1'b1) ? select_ln83_3_reg_2809_pp0_iter4_reg : select_ln891_27_fu_1715_p3);

assign select_ln891_29_fu_1728_p3 = ((and_ln891_11_reg_2917[0:0] === 1'b1) ? select_ln340_6_fu_1665_p3 : select_ln891_28_fu_1722_p3);

assign select_ln891_2_fu_1248_p3 = ((and_ln891_2_reg_2842[0:0] === 1'b1) ? select_ln340_fu_1185_p3 : select_ln891_1_fu_1242_p3);

assign select_ln891_30_fu_1735_p3 = ((and_ln891_9_fu_1710_p2[0:0] === 1'b1) ? add_ln700_10_fu_1673_p2 : 9'd0);

assign select_ln891_31_fu_1743_p3 = ((icmp_ln1494_3_reg_2904[0:0] === 1'b1) ? db_num_in_V_1_new38_3_reg_2638_pp0_iter4_reg : select_ln891_30_fu_1735_p3);

assign select_ln891_32_fu_1749_p3 = ((and_ln891_10_reg_2910[0:0] === 1'b1) ? add_ln700_9_fu_1638_p2 : db_num_out_V_1_new47_3_reg_2645_pp0_iter4_reg);

assign select_ln891_33_fu_1755_p3 = ((and_ln891_11_reg_2917[0:0] === 1'b1) ? 9'd0 : select_ln891_32_fu_1749_p3);

assign select_ln891_34_fu_1762_p3 = ((and_ln891_10_reg_2910[0:0] === 1'b1) ? trunc_ln81_3_reg_2614_pp0_iter4_reg : phases_3_V_read_1_reg_2426_pp0_iter4_reg);

assign select_ln891_35_fu_1767_p3 = ((and_ln891_11_reg_2917[0:0] === 1'b1) ? trunc_ln81_3_reg_2614_pp0_iter4_reg : select_ln891_34_fu_1762_p3);

assign select_ln891_3_fu_1255_p3 = ((and_ln891_fu_1230_p2[0:0] === 1'b1) ? add_ln700_1_fu_1193_p2 : 9'd0);

assign select_ln891_4_fu_1263_p3 = ((icmp_ln1494_reg_2829[0:0] === 1'b1) ? db_num_in_V_1_new_reg_2509_pp0_iter4_reg : select_ln891_3_fu_1255_p3);

assign select_ln891_5_fu_1269_p3 = ((and_ln891_1_reg_2835[0:0] === 1'b1) ? add_ln700_fu_1158_p2 : db_num_out_V_1_new_reg_2516_pp0_iter4_reg);

assign select_ln891_6_fu_1275_p3 = ((and_ln891_2_reg_2842[0:0] === 1'b1) ? 9'd0 : select_ln891_5_fu_1269_p3);

assign select_ln891_7_fu_1282_p3 = ((and_ln891_1_reg_2835[0:0] === 1'b1) ? trunc_ln81_reg_2485_pp0_iter4_reg : phases_0_V_read_1_reg_2447_pp0_iter4_reg);

assign select_ln891_8_fu_1287_p3 = ((and_ln891_2_reg_2842[0:0] === 1'b1) ? trunc_ln81_reg_2485_pp0_iter4_reg : select_ln891_7_fu_1282_p3);

assign select_ln891_9_fu_1395_p3 = ((and_ln891_3_fu_1390_p2[0:0] === 1'b1) ? select_ln83_1_reg_2769_pp0_iter4_reg : select_ln340_3_fu_1377_p3);

assign select_ln891_fu_1235_p3 = ((and_ln891_fu_1230_p2[0:0] === 1'b1) ? select_ln83_reg_2749_pp0_iter4_reg : select_ln340_1_fu_1217_p3);

assign sext_ln544_fu_1943_p1 = $signed(ret_V_reg_3017);

assign sext_ln703_10_fu_777_p1 = phases_2_V_read_1_reg_2433_pp0_iter1_reg;

assign sext_ln703_11_fu_780_p1 = trunc_ln81_2_reg_2571;

assign sext_ln703_12_fu_1625_p1 = $signed(select_ln891_26_fu_1607_p3);

assign sext_ln703_13_fu_1629_p1 = $signed(basline_mem_V_2_load_reg_2899);

assign sext_ln703_14_fu_1875_p1 = sub_ln1193_4_reg_2990;

assign sext_ln703_15_fu_816_p1 = phases_3_V_read_1_reg_2426_pp0_iter1_reg;

assign sext_ln703_16_fu_819_p1 = trunc_ln81_3_reg_2614;

assign sext_ln703_17_fu_1785_p1 = $signed(select_ln891_35_fu_1767_p3);

assign sext_ln703_18_fu_1789_p1 = $signed(basline_mem_V_3_load_reg_2924);

assign sext_ln703_19_fu_1909_p1 = sub_ln1193_6_reg_3011;

assign sext_ln703_1_fu_702_p1 = trunc_ln81_reg_2485;

assign sext_ln703_20_fu_1810_p1 = sub_ln1193_reg_2948;

assign sext_ln703_21_fu_1844_p1 = sub_ln1193_2_reg_2969;

assign sext_ln703_22_fu_1878_p1 = sub_ln1193_4_reg_2990;

assign sext_ln703_23_fu_1912_p1 = sub_ln1193_6_reg_3011;

assign sext_ln703_2_fu_1305_p1 = $signed(select_ln891_8_fu_1287_p3);

assign sext_ln703_3_fu_1309_p1 = $signed(basline_mem_V_0_load_reg_2849);

assign sext_ln703_4_fu_1807_p1 = sub_ln1193_reg_2948;

assign sext_ln703_5_fu_738_p1 = phases_1_V_read_1_reg_2440_pp0_iter1_reg;

assign sext_ln703_6_fu_741_p1 = trunc_ln81_1_reg_2528;

assign sext_ln703_7_fu_1465_p1 = $signed(select_ln891_17_fu_1447_p3);

assign sext_ln703_8_fu_1469_p1 = $signed(basline_mem_V_1_load_reg_2874);

assign sext_ln703_9_fu_1841_p1 = sub_ln1193_2_reg_2969;

assign sext_ln703_fu_699_p1 = phases_0_V_read_1_reg_2447_pp0_iter1_reg;

assign shl_ln728_1_fu_1002_p3 = {{select_ln178_1_fu_995_p3}, {1'd0}};

assign shl_ln728_2_fu_1058_p3 = {{select_ln178_2_fu_1051_p3}, {1'd0}};

assign shl_ln728_3_fu_1114_p3 = {{select_ln178_3_fu_1107_p3}, {1'd0}};

assign shl_ln_fu_946_p3 = {{select_ln178_fu_939_p3}, {1'd0}};

assign sub_ln1148_1_fu_2298_p2 = (16'd0 - trunc_ln1148_1_reg_3086);

assign sub_ln1148_2_fu_2165_p2 = (32'd0 - add_ln703_5_reg_3038);

assign sub_ln1148_3_fu_2315_p2 = (16'd0 - trunc_ln1148_4_reg_3091);

assign sub_ln1148_4_fu_2211_p2 = (32'd0 - add_ln703_8_reg_3054);

assign sub_ln1148_5_fu_2332_p2 = (16'd0 - trunc_ln1148_7_reg_3096);

assign sub_ln1148_6_fu_2257_p2 = (32'd0 - add_ln703_11_reg_3070);

assign sub_ln1148_7_fu_2349_p2 = (16'd0 - trunc_ln1148_s_reg_3101);

assign sub_ln1148_fu_2119_p2 = (32'd0 - add_ln703_2_reg_3022);

assign sub_ln1193_2_fu_1472_p2 = ($signed(sext_ln703_7_fu_1465_p1) - $signed(sext_ln703_8_fu_1469_p1));

assign sub_ln1193_4_fu_1632_p2 = ($signed(sext_ln703_12_fu_1625_p1) - $signed(sext_ln703_13_fu_1629_p1));

assign sub_ln1193_6_fu_1792_p2 = ($signed(sext_ln703_17_fu_1785_p1) - $signed(sext_ln703_18_fu_1789_p1));

assign sub_ln1193_fu_1312_p2 = ($signed(sext_ln703_2_fu_1305_p1) - $signed(sext_ln703_3_fu_1309_p1));

assign tmp_11_fu_1177_p3 = add_ln1192_fu_1166_p2[32'd16];

assign tmp_12_fu_1204_p3 = add_ln1193_fu_1198_p2[32'd16];

assign tmp_16_fu_1337_p3 = add_ln1192_1_fu_1326_p2[32'd16];

assign tmp_17_fu_1364_p3 = add_ln1193_1_fu_1358_p2[32'd16];

assign tmp_21_fu_1497_p3 = add_ln1192_2_fu_1486_p2[32'd16];

assign tmp_22_fu_1524_p3 = add_ln1193_2_fu_1518_p2[32'd16];

assign tmp_26_fu_1657_p3 = add_ln1192_3_fu_1646_p2[32'd16];

assign tmp_27_fu_1684_p3 = add_ln1193_3_fu_1678_p2[32'd16];

assign tmp_4_fu_688_p3 = {{group_V_read_reg_2454_pp0_iter1_reg}, {6'd0}};

assign tmp_5_fu_1294_p3 = {{group_V_read_reg_2454_pp0_iter4_reg}, {db_addr_V_1_new_reg_2497_pp0_iter4_reg}};

assign tmp_6_fu_1454_p3 = {{group_V_read_reg_2454_pp0_iter4_reg}, {db_addr_V_1_new20_1_reg_2540_pp0_iter4_reg}};

assign tmp_7_fu_1614_p3 = {{group_V_read_reg_2454_pp0_iter4_reg}, {db_addr_V_1_new20_2_reg_2583_pp0_iter4_reg}};

assign tmp_8_fu_1774_p3 = {{group_V_read_reg_2454_pp0_iter4_reg}, {db_addr_V_1_new20_3_reg_2626_pp0_iter4_reg}};

assign trunc_ln81_1_fu_496_p1 = basedb_1_q0[15:0];

assign trunc_ln81_2_fu_560_p1 = basedb_2_q0[15:0];

assign trunc_ln81_3_fu_624_p1 = basedb_3_q0[15:0];

assign trunc_ln81_fu_432_p1 = basedb_0_q0[15:0];

assign xor_ln1494_1_fu_1385_p2 = (icmp_ln1494_1_reg_2854 ^ 1'd1);

assign xor_ln1494_2_fu_1545_p2 = (icmp_ln1494_2_reg_2879 ^ 1'd1);

assign xor_ln1494_3_fu_1705_p2 = (icmp_ln1494_3_reg_2904 ^ 1'd1);

assign xor_ln1494_fu_1225_p2 = (icmp_ln1494_reg_2829 ^ 1'd1);

assign xor_ln891_1_fu_1024_p2 = (icmp_ln891_4_reg_2687_pp0_iter3_reg ^ 1'd1);

assign xor_ln891_2_fu_1080_p2 = (icmp_ln891_2_reg_2710_pp0_iter3_reg ^ 1'd1);

assign xor_ln891_3_fu_1136_p2 = (icmp_ln891_3_reg_2733_pp0_iter3_reg ^ 1'd1);

assign xor_ln891_fu_968_p2 = (icmp_ln891_reg_2664_pp0_iter3_reg ^ 1'd1);

assign xs_V_10_fu_914_p2 = (17'd0 - p_Val2_6_reg_2726);

assign xs_V_7_fu_866_p2 = (17'd0 - p_Val2_s_reg_2657);

assign xs_V_8_fu_882_p2 = (17'd0 - p_Val2_2_reg_2680);

assign xs_V_9_fu_898_p2 = (17'd0 - p_Val2_4_reg_2703);

assign zext_ln1353_1_fu_758_p1 = db_addr_V_1_new20_1_reg_2540;

assign zext_ln1353_2_fu_797_p1 = db_addr_V_1_new20_2_reg_2583;

assign zext_ln1353_3_fu_836_p1 = db_addr_V_1_new20_3_reg_2626;

assign zext_ln1353_fu_719_p1 = db_addr_V_1_new_reg_2497;

assign zext_ln1354_fu_1798_p1 = group_V_read_reg_2454_pp0_iter5_reg;

assign zext_ln1494_1_fu_1010_p1 = select_ln83_1_reg_2769;

assign zext_ln1494_2_fu_1066_p1 = select_ln83_2_reg_2789;

assign zext_ln1494_3_fu_1122_p1 = select_ln83_3_reg_2809;

assign zext_ln1494_fu_954_p1 = select_ln83_reg_2749;

assign zext_ln203_1_fu_1460_p1 = tmp_6_fu_1454_p3;

assign zext_ln203_2_fu_1620_p1 = tmp_7_fu_1614_p3;

assign zext_ln203_3_fu_1780_p1 = tmp_8_fu_1774_p3;

assign zext_ln203_fu_1300_p1 = tmp_5_fu_1294_p3;

assign zext_ln47_1_fu_871_p1 = add_ln47_reg_2675;

assign zext_ln47_2_fu_767_p1 = add_ln1353_1_fu_761_p2;

assign zext_ln47_3_fu_887_p1 = add_ln47_1_reg_2698;

assign zext_ln47_4_fu_806_p1 = add_ln1353_2_fu_800_p2;

assign zext_ln47_5_fu_903_p1 = add_ln47_2_reg_2721;

assign zext_ln47_6_fu_845_p1 = add_ln1353_3_fu_839_p2;

assign zext_ln47_7_fu_919_p1 = add_ln47_3_reg_2744;

assign zext_ln47_fu_728_p1 = add_ln1353_fu_722_p2;

assign zext_ln544_fu_424_p1 = group_V;

assign zext_ln703_1_fu_1323_p1 = select_ln83_1_reg_2769_pp0_iter4_reg;

assign zext_ln703_2_fu_1483_p1 = select_ln83_2_reg_2789_pp0_iter4_reg;

assign zext_ln703_3_fu_1643_p1 = select_ln83_3_reg_2809_pp0_iter4_reg;

assign zext_ln703_fu_1163_p1 = select_ln83_reg_2749_pp0_iter4_reg;

assign zext_ln81_fu_695_p1 = tmp_4_fu_688_p3;

endmodule //update_baselines
