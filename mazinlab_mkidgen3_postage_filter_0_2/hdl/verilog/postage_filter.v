// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="postage_filter_postage_filter,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.307625,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1167,HLS_SYN_LUT=1576,HLS_VERSION=2022_1}" *)

module postage_filter (
        ap_clk,
        ap_rst_n,
        instream_TDATA,
        instream_TVALID,
        instream_TREADY,
        instream_TKEEP,
        instream_TSTRB,
        instream_TUSER,
        instream_TLAST,
        iniq_TDATA,
        iniq_TVALID,
        iniq_TREADY,
        iniq_TKEEP,
        iniq_TSTRB,
        iniq_TLAST,
        iq_out_0_TDATA,
        iq_out_0_TVALID,
        iq_out_0_TREADY,
        iq_out_0_TKEEP,
        iq_out_0_TSTRB,
        iq_out_0_TUSER,
        iq_out_0_TLAST,
        iq_out_1_TDATA,
        iq_out_1_TVALID,
        iq_out_1_TREADY,
        iq_out_1_TKEEP,
        iq_out_1_TSTRB,
        iq_out_1_TUSER,
        iq_out_1_TLAST,
        iq_out_2_TDATA,
        iq_out_2_TVALID,
        iq_out_2_TREADY,
        iq_out_2_TKEEP,
        iq_out_2_TSTRB,
        iq_out_2_TUSER,
        iq_out_2_TLAST,
        iq_out_3_TDATA,
        iq_out_3_TVALID,
        iq_out_3_TREADY,
        iq_out_3_TKEEP,
        iq_out_3_TSTRB,
        iq_out_3_TUSER,
        iq_out_3_TLAST,
        iq_out_4_TDATA,
        iq_out_4_TVALID,
        iq_out_4_TREADY,
        iq_out_4_TKEEP,
        iq_out_4_TSTRB,
        iq_out_4_TUSER,
        iq_out_4_TLAST,
        iq_out_5_TDATA,
        iq_out_5_TVALID,
        iq_out_5_TREADY,
        iq_out_5_TKEEP,
        iq_out_5_TSTRB,
        iq_out_5_TUSER,
        iq_out_5_TLAST,
        iq_out_6_TDATA,
        iq_out_6_TVALID,
        iq_out_6_TREADY,
        iq_out_6_TKEEP,
        iq_out_6_TSTRB,
        iq_out_6_TUSER,
        iq_out_6_TLAST,
        iq_out_7_TDATA,
        iq_out_7_TVALID,
        iq_out_7_TREADY,
        iq_out_7_TKEEP,
        iq_out_7_TSTRB,
        iq_out_7_TUSER,
        iq_out_7_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [63:0] instream_TDATA;
input   instream_TVALID;
output   instream_TREADY;
input  [7:0] instream_TKEEP;
input  [7:0] instream_TSTRB;
input  [12:0] instream_TUSER;
input  [0:0] instream_TLAST;
input  [127:0] iniq_TDATA;
input   iniq_TVALID;
output   iniq_TREADY;
input  [15:0] iniq_TKEEP;
input  [15:0] iniq_TSTRB;
input  [0:0] iniq_TLAST;
output  [31:0] iq_out_0_TDATA;
output   iq_out_0_TVALID;
input   iq_out_0_TREADY;
output  [3:0] iq_out_0_TKEEP;
output  [3:0] iq_out_0_TSTRB;
output  [2:0] iq_out_0_TUSER;
output  [0:0] iq_out_0_TLAST;
output  [31:0] iq_out_1_TDATA;
output   iq_out_1_TVALID;
input   iq_out_1_TREADY;
output  [3:0] iq_out_1_TKEEP;
output  [3:0] iq_out_1_TSTRB;
output  [2:0] iq_out_1_TUSER;
output  [0:0] iq_out_1_TLAST;
output  [31:0] iq_out_2_TDATA;
output   iq_out_2_TVALID;
input   iq_out_2_TREADY;
output  [3:0] iq_out_2_TKEEP;
output  [3:0] iq_out_2_TSTRB;
output  [2:0] iq_out_2_TUSER;
output  [0:0] iq_out_2_TLAST;
output  [31:0] iq_out_3_TDATA;
output   iq_out_3_TVALID;
input   iq_out_3_TREADY;
output  [3:0] iq_out_3_TKEEP;
output  [3:0] iq_out_3_TSTRB;
output  [2:0] iq_out_3_TUSER;
output  [0:0] iq_out_3_TLAST;
output  [31:0] iq_out_4_TDATA;
output   iq_out_4_TVALID;
input   iq_out_4_TREADY;
output  [3:0] iq_out_4_TKEEP;
output  [3:0] iq_out_4_TSTRB;
output  [2:0] iq_out_4_TUSER;
output  [0:0] iq_out_4_TLAST;
output  [31:0] iq_out_5_TDATA;
output   iq_out_5_TVALID;
input   iq_out_5_TREADY;
output  [3:0] iq_out_5_TKEEP;
output  [3:0] iq_out_5_TSTRB;
output  [2:0] iq_out_5_TUSER;
output  [0:0] iq_out_5_TLAST;
output  [31:0] iq_out_6_TDATA;
output   iq_out_6_TVALID;
input   iq_out_6_TREADY;
output  [3:0] iq_out_6_TKEEP;
output  [3:0] iq_out_6_TSTRB;
output  [2:0] iq_out_6_TUSER;
output  [0:0] iq_out_6_TLAST;
output  [31:0] iq_out_7_TDATA;
output   iq_out_7_TVALID;
input   iq_out_7_TREADY;
output  [3:0] iq_out_7_TKEEP;
output  [3:0] iq_out_7_TSTRB;
output  [2:0] iq_out_7_TUSER;
output  [0:0] iq_out_7_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire   [11:0] monitor_0;
wire   [11:0] monitor_1;
wire   [11:0] monitor_2;
wire   [11:0] monitor_3;
wire   [11:0] monitor_4;
wire   [11:0] monitor_5;
wire   [11:0] monitor_6;
wire   [11:0] monitor_7;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3;
reg   [7:0] postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_q0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0;
reg    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0;
wire   [31:0] postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_q0;
reg    instream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    iniq_TDATA_blk_n;
reg    iq_out_0_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln1065_reg_1474;
reg   [0:0] icmp_ln94_reg_1484;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln1065_reg_1474_pp0_iter2_reg;
reg   [0:0] icmp_ln94_reg_1484_pp0_iter2_reg;
reg    iq_out_1_TDATA_blk_n;
reg   [0:0] icmp_ln1065_1_reg_1491;
reg   [0:0] icmp_ln94_1_reg_1501;
reg   [0:0] icmp_ln1065_1_reg_1491_pp0_iter2_reg;
reg   [0:0] icmp_ln94_1_reg_1501_pp0_iter2_reg;
reg    iq_out_2_TDATA_blk_n;
reg   [0:0] icmp_ln1065_2_reg_1508;
reg   [0:0] icmp_ln94_2_reg_1518;
reg   [0:0] icmp_ln1065_2_reg_1508_pp0_iter2_reg;
reg   [0:0] icmp_ln94_2_reg_1518_pp0_iter2_reg;
reg    iq_out_3_TDATA_blk_n;
reg   [0:0] icmp_ln1065_3_reg_1525;
reg   [0:0] icmp_ln94_3_reg_1535;
reg   [0:0] icmp_ln1065_3_reg_1525_pp0_iter2_reg;
reg   [0:0] icmp_ln94_3_reg_1535_pp0_iter2_reg;
reg    iq_out_4_TDATA_blk_n;
reg   [0:0] icmp_ln1065_4_reg_1542;
reg   [0:0] icmp_ln94_4_reg_1552;
reg   [0:0] icmp_ln1065_4_reg_1542_pp0_iter2_reg;
reg   [0:0] icmp_ln94_4_reg_1552_pp0_iter2_reg;
reg    iq_out_5_TDATA_blk_n;
reg   [0:0] icmp_ln1065_5_reg_1559;
reg   [0:0] icmp_ln94_5_reg_1569;
reg   [0:0] icmp_ln1065_5_reg_1559_pp0_iter2_reg;
reg   [0:0] icmp_ln94_5_reg_1569_pp0_iter2_reg;
reg    iq_out_6_TDATA_blk_n;
reg   [0:0] icmp_ln1065_6_reg_1576;
reg   [0:0] icmp_ln94_6_reg_1586;
reg   [0:0] icmp_ln1065_6_reg_1576_pp0_iter2_reg;
reg   [0:0] icmp_ln94_6_reg_1586_pp0_iter2_reg;
reg    iq_out_7_TDATA_blk_n;
reg   [0:0] icmp_ln1065_7_reg_1593;
reg   [0:0] icmp_ln94_7_reg_1603;
reg   [0:0] icmp_ln1065_7_reg_1593_pp0_iter2_reg;
reg   [0:0] icmp_ln94_7_reg_1603_pp0_iter2_reg;
wire   [8:0] group_V_fu_538_p1;
reg   [8:0] group_V_reg_1314;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_predicate_op263_write_state3;
reg    ap_predicate_op266_write_state3;
reg    ap_predicate_op269_write_state3;
reg    ap_predicate_op272_write_state3;
reg    ap_predicate_op275_write_state3;
reg    ap_predicate_op278_write_state3;
reg    ap_predicate_op281_write_state3;
reg    ap_predicate_op284_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_predicate_op285_write_state4;
reg    ap_predicate_op287_write_state4;
reg    ap_predicate_op289_write_state4;
reg    ap_predicate_op291_write_state4;
reg    ap_predicate_op293_write_state4;
reg    ap_predicate_op295_write_state4;
reg    ap_predicate_op297_write_state4;
reg    ap_predicate_op299_write_state4;
wire    regslice_both_iq_out_0_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_1_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_2_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_3_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_4_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_5_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_6_V_data_V_U_apdone_blk;
wire    regslice_both_iq_out_7_V_data_V_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] trigger_V_reg_1326;
wire   [31:0] x_fu_552_p1;
reg   [31:0] x_reg_1338;
reg   [31:0] x_reg_1338_pp0_iter1_reg;
reg   [31:0] x_1_reg_1350;
reg   [31:0] x_1_reg_1350_pp0_iter1_reg;
reg   [31:0] x_2_reg_1362;
reg   [31:0] x_2_reg_1362_pp0_iter1_reg;
reg   [31:0] x_3_reg_1374;
reg   [31:0] x_3_reg_1374_pp0_iter1_reg;
wire   [1:0] lane_V_fu_586_p1;
reg   [1:0] lane_V_reg_1386;
reg   [1:0] lane_V_reg_1386_pp0_iter1_reg;
reg   [8:0] gid_V_reg_1392;
wire   [1:0] lane_V_1_fu_600_p1;
reg   [1:0] lane_V_1_reg_1397;
reg   [1:0] lane_V_1_reg_1397_pp0_iter1_reg;
reg   [8:0] gid_V_1_reg_1403;
wire   [1:0] lane_V_2_fu_614_p1;
reg   [1:0] lane_V_2_reg_1408;
reg   [1:0] lane_V_2_reg_1408_pp0_iter1_reg;
reg   [8:0] gid_V_2_reg_1414;
wire   [1:0] lane_V_3_fu_628_p1;
reg   [1:0] lane_V_3_reg_1419;
reg   [1:0] lane_V_3_reg_1419_pp0_iter1_reg;
reg   [8:0] gid_V_3_reg_1425;
wire   [1:0] lane_V_4_fu_642_p1;
reg   [1:0] lane_V_4_reg_1430;
reg   [1:0] lane_V_4_reg_1430_pp0_iter1_reg;
reg   [8:0] gid_V_4_reg_1436;
wire   [1:0] lane_V_5_fu_656_p1;
reg   [1:0] lane_V_5_reg_1441;
reg   [1:0] lane_V_5_reg_1441_pp0_iter1_reg;
reg   [8:0] gid_V_5_reg_1447;
wire   [1:0] lane_V_6_fu_670_p1;
reg   [1:0] lane_V_6_reg_1452;
reg   [1:0] lane_V_6_reg_1452_pp0_iter1_reg;
reg   [8:0] gid_V_6_reg_1458;
wire   [1:0] lane_V_7_fu_684_p1;
reg   [1:0] lane_V_7_reg_1463;
reg   [1:0] lane_V_7_reg_1463_pp0_iter1_reg;
reg   [8:0] gid_V_7_reg_1469;
wire   [0:0] icmp_ln1065_fu_698_p2;
wire   [0:0] tmp_last_V_fu_712_p2;
reg   [0:0] tmp_last_V_reg_1479;
wire   [0:0] icmp_ln94_fu_718_p2;
wire   [0:0] icmp_ln1065_1_fu_756_p2;
wire   [0:0] tmp_last_V_1_fu_770_p2;
reg   [0:0] tmp_last_V_1_reg_1496;
wire   [0:0] icmp_ln94_1_fu_776_p2;
wire   [0:0] icmp_ln1065_2_fu_814_p2;
wire   [0:0] tmp_last_V_2_fu_828_p2;
reg   [0:0] tmp_last_V_2_reg_1513;
wire   [0:0] icmp_ln94_2_fu_834_p2;
wire   [0:0] icmp_ln1065_3_fu_872_p2;
wire   [0:0] tmp_last_V_3_fu_886_p2;
reg   [0:0] tmp_last_V_3_reg_1530;
wire   [0:0] icmp_ln94_3_fu_892_p2;
wire   [0:0] icmp_ln1065_4_fu_930_p2;
wire   [0:0] tmp_last_V_4_fu_944_p2;
reg   [0:0] tmp_last_V_4_reg_1547;
wire   [0:0] icmp_ln94_4_fu_950_p2;
wire   [0:0] icmp_ln1065_5_fu_988_p2;
wire   [0:0] tmp_last_V_5_fu_1002_p2;
reg   [0:0] tmp_last_V_5_reg_1564;
wire   [0:0] icmp_ln94_5_fu_1008_p2;
wire   [0:0] icmp_ln1065_6_fu_1046_p2;
wire   [0:0] tmp_last_V_6_fu_1060_p2;
reg   [0:0] tmp_last_V_6_reg_1581;
wire   [0:0] icmp_ln94_6_fu_1066_p2;
wire   [0:0] icmp_ln1065_7_fu_1104_p2;
wire   [0:0] tmp_last_V_7_fu_1118_p2;
reg   [0:0] tmp_last_V_7_reg_1598;
wire   [0:0] icmp_ln94_7_fu_1124_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [7:0] nexttocap_fu_706_p2;
wire   [0:0] p_Result_s_fu_744_p2;
wire   [7:0] nexttocap_1_fu_764_p2;
wire   [0:0] p_Result_1_fu_802_p2;
wire   [7:0] nexttocap_2_fu_822_p2;
wire   [0:0] p_Result_2_fu_860_p2;
wire   [7:0] nexttocap_3_fu_880_p2;
wire   [0:0] p_Result_3_fu_918_p2;
wire   [7:0] nexttocap_4_fu_938_p2;
wire   [0:0] p_Result_4_fu_976_p2;
wire   [7:0] nexttocap_5_fu_996_p2;
wire   [0:0] p_Result_5_fu_1034_p2;
wire   [7:0] nexttocap_6_fu_1054_p2;
wire   [0:0] p_Result_6_fu_1092_p2;
wire   [7:0] nexttocap_7_fu_1112_p2;
wire   [0:0] p_Result_7_fu_1150_p2;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] DataIn_assign_fu_1162_p6;
wire   [31:0] DataIn_assign_1_fu_1181_p6;
wire   [31:0] DataIn_assign_2_fu_1200_p6;
wire   [31:0] DataIn_assign_3_fu_1219_p6;
wire   [31:0] DataIn_assign_4_fu_1238_p6;
wire   [31:0] DataIn_assign_5_fu_1257_p6;
wire   [31:0] DataIn_assign_6_fu_1276_p6;
wire   [31:0] DataIn_assign_7_fu_1295_p6;
wire   [3:0] zext_ln825_fu_730_p1;
wire   [3:0] shl_ln825_fu_733_p2;
wire   [3:0] and_ln825_fu_739_p2;
wire   [3:0] zext_ln825_1_fu_788_p1;
wire   [3:0] shl_ln825_1_fu_791_p2;
wire   [3:0] and_ln825_1_fu_797_p2;
wire   [3:0] zext_ln825_2_fu_846_p1;
wire   [3:0] shl_ln825_2_fu_849_p2;
wire   [3:0] and_ln825_2_fu_855_p2;
wire   [3:0] zext_ln825_3_fu_904_p1;
wire   [3:0] shl_ln825_3_fu_907_p2;
wire   [3:0] and_ln825_3_fu_913_p2;
wire   [3:0] zext_ln825_4_fu_962_p1;
wire   [3:0] shl_ln825_4_fu_965_p2;
wire   [3:0] and_ln825_4_fu_971_p2;
wire   [3:0] zext_ln825_5_fu_1020_p1;
wire   [3:0] shl_ln825_5_fu_1023_p2;
wire   [3:0] and_ln825_5_fu_1029_p2;
wire   [3:0] zext_ln825_6_fu_1078_p1;
wire   [3:0] shl_ln825_6_fu_1081_p2;
wire   [3:0] and_ln825_6_fu_1087_p2;
wire   [3:0] zext_ln825_7_fu_1136_p1;
wire   [3:0] shl_ln825_7_fu_1139_p2;
wire   [3:0] and_ln825_7_fu_1145_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_instream_V_data_V_U_apdone_blk;
wire   [63:0] instream_TDATA_int_regslice;
wire    instream_TVALID_int_regslice;
reg    instream_TREADY_int_regslice;
wire    regslice_both_instream_V_data_V_U_ack_in;
wire    regslice_both_instream_V_keep_V_U_apdone_blk;
wire   [7:0] instream_TKEEP_int_regslice;
wire    regslice_both_instream_V_keep_V_U_vld_out;
wire    regslice_both_instream_V_keep_V_U_ack_in;
wire    regslice_both_instream_V_strb_V_U_apdone_blk;
wire   [7:0] instream_TSTRB_int_regslice;
wire    regslice_both_instream_V_strb_V_U_vld_out;
wire    regslice_both_instream_V_strb_V_U_ack_in;
wire    regslice_both_instream_V_user_V_U_apdone_blk;
wire   [12:0] instream_TUSER_int_regslice;
wire    regslice_both_instream_V_user_V_U_vld_out;
wire    regslice_both_instream_V_user_V_U_ack_in;
wire    regslice_both_instream_V_last_V_U_apdone_blk;
wire   [0:0] instream_TLAST_int_regslice;
wire    regslice_both_instream_V_last_V_U_vld_out;
wire    regslice_both_instream_V_last_V_U_ack_in;
wire    regslice_both_iniq_V_data_V_U_apdone_blk;
wire   [127:0] iniq_TDATA_int_regslice;
wire    iniq_TVALID_int_regslice;
reg    iniq_TREADY_int_regslice;
wire    regslice_both_iniq_V_data_V_U_ack_in;
wire    regslice_both_iniq_V_keep_V_U_apdone_blk;
wire   [15:0] iniq_TKEEP_int_regslice;
wire    regslice_both_iniq_V_keep_V_U_vld_out;
wire    regslice_both_iniq_V_keep_V_U_ack_in;
wire    regslice_both_iniq_V_strb_V_U_apdone_blk;
wire   [15:0] iniq_TSTRB_int_regslice;
wire    regslice_both_iniq_V_strb_V_U_vld_out;
wire    regslice_both_iniq_V_strb_V_U_ack_in;
wire    regslice_both_iniq_V_last_V_U_apdone_blk;
wire   [0:0] iniq_TLAST_int_regslice;
wire    regslice_both_iniq_V_last_V_U_vld_out;
wire    regslice_both_iniq_V_last_V_U_ack_in;
reg    iq_out_0_TVALID_int_regslice;
wire    iq_out_0_TREADY_int_regslice;
wire    regslice_both_iq_out_0_V_data_V_U_vld_out;
wire    regslice_both_iq_out_0_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_0_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_0_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_0_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_0_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_0_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_0_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_0_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_0_V_user_V_U_vld_out;
wire    regslice_both_iq_out_0_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_0_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_0_V_last_V_U_vld_out;
reg    iq_out_1_TVALID_int_regslice;
wire    iq_out_1_TREADY_int_regslice;
wire    regslice_both_iq_out_1_V_data_V_U_vld_out;
wire    regslice_both_iq_out_1_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_1_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_1_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_1_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_1_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_1_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_1_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_1_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_1_V_user_V_U_vld_out;
wire    regslice_both_iq_out_1_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_1_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_1_V_last_V_U_vld_out;
reg    iq_out_2_TVALID_int_regslice;
wire    iq_out_2_TREADY_int_regslice;
wire    regslice_both_iq_out_2_V_data_V_U_vld_out;
wire    regslice_both_iq_out_2_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_2_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_2_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_2_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_2_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_2_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_2_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_2_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_2_V_user_V_U_vld_out;
wire    regslice_both_iq_out_2_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_2_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_2_V_last_V_U_vld_out;
reg    iq_out_3_TVALID_int_regslice;
wire    iq_out_3_TREADY_int_regslice;
wire    regslice_both_iq_out_3_V_data_V_U_vld_out;
wire    regslice_both_iq_out_3_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_3_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_3_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_3_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_3_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_3_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_3_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_3_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_3_V_user_V_U_vld_out;
wire    regslice_both_iq_out_3_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_3_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_3_V_last_V_U_vld_out;
reg    iq_out_4_TVALID_int_regslice;
wire    iq_out_4_TREADY_int_regslice;
wire    regslice_both_iq_out_4_V_data_V_U_vld_out;
wire    regslice_both_iq_out_4_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_4_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_4_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_4_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_4_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_4_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_4_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_4_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_4_V_user_V_U_vld_out;
wire    regslice_both_iq_out_4_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_4_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_4_V_last_V_U_vld_out;
reg    iq_out_5_TVALID_int_regslice;
wire    iq_out_5_TREADY_int_regslice;
wire    regslice_both_iq_out_5_V_data_V_U_vld_out;
wire    regslice_both_iq_out_5_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_5_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_5_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_5_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_5_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_5_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_5_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_5_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_5_V_user_V_U_vld_out;
wire    regslice_both_iq_out_5_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_5_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_5_V_last_V_U_vld_out;
reg    iq_out_6_TVALID_int_regslice;
wire    iq_out_6_TREADY_int_regslice;
wire    regslice_both_iq_out_6_V_data_V_U_vld_out;
wire    regslice_both_iq_out_6_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_6_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_6_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_6_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_6_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_6_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_6_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_6_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_6_V_user_V_U_vld_out;
wire    regslice_both_iq_out_6_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_6_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_6_V_last_V_U_vld_out;
reg    iq_out_7_TVALID_int_regslice;
wire    iq_out_7_TREADY_int_regslice;
wire    regslice_both_iq_out_7_V_data_V_U_vld_out;
wire    regslice_both_iq_out_7_V_keep_V_U_apdone_blk;
wire    regslice_both_iq_out_7_V_keep_V_U_ack_in_dummy;
wire    regslice_both_iq_out_7_V_keep_V_U_vld_out;
wire    regslice_both_iq_out_7_V_strb_V_U_apdone_blk;
wire    regslice_both_iq_out_7_V_strb_V_U_ack_in_dummy;
wire    regslice_both_iq_out_7_V_strb_V_U_vld_out;
wire    regslice_both_iq_out_7_V_user_V_U_apdone_blk;
wire    regslice_both_iq_out_7_V_user_V_U_ack_in_dummy;
wire    regslice_both_iq_out_7_V_user_V_U_vld_out;
wire    regslice_both_iq_out_7_V_last_V_U_apdone_blk;
wire    regslice_both_iq_out_7_V_last_V_U_ack_in_dummy;
wire    regslice_both_iq_out_7_V_last_V_U_vld_out;
reg    ap_condition_1108;
reg    ap_condition_1098;
reg    ap_condition_1158;
reg    ap_condition_1148;
reg    ap_condition_1138;
reg    ap_condition_1128;
reg    ap_condition_1118;
reg    ap_condition_1088;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 = 8'd0;
#0 postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 = 8'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0),
    .d0(DataIn_assign_fu_1162_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0),
    .d0(DataIn_assign_1_fu_1181_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0),
    .d0(DataIn_assign_2_fu_1200_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0),
    .d0(DataIn_assign_3_fu_1219_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0),
    .d0(DataIn_assign_4_fu_1238_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0),
    .d0(DataIn_assign_5_fu_1257_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0),
    .d0(DataIn_assign_6_fu_1276_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_q0)
);

postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb #(
    .DataWidth( 32 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(5'd30),
    .ce0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0),
    .we0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0),
    .d0(DataIn_assign_7_fu_1295_p6),
    .q0(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_q0)
);

postage_filter_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .monitor_0(monitor_0),
    .monitor_1(monitor_1),
    .monitor_2(monitor_2),
    .monitor_3(monitor_3),
    .monitor_4(monitor_4),
    .monitor_5(monitor_5),
    .monitor_6(monitor_6),
    .monitor_7(monitor_7)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_reg_1386_pp0_iter1_reg),
    .dout(DataIn_assign_fu_1162_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_1_reg_1397_pp0_iter1_reg),
    .dout(DataIn_assign_1_fu_1181_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_2_reg_1408_pp0_iter1_reg),
    .dout(DataIn_assign_2_fu_1200_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_3_reg_1419_pp0_iter1_reg),
    .dout(DataIn_assign_3_fu_1219_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U5(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_4_reg_1430_pp0_iter1_reg),
    .dout(DataIn_assign_4_fu_1238_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_5_reg_1441_pp0_iter1_reg),
    .dout(DataIn_assign_5_fu_1257_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_6_reg_1452_pp0_iter1_reg),
    .dout(DataIn_assign_6_fu_1276_p6)
);

postage_filter_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U8(
    .din0(x_reg_1338_pp0_iter1_reg),
    .din1(x_1_reg_1350_pp0_iter1_reg),
    .din2(x_2_reg_1362_pp0_iter1_reg),
    .din3(x_3_reg_1374_pp0_iter1_reg),
    .din4(lane_V_7_reg_1463_pp0_iter1_reg),
    .dout(DataIn_assign_7_fu_1295_p6)
);

postage_filter_regslice_both #(
    .DataWidth( 64 ))
regslice_both_instream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TDATA),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_V_data_V_U_ack_in),
    .data_out(instream_TDATA_int_regslice),
    .vld_out(instream_TVALID_int_regslice),
    .ack_out(instream_TREADY_int_regslice),
    .apdone_blk(regslice_both_instream_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 8 ))
regslice_both_instream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TKEEP),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_V_keep_V_U_ack_in),
    .data_out(instream_TKEEP_int_regslice),
    .vld_out(regslice_both_instream_V_keep_V_U_vld_out),
    .ack_out(instream_TREADY_int_regslice),
    .apdone_blk(regslice_both_instream_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 8 ))
regslice_both_instream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TSTRB),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_V_strb_V_U_ack_in),
    .data_out(instream_TSTRB_int_regslice),
    .vld_out(regslice_both_instream_V_strb_V_U_vld_out),
    .ack_out(instream_TREADY_int_regslice),
    .apdone_blk(regslice_both_instream_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 13 ))
regslice_both_instream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TUSER),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_V_user_V_U_ack_in),
    .data_out(instream_TUSER_int_regslice),
    .vld_out(regslice_both_instream_V_user_V_U_vld_out),
    .ack_out(instream_TREADY_int_regslice),
    .apdone_blk(regslice_both_instream_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_instream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(instream_TLAST),
    .vld_in(instream_TVALID),
    .ack_in(regslice_both_instream_V_last_V_U_ack_in),
    .data_out(instream_TLAST_int_regslice),
    .vld_out(regslice_both_instream_V_last_V_U_vld_out),
    .ack_out(instream_TREADY_int_regslice),
    .apdone_blk(regslice_both_instream_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 128 ))
regslice_both_iniq_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(iniq_TDATA),
    .vld_in(iniq_TVALID),
    .ack_in(regslice_both_iniq_V_data_V_U_ack_in),
    .data_out(iniq_TDATA_int_regslice),
    .vld_out(iniq_TVALID_int_regslice),
    .ack_out(iniq_TREADY_int_regslice),
    .apdone_blk(regslice_both_iniq_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 16 ))
regslice_both_iniq_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(iniq_TKEEP),
    .vld_in(iniq_TVALID),
    .ack_in(regslice_both_iniq_V_keep_V_U_ack_in),
    .data_out(iniq_TKEEP_int_regslice),
    .vld_out(regslice_both_iniq_V_keep_V_U_vld_out),
    .ack_out(iniq_TREADY_int_regslice),
    .apdone_blk(regslice_both_iniq_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 16 ))
regslice_both_iniq_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(iniq_TSTRB),
    .vld_in(iniq_TVALID),
    .ack_in(regslice_both_iniq_V_strb_V_U_ack_in),
    .data_out(iniq_TSTRB_int_regslice),
    .vld_out(regslice_both_iniq_V_strb_V_U_vld_out),
    .ack_out(iniq_TREADY_int_regslice),
    .apdone_blk(regslice_both_iniq_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iniq_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(iniq_TLAST),
    .vld_in(iniq_TVALID),
    .ack_in(regslice_both_iniq_V_last_V_U_ack_in),
    .data_out(iniq_TLAST_int_regslice),
    .vld_out(regslice_both_iniq_V_last_V_U_vld_out),
    .ack_out(iniq_TREADY_int_regslice),
    .apdone_blk(regslice_both_iniq_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_0_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_q0),
    .vld_in(iq_out_0_TVALID_int_regslice),
    .ack_in(iq_out_0_TREADY_int_regslice),
    .data_out(iq_out_0_TDATA),
    .vld_out(regslice_both_iq_out_0_V_data_V_U_vld_out),
    .ack_out(iq_out_0_TREADY),
    .apdone_blk(regslice_both_iq_out_0_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_0_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_0_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_0_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_0_TKEEP),
    .vld_out(regslice_both_iq_out_0_V_keep_V_U_vld_out),
    .ack_out(iq_out_0_TREADY),
    .apdone_blk(regslice_both_iq_out_0_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_0_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_0_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_0_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_0_TSTRB),
    .vld_out(regslice_both_iq_out_0_V_strb_V_U_vld_out),
    .ack_out(iq_out_0_TREADY),
    .apdone_blk(regslice_both_iq_out_0_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_0_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd0),
    .vld_in(iq_out_0_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_0_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_0_TUSER),
    .vld_out(regslice_both_iq_out_0_V_user_V_U_vld_out),
    .ack_out(iq_out_0_TREADY),
    .apdone_blk(regslice_both_iq_out_0_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_0_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_1479),
    .vld_in(iq_out_0_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_0_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_0_TLAST),
    .vld_out(regslice_both_iq_out_0_V_last_V_U_vld_out),
    .ack_out(iq_out_0_TREADY),
    .apdone_blk(regslice_both_iq_out_0_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_q0),
    .vld_in(iq_out_1_TVALID_int_regslice),
    .ack_in(iq_out_1_TREADY_int_regslice),
    .data_out(iq_out_1_TDATA),
    .vld_out(regslice_both_iq_out_1_V_data_V_U_vld_out),
    .ack_out(iq_out_1_TREADY),
    .apdone_blk(regslice_both_iq_out_1_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_1_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_1_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_1_TKEEP),
    .vld_out(regslice_both_iq_out_1_V_keep_V_U_vld_out),
    .ack_out(iq_out_1_TREADY),
    .apdone_blk(regslice_both_iq_out_1_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_1_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_1_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_1_TSTRB),
    .vld_out(regslice_both_iq_out_1_V_strb_V_U_vld_out),
    .ack_out(iq_out_1_TREADY),
    .apdone_blk(regslice_both_iq_out_1_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_1_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd1),
    .vld_in(iq_out_1_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_1_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_1_TUSER),
    .vld_out(regslice_both_iq_out_1_V_user_V_U_vld_out),
    .ack_out(iq_out_1_TREADY),
    .apdone_blk(regslice_both_iq_out_1_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_1_reg_1496),
    .vld_in(iq_out_1_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_1_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_1_TLAST),
    .vld_out(regslice_both_iq_out_1_V_last_V_U_vld_out),
    .ack_out(iq_out_1_TREADY),
    .apdone_blk(regslice_both_iq_out_1_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_2_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_q0),
    .vld_in(iq_out_2_TVALID_int_regslice),
    .ack_in(iq_out_2_TREADY_int_regslice),
    .data_out(iq_out_2_TDATA),
    .vld_out(regslice_both_iq_out_2_V_data_V_U_vld_out),
    .ack_out(iq_out_2_TREADY),
    .apdone_blk(regslice_both_iq_out_2_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_2_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_2_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_2_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_2_TKEEP),
    .vld_out(regslice_both_iq_out_2_V_keep_V_U_vld_out),
    .ack_out(iq_out_2_TREADY),
    .apdone_blk(regslice_both_iq_out_2_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_2_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_2_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_2_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_2_TSTRB),
    .vld_out(regslice_both_iq_out_2_V_strb_V_U_vld_out),
    .ack_out(iq_out_2_TREADY),
    .apdone_blk(regslice_both_iq_out_2_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_2_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd2),
    .vld_in(iq_out_2_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_2_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_2_TUSER),
    .vld_out(regslice_both_iq_out_2_V_user_V_U_vld_out),
    .ack_out(iq_out_2_TREADY),
    .apdone_blk(regslice_both_iq_out_2_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_2_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_2_reg_1513),
    .vld_in(iq_out_2_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_2_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_2_TLAST),
    .vld_out(regslice_both_iq_out_2_V_last_V_U_vld_out),
    .ack_out(iq_out_2_TREADY),
    .apdone_blk(regslice_both_iq_out_2_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_3_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_q0),
    .vld_in(iq_out_3_TVALID_int_regslice),
    .ack_in(iq_out_3_TREADY_int_regslice),
    .data_out(iq_out_3_TDATA),
    .vld_out(regslice_both_iq_out_3_V_data_V_U_vld_out),
    .ack_out(iq_out_3_TREADY),
    .apdone_blk(regslice_both_iq_out_3_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_3_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_3_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_3_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_3_TKEEP),
    .vld_out(regslice_both_iq_out_3_V_keep_V_U_vld_out),
    .ack_out(iq_out_3_TREADY),
    .apdone_blk(regslice_both_iq_out_3_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_3_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_3_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_3_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_3_TSTRB),
    .vld_out(regslice_both_iq_out_3_V_strb_V_U_vld_out),
    .ack_out(iq_out_3_TREADY),
    .apdone_blk(regslice_both_iq_out_3_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_3_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd3),
    .vld_in(iq_out_3_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_3_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_3_TUSER),
    .vld_out(regslice_both_iq_out_3_V_user_V_U_vld_out),
    .ack_out(iq_out_3_TREADY),
    .apdone_blk(regslice_both_iq_out_3_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_3_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_3_reg_1530),
    .vld_in(iq_out_3_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_3_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_3_TLAST),
    .vld_out(regslice_both_iq_out_3_V_last_V_U_vld_out),
    .ack_out(iq_out_3_TREADY),
    .apdone_blk(regslice_both_iq_out_3_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_4_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_q0),
    .vld_in(iq_out_4_TVALID_int_regslice),
    .ack_in(iq_out_4_TREADY_int_regslice),
    .data_out(iq_out_4_TDATA),
    .vld_out(regslice_both_iq_out_4_V_data_V_U_vld_out),
    .ack_out(iq_out_4_TREADY),
    .apdone_blk(regslice_both_iq_out_4_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_4_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_4_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_4_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_4_TKEEP),
    .vld_out(regslice_both_iq_out_4_V_keep_V_U_vld_out),
    .ack_out(iq_out_4_TREADY),
    .apdone_blk(regslice_both_iq_out_4_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_4_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_4_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_4_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_4_TSTRB),
    .vld_out(regslice_both_iq_out_4_V_strb_V_U_vld_out),
    .ack_out(iq_out_4_TREADY),
    .apdone_blk(regslice_both_iq_out_4_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_4_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd4),
    .vld_in(iq_out_4_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_4_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_4_TUSER),
    .vld_out(regslice_both_iq_out_4_V_user_V_U_vld_out),
    .ack_out(iq_out_4_TREADY),
    .apdone_blk(regslice_both_iq_out_4_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_4_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_4_reg_1547),
    .vld_in(iq_out_4_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_4_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_4_TLAST),
    .vld_out(regslice_both_iq_out_4_V_last_V_U_vld_out),
    .ack_out(iq_out_4_TREADY),
    .apdone_blk(regslice_both_iq_out_4_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_5_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_q0),
    .vld_in(iq_out_5_TVALID_int_regslice),
    .ack_in(iq_out_5_TREADY_int_regslice),
    .data_out(iq_out_5_TDATA),
    .vld_out(regslice_both_iq_out_5_V_data_V_U_vld_out),
    .ack_out(iq_out_5_TREADY),
    .apdone_blk(regslice_both_iq_out_5_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_5_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_5_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_5_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_5_TKEEP),
    .vld_out(regslice_both_iq_out_5_V_keep_V_U_vld_out),
    .ack_out(iq_out_5_TREADY),
    .apdone_blk(regslice_both_iq_out_5_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_5_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_5_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_5_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_5_TSTRB),
    .vld_out(regslice_both_iq_out_5_V_strb_V_U_vld_out),
    .ack_out(iq_out_5_TREADY),
    .apdone_blk(regslice_both_iq_out_5_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_5_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd5),
    .vld_in(iq_out_5_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_5_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_5_TUSER),
    .vld_out(regslice_both_iq_out_5_V_user_V_U_vld_out),
    .ack_out(iq_out_5_TREADY),
    .apdone_blk(regslice_both_iq_out_5_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_5_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_5_reg_1564),
    .vld_in(iq_out_5_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_5_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_5_TLAST),
    .vld_out(regslice_both_iq_out_5_V_last_V_U_vld_out),
    .ack_out(iq_out_5_TREADY),
    .apdone_blk(regslice_both_iq_out_5_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_6_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_q0),
    .vld_in(iq_out_6_TVALID_int_regslice),
    .ack_in(iq_out_6_TREADY_int_regslice),
    .data_out(iq_out_6_TDATA),
    .vld_out(regslice_both_iq_out_6_V_data_V_U_vld_out),
    .ack_out(iq_out_6_TREADY),
    .apdone_blk(regslice_both_iq_out_6_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_6_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_6_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_6_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_6_TKEEP),
    .vld_out(regslice_both_iq_out_6_V_keep_V_U_vld_out),
    .ack_out(iq_out_6_TREADY),
    .apdone_blk(regslice_both_iq_out_6_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_6_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_6_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_6_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_6_TSTRB),
    .vld_out(regslice_both_iq_out_6_V_strb_V_U_vld_out),
    .ack_out(iq_out_6_TREADY),
    .apdone_blk(regslice_both_iq_out_6_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_6_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd6),
    .vld_in(iq_out_6_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_6_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_6_TUSER),
    .vld_out(regslice_both_iq_out_6_V_user_V_U_vld_out),
    .ack_out(iq_out_6_TREADY),
    .apdone_blk(regslice_both_iq_out_6_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_6_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_6_reg_1581),
    .vld_in(iq_out_6_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_6_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_6_TLAST),
    .vld_out(regslice_both_iq_out_6_V_last_V_U_vld_out),
    .ack_out(iq_out_6_TREADY),
    .apdone_blk(regslice_both_iq_out_6_V_last_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 32 ))
regslice_both_iq_out_7_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_q0),
    .vld_in(iq_out_7_TVALID_int_regslice),
    .ack_in(iq_out_7_TREADY_int_regslice),
    .data_out(iq_out_7_TDATA),
    .vld_out(regslice_both_iq_out_7_V_data_V_U_vld_out),
    .ack_out(iq_out_7_TREADY),
    .apdone_blk(regslice_both_iq_out_7_V_data_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_7_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_7_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_7_V_keep_V_U_ack_in_dummy),
    .data_out(iq_out_7_TKEEP),
    .vld_out(regslice_both_iq_out_7_V_keep_V_U_vld_out),
    .ack_out(iq_out_7_TREADY),
    .apdone_blk(regslice_both_iq_out_7_V_keep_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 4 ))
regslice_both_iq_out_7_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(iq_out_7_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_7_V_strb_V_U_ack_in_dummy),
    .data_out(iq_out_7_TSTRB),
    .vld_out(regslice_both_iq_out_7_V_strb_V_U_vld_out),
    .ack_out(iq_out_7_TREADY),
    .apdone_blk(regslice_both_iq_out_7_V_strb_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_iq_out_7_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(3'd7),
    .vld_in(iq_out_7_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_7_V_user_V_U_ack_in_dummy),
    .data_out(iq_out_7_TUSER),
    .vld_out(regslice_both_iq_out_7_V_user_V_U_vld_out),
    .ack_out(iq_out_7_TREADY),
    .apdone_blk(regslice_both_iq_out_7_V_user_V_U_apdone_blk)
);

postage_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_iq_out_7_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_7_reg_1598),
    .vld_in(iq_out_7_TVALID_int_regslice),
    .ack_in(regslice_both_iq_out_7_V_last_V_U_ack_in_dummy),
    .data_out(iq_out_7_TLAST),
    .vld_out(regslice_both_iq_out_7_V_last_V_U_vld_out),
    .ack_out(iq_out_7_TREADY),
    .apdone_blk(regslice_both_iq_out_7_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1108)) begin
        if (((p_Result_2_fu_860_p2 == 1'd0) & (icmp_ln94_2_fu_834_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture <= 8'd127;
        end else if ((icmp_ln94_2_fu_834_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture <= nexttocap_2_fu_822_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1098)) begin
        if (((p_Result_1_fu_802_p2 == 1'd0) & (icmp_ln94_1_fu_776_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 <= 8'd127;
        end else if ((icmp_ln94_1_fu_776_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 <= nexttocap_1_fu_764_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1158)) begin
        if (((p_Result_7_fu_1150_p2 == 1'd0) & (icmp_ln94_7_fu_1124_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 <= 8'd127;
        end else if ((icmp_ln94_7_fu_1124_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 <= nexttocap_7_fu_1112_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1148)) begin
        if (((p_Result_6_fu_1092_p2 == 1'd0) & (icmp_ln94_6_fu_1066_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 <= 8'd127;
        end else if ((icmp_ln94_6_fu_1066_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 <= nexttocap_6_fu_1054_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1138)) begin
        if (((p_Result_5_fu_1034_p2 == 1'd0) & (icmp_ln94_5_fu_1008_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 <= 8'd127;
        end else if ((icmp_ln94_5_fu_1008_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 <= nexttocap_5_fu_996_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1128)) begin
        if (((p_Result_4_fu_976_p2 == 1'd0) & (icmp_ln94_4_fu_950_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 <= 8'd127;
        end else if ((icmp_ln94_4_fu_950_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 <= nexttocap_4_fu_938_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1118)) begin
        if (((p_Result_3_fu_918_p2 == 1'd0) & (icmp_ln94_3_fu_892_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 <= 8'd127;
        end else if ((icmp_ln94_3_fu_892_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 <= nexttocap_3_fu_880_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1088)) begin
        if (((p_Result_s_fu_744_p2 == 1'd0) & (icmp_ln94_fu_718_p2 == 1'd1))) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 <= 8'd127;
        end else if ((icmp_ln94_fu_718_p2 == 1'd0)) begin
            postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 <= nexttocap_fu_706_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gid_V_1_reg_1403 <= {{monitor_1[10:2]}};
        gid_V_2_reg_1414 <= {{monitor_2[10:2]}};
        gid_V_3_reg_1425 <= {{monitor_3[10:2]}};
        gid_V_4_reg_1436 <= {{monitor_4[10:2]}};
        gid_V_5_reg_1447 <= {{monitor_5[10:2]}};
        gid_V_6_reg_1458 <= {{monitor_6[10:2]}};
        gid_V_7_reg_1469 <= {{monitor_7[10:2]}};
        gid_V_reg_1392 <= {{monitor_0[10:2]}};
        group_V_reg_1314 <= group_V_fu_538_p1;
        icmp_ln1065_1_reg_1491 <= icmp_ln1065_1_fu_756_p2;
        icmp_ln1065_2_reg_1508 <= icmp_ln1065_2_fu_814_p2;
        icmp_ln1065_3_reg_1525 <= icmp_ln1065_3_fu_872_p2;
        icmp_ln1065_4_reg_1542 <= icmp_ln1065_4_fu_930_p2;
        icmp_ln1065_5_reg_1559 <= icmp_ln1065_5_fu_988_p2;
        icmp_ln1065_6_reg_1576 <= icmp_ln1065_6_fu_1046_p2;
        icmp_ln1065_7_reg_1593 <= icmp_ln1065_7_fu_1104_p2;
        icmp_ln1065_reg_1474 <= icmp_ln1065_fu_698_p2;
        lane_V_1_reg_1397 <= lane_V_1_fu_600_p1;
        lane_V_1_reg_1397_pp0_iter1_reg <= lane_V_1_reg_1397;
        lane_V_2_reg_1408 <= lane_V_2_fu_614_p1;
        lane_V_2_reg_1408_pp0_iter1_reg <= lane_V_2_reg_1408;
        lane_V_3_reg_1419 <= lane_V_3_fu_628_p1;
        lane_V_3_reg_1419_pp0_iter1_reg <= lane_V_3_reg_1419;
        lane_V_4_reg_1430 <= lane_V_4_fu_642_p1;
        lane_V_4_reg_1430_pp0_iter1_reg <= lane_V_4_reg_1430;
        lane_V_5_reg_1441 <= lane_V_5_fu_656_p1;
        lane_V_5_reg_1441_pp0_iter1_reg <= lane_V_5_reg_1441;
        lane_V_6_reg_1452 <= lane_V_6_fu_670_p1;
        lane_V_6_reg_1452_pp0_iter1_reg <= lane_V_6_reg_1452;
        lane_V_7_reg_1463 <= lane_V_7_fu_684_p1;
        lane_V_7_reg_1463_pp0_iter1_reg <= lane_V_7_reg_1463;
        lane_V_reg_1386 <= lane_V_fu_586_p1;
        lane_V_reg_1386_pp0_iter1_reg <= lane_V_reg_1386;
        tmp_last_V_1_reg_1496 <= tmp_last_V_1_fu_770_p2;
        tmp_last_V_2_reg_1513 <= tmp_last_V_2_fu_828_p2;
        tmp_last_V_3_reg_1530 <= tmp_last_V_3_fu_886_p2;
        tmp_last_V_4_reg_1547 <= tmp_last_V_4_fu_944_p2;
        tmp_last_V_5_reg_1564 <= tmp_last_V_5_fu_1002_p2;
        tmp_last_V_6_reg_1581 <= tmp_last_V_6_fu_1060_p2;
        tmp_last_V_7_reg_1598 <= tmp_last_V_7_fu_1118_p2;
        tmp_last_V_reg_1479 <= tmp_last_V_fu_712_p2;
        trigger_V_reg_1326 <= {{instream_TUSER_int_regslice[12:9]}};
        x_1_reg_1350 <= {{iniq_TDATA_int_regslice[63:32]}};
        x_1_reg_1350_pp0_iter1_reg <= x_1_reg_1350;
        x_2_reg_1362 <= {{iniq_TDATA_int_regslice[95:64]}};
        x_2_reg_1362_pp0_iter1_reg <= x_2_reg_1362;
        x_3_reg_1374 <= {{iniq_TDATA_int_regslice[127:96]}};
        x_3_reg_1374_pp0_iter1_reg <= x_3_reg_1374;
        x_reg_1338 <= x_fu_552_p1;
        x_reg_1338_pp0_iter1_reg <= x_reg_1338;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1065_1_reg_1491_pp0_iter2_reg <= icmp_ln1065_1_reg_1491;
        icmp_ln1065_2_reg_1508_pp0_iter2_reg <= icmp_ln1065_2_reg_1508;
        icmp_ln1065_3_reg_1525_pp0_iter2_reg <= icmp_ln1065_3_reg_1525;
        icmp_ln1065_4_reg_1542_pp0_iter2_reg <= icmp_ln1065_4_reg_1542;
        icmp_ln1065_5_reg_1559_pp0_iter2_reg <= icmp_ln1065_5_reg_1559;
        icmp_ln1065_6_reg_1576_pp0_iter2_reg <= icmp_ln1065_6_reg_1576;
        icmp_ln1065_7_reg_1593_pp0_iter2_reg <= icmp_ln1065_7_reg_1593;
        icmp_ln1065_reg_1474_pp0_iter2_reg <= icmp_ln1065_reg_1474;
        icmp_ln94_1_reg_1501_pp0_iter2_reg <= icmp_ln94_1_reg_1501;
        icmp_ln94_2_reg_1518_pp0_iter2_reg <= icmp_ln94_2_reg_1518;
        icmp_ln94_3_reg_1535_pp0_iter2_reg <= icmp_ln94_3_reg_1535;
        icmp_ln94_4_reg_1552_pp0_iter2_reg <= icmp_ln94_4_reg_1552;
        icmp_ln94_5_reg_1569_pp0_iter2_reg <= icmp_ln94_5_reg_1569;
        icmp_ln94_6_reg_1586_pp0_iter2_reg <= icmp_ln94_6_reg_1586;
        icmp_ln94_7_reg_1603_pp0_iter2_reg <= icmp_ln94_7_reg_1603;
        icmp_ln94_reg_1484_pp0_iter2_reg <= icmp_ln94_reg_1484;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_1_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_1_reg_1501 <= icmp_ln94_1_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_2_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_2_reg_1518 <= icmp_ln94_2_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_3_fu_872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_3_reg_1535 <= icmp_ln94_3_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_4_fu_930_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_4_reg_1552 <= icmp_ln94_4_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_5_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_5_reg_1569 <= icmp_ln94_5_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_6_fu_1046_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_6_reg_1586 <= icmp_ln94_6_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_7_fu_1104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_7_reg_1603 <= icmp_ln94_7_fu_1124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_fu_698_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln94_reg_1484 <= icmp_ln94_fu_718_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        iniq_TDATA_blk_n = iniq_TVALID_int_regslice;
    end else begin
        iniq_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        iniq_TREADY_int_regslice = 1'b1;
    end else begin
        iniq_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        instream_TDATA_blk_n = instream_TVALID_int_regslice;
    end else begin
        instream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        instream_TREADY_int_regslice = 1'b1;
    end else begin
        instream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_reg_1484_pp0_iter2_reg == 1'd0) & (icmp_ln1065_reg_1474_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_reg_1484 == 1'd0) & (icmp_ln1065_reg_1474 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_0_TDATA_blk_n = iq_out_0_TREADY_int_regslice;
    end else begin
        iq_out_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op263_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_0_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_1_reg_1501_pp0_iter2_reg == 1'd0) & (icmp_ln1065_1_reg_1491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_1_reg_1501 == 1'd0) & (icmp_ln1065_1_reg_1491 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_1_TDATA_blk_n = iq_out_1_TREADY_int_regslice;
    end else begin
        iq_out_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op266_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_1_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_1_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_2_reg_1518_pp0_iter2_reg == 1'd0) & (icmp_ln1065_2_reg_1508_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_2_reg_1518 == 1'd0) & (icmp_ln1065_2_reg_1508 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_2_TDATA_blk_n = iq_out_2_TREADY_int_regslice;
    end else begin
        iq_out_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op269_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_2_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_2_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_3_reg_1535_pp0_iter2_reg == 1'd0) & (icmp_ln1065_3_reg_1525_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_3_reg_1535 == 1'd0) & (icmp_ln1065_3_reg_1525 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_3_TDATA_blk_n = iq_out_3_TREADY_int_regslice;
    end else begin
        iq_out_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op272_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_3_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_3_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_4_reg_1552_pp0_iter2_reg == 1'd0) & (icmp_ln1065_4_reg_1542_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_4_reg_1552 == 1'd0) & (icmp_ln1065_4_reg_1542 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_4_TDATA_blk_n = iq_out_4_TREADY_int_regslice;
    end else begin
        iq_out_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op275_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_4_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_4_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_5_reg_1569_pp0_iter2_reg == 1'd0) & (icmp_ln1065_5_reg_1559_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_5_reg_1569 == 1'd0) & (icmp_ln1065_5_reg_1559 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_5_TDATA_blk_n = iq_out_5_TREADY_int_regslice;
    end else begin
        iq_out_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op278_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_5_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_5_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_6_reg_1586_pp0_iter2_reg == 1'd0) & (icmp_ln1065_6_reg_1576_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_6_reg_1586 == 1'd0) & (icmp_ln1065_6_reg_1576 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_6_TDATA_blk_n = iq_out_6_TREADY_int_regslice;
    end else begin
        iq_out_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op281_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_6_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_6_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln94_7_reg_1603_pp0_iter2_reg == 1'd0) & (icmp_ln1065_7_reg_1593_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln94_7_reg_1603 == 1'd0) & (icmp_ln1065_7_reg_1593 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        iq_out_7_TDATA_blk_n = iq_out_7_TREADY_int_regslice;
    end else begin
        iq_out_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op284_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iq_out_7_TVALID_int_regslice = 1'b1;
    end else begin
        iq_out_7_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0 = icmp_ln1065_6_reg_1576;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0 = icmp_ln1065_6_reg_1576;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0 = icmp_ln1065_5_reg_1559;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0 = icmp_ln1065_5_reg_1559;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0 = icmp_ln1065_4_reg_1542;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0 = icmp_ln1065_4_reg_1542;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0 = icmp_ln1065_3_reg_1525;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0 = icmp_ln1065_3_reg_1525;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0 = icmp_ln1065_2_reg_1508;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0 = icmp_ln1065_2_reg_1508;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0 = icmp_ln1065_1_reg_1491;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0 = icmp_ln1065_1_reg_1491;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0 = icmp_ln1065_reg_1474;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0 = icmp_ln1065_reg_1474;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0 = icmp_ln1065_7_reg_1593;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0 = icmp_ln1065_7_reg_1593;
    end else begin
        postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln825_1_fu_797_p2 = (trigger_V_reg_1326 & shl_ln825_1_fu_791_p2);

assign and_ln825_2_fu_855_p2 = (trigger_V_reg_1326 & shl_ln825_2_fu_849_p2);

assign and_ln825_3_fu_913_p2 = (trigger_V_reg_1326 & shl_ln825_3_fu_907_p2);

assign and_ln825_4_fu_971_p2 = (trigger_V_reg_1326 & shl_ln825_4_fu_965_p2);

assign and_ln825_5_fu_1029_p2 = (trigger_V_reg_1326 & shl_ln825_5_fu_1023_p2);

assign and_ln825_6_fu_1087_p2 = (trigger_V_reg_1326 & shl_ln825_6_fu_1081_p2);

assign and_ln825_7_fu_1145_p2 = (trigger_V_reg_1326 & shl_ln825_7_fu_1139_p2);

assign and_ln825_fu_739_p2 = (trigger_V_reg_1326 & shl_ln825_fu_733_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_iq_out_7_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_6_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_5_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_4_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_0_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op299_write_state4 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op297_write_state4 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op295_write_state4 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op293_write_state4 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op291_write_state4 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op289_write_state4 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op287_write_state4 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op285_write_state4 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op284_write_state3 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op281_write_state3 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op278_write_state3 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op275_write_state3 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op272_write_state3 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op269_write_state3 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op266_write_state3 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op263_write_state3 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & ((iniq_TVALID_int_regslice == 1'b0) | (instream_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_iq_out_7_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_6_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_5_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_4_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_0_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op299_write_state4 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op297_write_state4 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op295_write_state4 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op293_write_state4 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op291_write_state4 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op289_write_state4 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op287_write_state4 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op285_write_state4 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op284_write_state3 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op281_write_state3 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op278_write_state3 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op275_write_state3 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op272_write_state3 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op269_write_state3 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op266_write_state3 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op263_write_state3 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & ((iniq_TVALID_int_regslice == 1'b0) | (instream_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_iq_out_7_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_6_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_5_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_4_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_0_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op299_write_state4 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op297_write_state4 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op295_write_state4 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op293_write_state4 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op291_write_state4 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op289_write_state4 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op287_write_state4 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op285_write_state4 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op284_write_state3 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op281_write_state3 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op278_write_state3 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op275_write_state3 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op272_write_state3 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op269_write_state3 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op266_write_state3 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op263_write_state3 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & ((iniq_TVALID_int_regslice == 1'b0) | (instream_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((iniq_TVALID_int_regslice == 1'b0) | (instream_TVALID_int_regslice == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op284_write_state3 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op281_write_state3 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op278_write_state3 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op275_write_state3 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op272_write_state3 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op269_write_state3 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op266_write_state3 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op263_write_state3 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op284_write_state3 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op281_write_state3 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op278_write_state3 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op275_write_state3 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op272_write_state3 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op269_write_state3 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op266_write_state3 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op263_write_state3 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = (((ap_predicate_op299_write_state4 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op297_write_state4 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op295_write_state4 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op293_write_state4 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op291_write_state4 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op289_write_state4 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op287_write_state4 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op285_write_state4 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_iq_out_7_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_6_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_5_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_4_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_3_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_iq_out_0_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op299_write_state4 == 1'b1) & (iq_out_7_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op297_write_state4 == 1'b1) & (iq_out_6_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op295_write_state4 == 1'b1) & (iq_out_5_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op293_write_state4 == 1'b1) & (iq_out_4_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op291_write_state4 == 1'b1) & (iq_out_3_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op289_write_state4 == 1'b1) & (iq_out_2_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op287_write_state4 == 1'b1) & (iq_out_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op285_write_state4 == 1'b1) & (iq_out_0_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_1088 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_fu_698_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1098 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_1_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1108 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_2_fu_814_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1118 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_3_fu_872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1128 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_4_fu_930_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1138 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_5_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1148 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_6_fu_1046_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1158 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1065_7_fu_1104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op263_write_state3 = ((icmp_ln94_reg_1484 == 1'd0) & (icmp_ln1065_reg_1474 == 1'd1));
end

always @ (*) begin
    ap_predicate_op266_write_state3 = ((icmp_ln94_1_reg_1501 == 1'd0) & (icmp_ln1065_1_reg_1491 == 1'd1));
end

always @ (*) begin
    ap_predicate_op269_write_state3 = ((icmp_ln94_2_reg_1518 == 1'd0) & (icmp_ln1065_2_reg_1508 == 1'd1));
end

always @ (*) begin
    ap_predicate_op272_write_state3 = ((icmp_ln94_3_reg_1535 == 1'd0) & (icmp_ln1065_3_reg_1525 == 1'd1));
end

always @ (*) begin
    ap_predicate_op275_write_state3 = ((icmp_ln94_4_reg_1552 == 1'd0) & (icmp_ln1065_4_reg_1542 == 1'd1));
end

always @ (*) begin
    ap_predicate_op278_write_state3 = ((icmp_ln94_5_reg_1569 == 1'd0) & (icmp_ln1065_5_reg_1559 == 1'd1));
end

always @ (*) begin
    ap_predicate_op281_write_state3 = ((icmp_ln94_6_reg_1586 == 1'd0) & (icmp_ln1065_6_reg_1576 == 1'd1));
end

always @ (*) begin
    ap_predicate_op284_write_state3 = ((icmp_ln94_7_reg_1603 == 1'd0) & (icmp_ln1065_7_reg_1593 == 1'd1));
end

always @ (*) begin
    ap_predicate_op285_write_state4 = ((icmp_ln94_reg_1484_pp0_iter2_reg == 1'd0) & (icmp_ln1065_reg_1474_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op287_write_state4 = ((icmp_ln94_1_reg_1501_pp0_iter2_reg == 1'd0) & (icmp_ln1065_1_reg_1491_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op289_write_state4 = ((icmp_ln94_2_reg_1518_pp0_iter2_reg == 1'd0) & (icmp_ln1065_2_reg_1508_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op291_write_state4 = ((icmp_ln94_3_reg_1535_pp0_iter2_reg == 1'd0) & (icmp_ln1065_3_reg_1525_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op293_write_state4 = ((icmp_ln94_4_reg_1552_pp0_iter2_reg == 1'd0) & (icmp_ln1065_4_reg_1542_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op295_write_state4 = ((icmp_ln94_5_reg_1569_pp0_iter2_reg == 1'd0) & (icmp_ln1065_5_reg_1559_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op297_write_state4 = ((icmp_ln94_6_reg_1586_pp0_iter2_reg == 1'd0) & (icmp_ln1065_6_reg_1576_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op299_write_state4 = ((icmp_ln94_7_reg_1603_pp0_iter2_reg == 1'd0) & (icmp_ln1065_7_reg_1593_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign group_V_fu_538_p1 = instream_TUSER_int_regslice[8:0];

assign icmp_ln1065_1_fu_756_p2 = ((gid_V_1_reg_1403 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_2_fu_814_p2 = ((gid_V_2_reg_1414 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_3_fu_872_p2 = ((gid_V_3_reg_1425 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_4_fu_930_p2 = ((gid_V_4_reg_1436 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_5_fu_988_p2 = ((gid_V_5_reg_1447 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_6_fu_1046_p2 = ((gid_V_6_reg_1458 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_7_fu_1104_p2 = ((gid_V_7_reg_1469 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_698_p2 = ((gid_V_reg_1392 == group_V_reg_1314) ? 1'b1 : 1'b0);

assign icmp_ln94_1_fu_776_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_2_fu_834_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_3_fu_892_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_4_fu_950_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_5_fu_1008_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_6_fu_1066_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_7_fu_1124_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_718_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 == 8'd0) ? 1'b1 : 1'b0);

assign iniq_TREADY = regslice_both_iniq_V_data_V_U_ack_in;

assign instream_TREADY = regslice_both_instream_V_data_V_U_ack_in;

assign iq_out_0_TVALID = regslice_both_iq_out_0_V_data_V_U_vld_out;

assign iq_out_1_TVALID = regslice_both_iq_out_1_V_data_V_U_vld_out;

assign iq_out_2_TVALID = regslice_both_iq_out_2_V_data_V_U_vld_out;

assign iq_out_3_TVALID = regslice_both_iq_out_3_V_data_V_U_vld_out;

assign iq_out_4_TVALID = regslice_both_iq_out_4_V_data_V_U_vld_out;

assign iq_out_5_TVALID = regslice_both_iq_out_5_V_data_V_U_vld_out;

assign iq_out_6_TVALID = regslice_both_iq_out_6_V_data_V_U_vld_out;

assign iq_out_7_TVALID = regslice_both_iq_out_7_V_data_V_U_vld_out;

assign lane_V_1_fu_600_p1 = monitor_1[1:0];

assign lane_V_2_fu_614_p1 = monitor_2[1:0];

assign lane_V_3_fu_628_p1 = monitor_3[1:0];

assign lane_V_4_fu_642_p1 = monitor_4[1:0];

assign lane_V_5_fu_656_p1 = monitor_5[1:0];

assign lane_V_6_fu_670_p1 = monitor_6[1:0];

assign lane_V_7_fu_684_p1 = monitor_7[1:0];

assign lane_V_fu_586_p1 = monitor_0[1:0];

assign nexttocap_1_fu_764_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1) + $signed(8'd255));

assign nexttocap_2_fu_822_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture) + $signed(8'd255));

assign nexttocap_3_fu_880_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6) + $signed(8'd255));

assign nexttocap_4_fu_938_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5) + $signed(8'd255));

assign nexttocap_5_fu_996_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4) + $signed(8'd255));

assign nexttocap_6_fu_1054_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3) + $signed(8'd255));

assign nexttocap_7_fu_1112_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2) + $signed(8'd255));

assign nexttocap_fu_706_p2 = ($signed(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7) + $signed(8'd255));

assign p_Result_1_fu_802_p2 = ((and_ln825_1_fu_797_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_2_fu_860_p2 = ((and_ln825_2_fu_855_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_3_fu_918_p2 = ((and_ln825_3_fu_913_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_4_fu_976_p2 = ((and_ln825_4_fu_971_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_5_fu_1034_p2 = ((and_ln825_5_fu_1029_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_6_fu_1092_p2 = ((and_ln825_6_fu_1087_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_7_fu_1150_p2 = ((and_ln825_7_fu_1145_p2 == 4'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_744_p2 = ((and_ln825_fu_739_p2 == 4'd0) ? 1'b1 : 1'b0);

assign shl_ln825_1_fu_791_p2 = 4'd1 << zext_ln825_1_fu_788_p1;

assign shl_ln825_2_fu_849_p2 = 4'd1 << zext_ln825_2_fu_846_p1;

assign shl_ln825_3_fu_907_p2 = 4'd1 << zext_ln825_3_fu_904_p1;

assign shl_ln825_4_fu_965_p2 = 4'd1 << zext_ln825_4_fu_962_p1;

assign shl_ln825_5_fu_1023_p2 = 4'd1 << zext_ln825_5_fu_1020_p1;

assign shl_ln825_6_fu_1081_p2 = 4'd1 << zext_ln825_6_fu_1078_p1;

assign shl_ln825_7_fu_1139_p2 = 4'd1 << zext_ln825_7_fu_1136_p1;

assign shl_ln825_fu_733_p2 = 4'd1 << zext_ln825_fu_730_p1;

assign tmp_last_V_1_fu_770_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_2_fu_828_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_3_fu_886_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_4_fu_944_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_5_fu_1002_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_6_fu_1060_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_7_fu_1118_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_last_V_fu_712_p2 = ((postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 == 8'd1) ? 1'b1 : 1'b0);

assign x_fu_552_p1 = iniq_TDATA_int_regslice[31:0];

assign zext_ln825_1_fu_788_p1 = lane_V_1_reg_1397;

assign zext_ln825_2_fu_846_p1 = lane_V_2_reg_1408;

assign zext_ln825_3_fu_904_p1 = lane_V_3_reg_1419;

assign zext_ln825_4_fu_962_p1 = lane_V_4_reg_1430;

assign zext_ln825_5_fu_1020_p1 = lane_V_5_reg_1441;

assign zext_ln825_6_fu_1078_p1 = lane_V_6_reg_1452;

assign zext_ln825_7_fu_1136_p1 = lane_V_7_reg_1463;

assign zext_ln825_fu_730_p1 = lane_V_reg_1386;


reg find_kernel_block = 0;
// synthesis translate_off
`include "postage_filter_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //postage_filter

