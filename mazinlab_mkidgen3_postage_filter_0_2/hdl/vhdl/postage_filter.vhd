-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity postage_filter is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    instream_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    instream_TVALID : IN STD_LOGIC;
    instream_TREADY : OUT STD_LOGIC;
    instream_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    instream_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    instream_TUSER : IN STD_LOGIC_VECTOR (12 downto 0);
    instream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    iniq_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    iniq_TVALID : IN STD_LOGIC;
    iniq_TREADY : OUT STD_LOGIC;
    iniq_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    iniq_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    iniq_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    iq_out_0_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_0_TVALID : OUT STD_LOGIC;
    iq_out_0_TREADY : IN STD_LOGIC;
    iq_out_0_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_0_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_0_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_0_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_1_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_1_TVALID : OUT STD_LOGIC;
    iq_out_1_TREADY : IN STD_LOGIC;
    iq_out_1_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_1_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_1_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_1_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_2_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_2_TVALID : OUT STD_LOGIC;
    iq_out_2_TREADY : IN STD_LOGIC;
    iq_out_2_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_2_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_2_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_2_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_3_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_3_TVALID : OUT STD_LOGIC;
    iq_out_3_TREADY : IN STD_LOGIC;
    iq_out_3_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_3_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_3_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_3_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_4_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_4_TVALID : OUT STD_LOGIC;
    iq_out_4_TREADY : IN STD_LOGIC;
    iq_out_4_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_4_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_4_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_4_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_5_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_5_TVALID : OUT STD_LOGIC;
    iq_out_5_TREADY : IN STD_LOGIC;
    iq_out_5_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_5_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_5_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_5_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_6_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_6_TVALID : OUT STD_LOGIC;
    iq_out_6_TREADY : IN STD_LOGIC;
    iq_out_6_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_6_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_6_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_6_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    iq_out_7_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_out_7_TVALID : OUT STD_LOGIC;
    iq_out_7_TREADY : IN STD_LOGIC;
    iq_out_7_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_7_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    iq_out_7_TUSER : OUT STD_LOGIC_VECTOR (2 downto 0);
    iq_out_7_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of postage_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "postage_filter_postage_filter,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.307625,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1167,HLS_SYN_LUT=1576,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal monitor_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal monitor_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0 : STD_LOGIC;
    signal postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal instream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal iniq_TDATA_blk_n : STD_LOGIC;
    signal iq_out_0_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln1065_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_1484 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln1065_reg_1474_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_1484_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_1_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_1_reg_1491 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_1_reg_1501 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_reg_1491_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_1_reg_1501_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_2_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_2_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_2_reg_1518 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_reg_1508_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_2_reg_1518_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_3_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_3_reg_1525 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_3_reg_1535 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_reg_1525_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_3_reg_1535_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_4_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_4_reg_1542 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_4_reg_1552 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_reg_1542_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_4_reg_1552_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_5_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_5_reg_1559 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_5_reg_1569 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_reg_1559_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_5_reg_1569_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_6_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_6_reg_1576 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_6_reg_1586 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_reg_1576_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_6_reg_1586_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iq_out_7_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln1065_7_reg_1593 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_7_reg_1603 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_1593_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_7_reg_1603_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal group_V_fu_538_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal group_V_reg_1314 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op263_write_state3 : BOOLEAN;
    signal ap_predicate_op266_write_state3 : BOOLEAN;
    signal ap_predicate_op269_write_state3 : BOOLEAN;
    signal ap_predicate_op272_write_state3 : BOOLEAN;
    signal ap_predicate_op275_write_state3 : BOOLEAN;
    signal ap_predicate_op278_write_state3 : BOOLEAN;
    signal ap_predicate_op281_write_state3 : BOOLEAN;
    signal ap_predicate_op284_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_predicate_op285_write_state4 : BOOLEAN;
    signal ap_predicate_op287_write_state4 : BOOLEAN;
    signal ap_predicate_op289_write_state4 : BOOLEAN;
    signal ap_predicate_op291_write_state4 : BOOLEAN;
    signal ap_predicate_op293_write_state4 : BOOLEAN;
    signal ap_predicate_op295_write_state4 : BOOLEAN;
    signal ap_predicate_op297_write_state4 : BOOLEAN;
    signal ap_predicate_op299_write_state4 : BOOLEAN;
    signal regslice_both_iq_out_0_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_1_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_2_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_3_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_4_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_5_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_6_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_7_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trigger_V_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_fu_552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1338 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1338_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_reg_1350 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_reg_1350_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_1362 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_1362_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_3_reg_1374 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_3_reg_1374_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_V_fu_586_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_reg_1386 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_reg_1386_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_reg_1392 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_1_fu_600_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_1_reg_1397 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_1_reg_1397_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_1_reg_1403 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_2_fu_614_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_2_reg_1408 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_2_reg_1408_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_2_reg_1414 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_3_fu_628_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_3_reg_1419 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_3_reg_1419_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_3_reg_1425 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_4_fu_642_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_4_reg_1430 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_4_reg_1430_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_4_reg_1436 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_5_fu_656_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_5_reg_1441 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_5_reg_1441_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_5_reg_1447 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_6_fu_670_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_6_reg_1452 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_6_reg_1452_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_6_reg_1458 : STD_LOGIC_VECTOR (8 downto 0);
    signal lane_V_7_fu_684_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_7_reg_1463 : STD_LOGIC_VECTOR (1 downto 0);
    signal lane_V_7_reg_1463_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal gid_V_7_reg_1469 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1065_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1479 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_1_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_1513 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_2_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_3_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_3_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_3_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_4_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_4_reg_1547 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_4_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_5_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_5_reg_1564 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_5_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_6_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_6_reg_1581 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_6_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_7_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_7_reg_1598 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_7_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal nexttocap_fu_706_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_1_fu_764_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_2_fu_822_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_3_fu_880_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_4_fu_938_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_5_fu_996_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_6_fu_1054_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nexttocap_7_fu_1112_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal DataIn_assign_fu_1162_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_1_fu_1181_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_2_fu_1200_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_3_fu_1219_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_4_fu_1238_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_5_fu_1257_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_6_fu_1276_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DataIn_assign_7_fu_1295_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln825_fu_730_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_fu_733_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_fu_739_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_1_fu_788_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_1_fu_791_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_1_fu_797_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_2_fu_846_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_2_fu_849_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_2_fu_855_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_3_fu_904_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_3_fu_907_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_3_fu_913_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_4_fu_962_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_4_fu_965_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_4_fu_971_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_5_fu_1020_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_5_fu_1023_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_5_fu_1029_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_6_fu_1078_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_6_fu_1081_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_6_fu_1087_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln825_7_fu_1136_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln825_7_fu_1139_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln825_7_fu_1145_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_instream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal instream_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal instream_TVALID_int_regslice : STD_LOGIC;
    signal instream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_instream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_instream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal instream_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_instream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_instream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_instream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal instream_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_instream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_instream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_instream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal instream_TUSER_int_regslice : STD_LOGIC_VECTOR (12 downto 0);
    signal regslice_both_instream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_instream_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_instream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal instream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_instream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_instream_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_iniq_V_data_V_U_apdone_blk : STD_LOGIC;
    signal iniq_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal iniq_TVALID_int_regslice : STD_LOGIC;
    signal iniq_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iniq_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_iniq_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal iniq_TKEEP_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_iniq_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iniq_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_iniq_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal iniq_TSTRB_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_iniq_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iniq_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_iniq_V_last_V_U_apdone_blk : STD_LOGIC;
    signal iniq_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_iniq_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iniq_V_last_V_U_ack_in : STD_LOGIC;
    signal iq_out_0_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_0_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_0_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_0_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_0_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_0_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_0_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_0_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_0_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_0_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_0_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_0_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_0_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_0_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_1_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_1_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_1_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_1_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_1_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_1_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_1_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_1_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_1_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_1_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_1_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_1_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_1_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_1_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_2_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_2_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_2_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_2_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_2_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_2_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_2_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_2_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_2_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_2_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_2_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_2_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_2_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_2_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_3_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_3_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_3_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_3_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_3_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_3_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_3_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_3_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_3_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_3_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_3_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_3_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_3_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_3_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_4_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_4_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_4_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_4_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_4_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_4_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_4_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_4_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_4_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_4_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_4_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_4_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_4_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_4_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_4_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_5_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_5_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_5_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_5_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_5_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_5_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_5_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_5_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_5_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_5_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_5_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_5_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_5_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_5_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_5_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_6_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_6_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_6_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_6_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_6_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_6_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_6_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_6_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_6_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_6_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_6_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_6_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_6_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_6_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_6_V_last_V_U_vld_out : STD_LOGIC;
    signal iq_out_7_TVALID_int_regslice : STD_LOGIC;
    signal iq_out_7_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq_out_7_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_7_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_7_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_7_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_7_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_7_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_7_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_7_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_7_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_7_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq_out_7_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq_out_7_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq_out_7_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_1108 : BOOLEAN;
    signal ap_condition_1098 : BOOLEAN;
    signal ap_condition_1158 : BOOLEAN;
    signal ap_condition_1148 : BOOLEAN;
    signal ap_condition_1138 : BOOLEAN;
    signal ap_condition_1128 : BOOLEAN;
    signal ap_condition_1118 : BOOLEAN;
    signal ap_condition_1088 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component postage_filter_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component postage_filter_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        monitor_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        monitor_7 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component postage_filter_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0,
        d0 => DataIn_assign_fu_1162_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0,
        d0 => DataIn_assign_1_fu_1181_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0,
        d0 => DataIn_assign_2_fu_1200_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0,
        d0 => DataIn_assign_3_fu_1219_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0,
        d0 => DataIn_assign_4_fu_1238_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0,
        d0 => DataIn_assign_5_fu_1257_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0,
        d0 => DataIn_assign_6_fu_1276_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_q0);

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_U : component postage_filter_postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_SHIFTREG_AUTO_0bkb
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv5_1E,
        ce0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0,
        we0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0,
        d0 => DataIn_assign_7_fu_1295_p6,
        q0 => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_q0);

    control_s_axi_U : component postage_filter_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        monitor_0 => monitor_0,
        monitor_1 => monitor_1,
        monitor_2 => monitor_2,
        monitor_3 => monitor_3,
        monitor_4 => monitor_4,
        monitor_5 => monitor_5,
        monitor_6 => monitor_6,
        monitor_7 => monitor_7);

    mux_42_32_1_1_U1 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_reg_1386_pp0_iter1_reg,
        dout => DataIn_assign_fu_1162_p6);

    mux_42_32_1_1_U2 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_1_reg_1397_pp0_iter1_reg,
        dout => DataIn_assign_1_fu_1181_p6);

    mux_42_32_1_1_U3 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_2_reg_1408_pp0_iter1_reg,
        dout => DataIn_assign_2_fu_1200_p6);

    mux_42_32_1_1_U4 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_3_reg_1419_pp0_iter1_reg,
        dout => DataIn_assign_3_fu_1219_p6);

    mux_42_32_1_1_U5 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_4_reg_1430_pp0_iter1_reg,
        dout => DataIn_assign_4_fu_1238_p6);

    mux_42_32_1_1_U6 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_5_reg_1441_pp0_iter1_reg,
        dout => DataIn_assign_5_fu_1257_p6);

    mux_42_32_1_1_U7 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_6_reg_1452_pp0_iter1_reg,
        dout => DataIn_assign_6_fu_1276_p6);

    mux_42_32_1_1_U8 : component postage_filter_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => x_reg_1338_pp0_iter1_reg,
        din1 => x_1_reg_1350_pp0_iter1_reg,
        din2 => x_2_reg_1362_pp0_iter1_reg,
        din3 => x_3_reg_1374_pp0_iter1_reg,
        din4 => lane_V_7_reg_1463_pp0_iter1_reg,
        dout => DataIn_assign_7_fu_1295_p6);

    regslice_both_instream_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => instream_TDATA,
        vld_in => instream_TVALID,
        ack_in => regslice_both_instream_V_data_V_U_ack_in,
        data_out => instream_TDATA_int_regslice,
        vld_out => instream_TVALID_int_regslice,
        ack_out => instream_TREADY_int_regslice,
        apdone_blk => regslice_both_instream_V_data_V_U_apdone_blk);

    regslice_both_instream_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => instream_TKEEP,
        vld_in => instream_TVALID,
        ack_in => regslice_both_instream_V_keep_V_U_ack_in,
        data_out => instream_TKEEP_int_regslice,
        vld_out => regslice_both_instream_V_keep_V_U_vld_out,
        ack_out => instream_TREADY_int_regslice,
        apdone_blk => regslice_both_instream_V_keep_V_U_apdone_blk);

    regslice_both_instream_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => instream_TSTRB,
        vld_in => instream_TVALID,
        ack_in => regslice_both_instream_V_strb_V_U_ack_in,
        data_out => instream_TSTRB_int_regslice,
        vld_out => regslice_both_instream_V_strb_V_U_vld_out,
        ack_out => instream_TREADY_int_regslice,
        apdone_blk => regslice_both_instream_V_strb_V_U_apdone_blk);

    regslice_both_instream_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 13)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => instream_TUSER,
        vld_in => instream_TVALID,
        ack_in => regslice_both_instream_V_user_V_U_ack_in,
        data_out => instream_TUSER_int_regslice,
        vld_out => regslice_both_instream_V_user_V_U_vld_out,
        ack_out => instream_TREADY_int_regslice,
        apdone_blk => regslice_both_instream_V_user_V_U_apdone_blk);

    regslice_both_instream_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => instream_TLAST,
        vld_in => instream_TVALID,
        ack_in => regslice_both_instream_V_last_V_U_ack_in,
        data_out => instream_TLAST_int_regslice,
        vld_out => regslice_both_instream_V_last_V_U_vld_out,
        ack_out => instream_TREADY_int_regslice,
        apdone_blk => regslice_both_instream_V_last_V_U_apdone_blk);

    regslice_both_iniq_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iniq_TDATA,
        vld_in => iniq_TVALID,
        ack_in => regslice_both_iniq_V_data_V_U_ack_in,
        data_out => iniq_TDATA_int_regslice,
        vld_out => iniq_TVALID_int_regslice,
        ack_out => iniq_TREADY_int_regslice,
        apdone_blk => regslice_both_iniq_V_data_V_U_apdone_blk);

    regslice_both_iniq_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iniq_TKEEP,
        vld_in => iniq_TVALID,
        ack_in => regslice_both_iniq_V_keep_V_U_ack_in,
        data_out => iniq_TKEEP_int_regslice,
        vld_out => regslice_both_iniq_V_keep_V_U_vld_out,
        ack_out => iniq_TREADY_int_regslice,
        apdone_blk => regslice_both_iniq_V_keep_V_U_apdone_blk);

    regslice_both_iniq_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iniq_TSTRB,
        vld_in => iniq_TVALID,
        ack_in => regslice_both_iniq_V_strb_V_U_ack_in,
        data_out => iniq_TSTRB_int_regslice,
        vld_out => regslice_both_iniq_V_strb_V_U_vld_out,
        ack_out => iniq_TREADY_int_regslice,
        apdone_blk => regslice_both_iniq_V_strb_V_U_apdone_blk);

    regslice_both_iniq_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iniq_TLAST,
        vld_in => iniq_TVALID,
        ack_in => regslice_both_iniq_V_last_V_U_ack_in,
        data_out => iniq_TLAST_int_regslice,
        vld_out => regslice_both_iniq_V_last_V_U_vld_out,
        ack_out => iniq_TREADY_int_regslice,
        apdone_blk => regslice_both_iniq_V_last_V_U_apdone_blk);

    regslice_both_iq_out_0_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_q0,
        vld_in => iq_out_0_TVALID_int_regslice,
        ack_in => iq_out_0_TREADY_int_regslice,
        data_out => iq_out_0_TDATA,
        vld_out => regslice_both_iq_out_0_V_data_V_U_vld_out,
        ack_out => iq_out_0_TREADY,
        apdone_blk => regslice_both_iq_out_0_V_data_V_U_apdone_blk);

    regslice_both_iq_out_0_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_0_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_0_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_0_TKEEP,
        vld_out => regslice_both_iq_out_0_V_keep_V_U_vld_out,
        ack_out => iq_out_0_TREADY,
        apdone_blk => regslice_both_iq_out_0_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_0_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_0_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_0_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_0_TSTRB,
        vld_out => regslice_both_iq_out_0_V_strb_V_U_vld_out,
        ack_out => iq_out_0_TREADY,
        apdone_blk => regslice_both_iq_out_0_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_0_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_0,
        vld_in => iq_out_0_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_0_V_user_V_U_ack_in_dummy,
        data_out => iq_out_0_TUSER,
        vld_out => regslice_both_iq_out_0_V_user_V_U_vld_out,
        ack_out => iq_out_0_TREADY,
        apdone_blk => regslice_both_iq_out_0_V_user_V_U_apdone_blk);

    regslice_both_iq_out_0_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_reg_1479,
        vld_in => iq_out_0_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_0_V_last_V_U_ack_in_dummy,
        data_out => iq_out_0_TLAST,
        vld_out => regslice_both_iq_out_0_V_last_V_U_vld_out,
        ack_out => iq_out_0_TREADY,
        apdone_blk => regslice_both_iq_out_0_V_last_V_U_apdone_blk);

    regslice_both_iq_out_1_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_q0,
        vld_in => iq_out_1_TVALID_int_regslice,
        ack_in => iq_out_1_TREADY_int_regslice,
        data_out => iq_out_1_TDATA,
        vld_out => regslice_both_iq_out_1_V_data_V_U_vld_out,
        ack_out => iq_out_1_TREADY,
        apdone_blk => regslice_both_iq_out_1_V_data_V_U_apdone_blk);

    regslice_both_iq_out_1_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_1_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_1_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_1_TKEEP,
        vld_out => regslice_both_iq_out_1_V_keep_V_U_vld_out,
        ack_out => iq_out_1_TREADY,
        apdone_blk => regslice_both_iq_out_1_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_1_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_1_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_1_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_1_TSTRB,
        vld_out => regslice_both_iq_out_1_V_strb_V_U_vld_out,
        ack_out => iq_out_1_TREADY,
        apdone_blk => regslice_both_iq_out_1_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_1_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_1,
        vld_in => iq_out_1_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_1_V_user_V_U_ack_in_dummy,
        data_out => iq_out_1_TUSER,
        vld_out => regslice_both_iq_out_1_V_user_V_U_vld_out,
        ack_out => iq_out_1_TREADY,
        apdone_blk => regslice_both_iq_out_1_V_user_V_U_apdone_blk);

    regslice_both_iq_out_1_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_1_reg_1496,
        vld_in => iq_out_1_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_1_V_last_V_U_ack_in_dummy,
        data_out => iq_out_1_TLAST,
        vld_out => regslice_both_iq_out_1_V_last_V_U_vld_out,
        ack_out => iq_out_1_TREADY,
        apdone_blk => regslice_both_iq_out_1_V_last_V_U_apdone_blk);

    regslice_both_iq_out_2_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_q0,
        vld_in => iq_out_2_TVALID_int_regslice,
        ack_in => iq_out_2_TREADY_int_regslice,
        data_out => iq_out_2_TDATA,
        vld_out => regslice_both_iq_out_2_V_data_V_U_vld_out,
        ack_out => iq_out_2_TREADY,
        apdone_blk => regslice_both_iq_out_2_V_data_V_U_apdone_blk);

    regslice_both_iq_out_2_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_2_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_2_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_2_TKEEP,
        vld_out => regslice_both_iq_out_2_V_keep_V_U_vld_out,
        ack_out => iq_out_2_TREADY,
        apdone_blk => regslice_both_iq_out_2_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_2_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_2_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_2_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_2_TSTRB,
        vld_out => regslice_both_iq_out_2_V_strb_V_U_vld_out,
        ack_out => iq_out_2_TREADY,
        apdone_blk => regslice_both_iq_out_2_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_2_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_2,
        vld_in => iq_out_2_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_2_V_user_V_U_ack_in_dummy,
        data_out => iq_out_2_TUSER,
        vld_out => regslice_both_iq_out_2_V_user_V_U_vld_out,
        ack_out => iq_out_2_TREADY,
        apdone_blk => regslice_both_iq_out_2_V_user_V_U_apdone_blk);

    regslice_both_iq_out_2_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_2_reg_1513,
        vld_in => iq_out_2_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_2_V_last_V_U_ack_in_dummy,
        data_out => iq_out_2_TLAST,
        vld_out => regslice_both_iq_out_2_V_last_V_U_vld_out,
        ack_out => iq_out_2_TREADY,
        apdone_blk => regslice_both_iq_out_2_V_last_V_U_apdone_blk);

    regslice_both_iq_out_3_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_q0,
        vld_in => iq_out_3_TVALID_int_regslice,
        ack_in => iq_out_3_TREADY_int_regslice,
        data_out => iq_out_3_TDATA,
        vld_out => regslice_both_iq_out_3_V_data_V_U_vld_out,
        ack_out => iq_out_3_TREADY,
        apdone_blk => regslice_both_iq_out_3_V_data_V_U_apdone_blk);

    regslice_both_iq_out_3_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_3_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_3_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_3_TKEEP,
        vld_out => regslice_both_iq_out_3_V_keep_V_U_vld_out,
        ack_out => iq_out_3_TREADY,
        apdone_blk => regslice_both_iq_out_3_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_3_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_3_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_3_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_3_TSTRB,
        vld_out => regslice_both_iq_out_3_V_strb_V_U_vld_out,
        ack_out => iq_out_3_TREADY,
        apdone_blk => regslice_both_iq_out_3_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_3_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_3,
        vld_in => iq_out_3_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_3_V_user_V_U_ack_in_dummy,
        data_out => iq_out_3_TUSER,
        vld_out => regslice_both_iq_out_3_V_user_V_U_vld_out,
        ack_out => iq_out_3_TREADY,
        apdone_blk => regslice_both_iq_out_3_V_user_V_U_apdone_blk);

    regslice_both_iq_out_3_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_3_reg_1530,
        vld_in => iq_out_3_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_3_V_last_V_U_ack_in_dummy,
        data_out => iq_out_3_TLAST,
        vld_out => regslice_both_iq_out_3_V_last_V_U_vld_out,
        ack_out => iq_out_3_TREADY,
        apdone_blk => regslice_both_iq_out_3_V_last_V_U_apdone_blk);

    regslice_both_iq_out_4_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_q0,
        vld_in => iq_out_4_TVALID_int_regslice,
        ack_in => iq_out_4_TREADY_int_regslice,
        data_out => iq_out_4_TDATA,
        vld_out => regslice_both_iq_out_4_V_data_V_U_vld_out,
        ack_out => iq_out_4_TREADY,
        apdone_blk => regslice_both_iq_out_4_V_data_V_U_apdone_blk);

    regslice_both_iq_out_4_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_4_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_4_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_4_TKEEP,
        vld_out => regslice_both_iq_out_4_V_keep_V_U_vld_out,
        ack_out => iq_out_4_TREADY,
        apdone_blk => regslice_both_iq_out_4_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_4_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_4_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_4_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_4_TSTRB,
        vld_out => regslice_both_iq_out_4_V_strb_V_U_vld_out,
        ack_out => iq_out_4_TREADY,
        apdone_blk => regslice_both_iq_out_4_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_4_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_4,
        vld_in => iq_out_4_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_4_V_user_V_U_ack_in_dummy,
        data_out => iq_out_4_TUSER,
        vld_out => regslice_both_iq_out_4_V_user_V_U_vld_out,
        ack_out => iq_out_4_TREADY,
        apdone_blk => regslice_both_iq_out_4_V_user_V_U_apdone_blk);

    regslice_both_iq_out_4_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_4_reg_1547,
        vld_in => iq_out_4_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_4_V_last_V_U_ack_in_dummy,
        data_out => iq_out_4_TLAST,
        vld_out => regslice_both_iq_out_4_V_last_V_U_vld_out,
        ack_out => iq_out_4_TREADY,
        apdone_blk => regslice_both_iq_out_4_V_last_V_U_apdone_blk);

    regslice_both_iq_out_5_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_q0,
        vld_in => iq_out_5_TVALID_int_regslice,
        ack_in => iq_out_5_TREADY_int_regslice,
        data_out => iq_out_5_TDATA,
        vld_out => regslice_both_iq_out_5_V_data_V_U_vld_out,
        ack_out => iq_out_5_TREADY,
        apdone_blk => regslice_both_iq_out_5_V_data_V_U_apdone_blk);

    regslice_both_iq_out_5_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_5_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_5_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_5_TKEEP,
        vld_out => regslice_both_iq_out_5_V_keep_V_U_vld_out,
        ack_out => iq_out_5_TREADY,
        apdone_blk => regslice_both_iq_out_5_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_5_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_5_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_5_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_5_TSTRB,
        vld_out => regslice_both_iq_out_5_V_strb_V_U_vld_out,
        ack_out => iq_out_5_TREADY,
        apdone_blk => regslice_both_iq_out_5_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_5_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_5,
        vld_in => iq_out_5_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_5_V_user_V_U_ack_in_dummy,
        data_out => iq_out_5_TUSER,
        vld_out => regslice_both_iq_out_5_V_user_V_U_vld_out,
        ack_out => iq_out_5_TREADY,
        apdone_blk => regslice_both_iq_out_5_V_user_V_U_apdone_blk);

    regslice_both_iq_out_5_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_5_reg_1564,
        vld_in => iq_out_5_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_5_V_last_V_U_ack_in_dummy,
        data_out => iq_out_5_TLAST,
        vld_out => regslice_both_iq_out_5_V_last_V_U_vld_out,
        ack_out => iq_out_5_TREADY,
        apdone_blk => regslice_both_iq_out_5_V_last_V_U_apdone_blk);

    regslice_both_iq_out_6_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_q0,
        vld_in => iq_out_6_TVALID_int_regslice,
        ack_in => iq_out_6_TREADY_int_regslice,
        data_out => iq_out_6_TDATA,
        vld_out => regslice_both_iq_out_6_V_data_V_U_vld_out,
        ack_out => iq_out_6_TREADY,
        apdone_blk => regslice_both_iq_out_6_V_data_V_U_apdone_blk);

    regslice_both_iq_out_6_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_6_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_6_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_6_TKEEP,
        vld_out => regslice_both_iq_out_6_V_keep_V_U_vld_out,
        ack_out => iq_out_6_TREADY,
        apdone_blk => regslice_both_iq_out_6_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_6_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_6_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_6_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_6_TSTRB,
        vld_out => regslice_both_iq_out_6_V_strb_V_U_vld_out,
        ack_out => iq_out_6_TREADY,
        apdone_blk => regslice_both_iq_out_6_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_6_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_6,
        vld_in => iq_out_6_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_6_V_user_V_U_ack_in_dummy,
        data_out => iq_out_6_TUSER,
        vld_out => regslice_both_iq_out_6_V_user_V_U_vld_out,
        ack_out => iq_out_6_TREADY,
        apdone_blk => regslice_both_iq_out_6_V_user_V_U_apdone_blk);

    regslice_both_iq_out_6_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_6_reg_1581,
        vld_in => iq_out_6_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_6_V_last_V_U_ack_in_dummy,
        data_out => iq_out_6_TLAST,
        vld_out => regslice_both_iq_out_6_V_last_V_U_vld_out,
        ack_out => iq_out_6_TREADY,
        apdone_blk => regslice_both_iq_out_6_V_last_V_U_apdone_blk);

    regslice_both_iq_out_7_V_data_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_q0,
        vld_in => iq_out_7_TVALID_int_regslice,
        ack_in => iq_out_7_TREADY_int_regslice,
        data_out => iq_out_7_TDATA,
        vld_out => regslice_both_iq_out_7_V_data_V_U_vld_out,
        ack_out => iq_out_7_TREADY,
        apdone_blk => regslice_both_iq_out_7_V_data_V_U_apdone_blk);

    regslice_both_iq_out_7_V_keep_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_7_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_7_V_keep_V_U_ack_in_dummy,
        data_out => iq_out_7_TKEEP,
        vld_out => regslice_both_iq_out_7_V_keep_V_U_vld_out,
        ack_out => iq_out_7_TREADY,
        apdone_blk => regslice_both_iq_out_7_V_keep_V_U_apdone_blk);

    regslice_both_iq_out_7_V_strb_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => iq_out_7_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_7_V_strb_V_U_ack_in_dummy,
        data_out => iq_out_7_TSTRB,
        vld_out => regslice_both_iq_out_7_V_strb_V_U_vld_out,
        ack_out => iq_out_7_TREADY,
        apdone_blk => regslice_both_iq_out_7_V_strb_V_U_apdone_blk);

    regslice_both_iq_out_7_V_user_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv3_7,
        vld_in => iq_out_7_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_7_V_user_V_U_ack_in_dummy,
        data_out => iq_out_7_TUSER,
        vld_out => regslice_both_iq_out_7_V_user_V_U_vld_out,
        ack_out => iq_out_7_TREADY,
        apdone_blk => regslice_both_iq_out_7_V_user_V_U_apdone_blk);

    regslice_both_iq_out_7_V_last_V_U : component postage_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_7_reg_1598,
        vld_in => iq_out_7_TVALID_int_regslice,
        ack_in => regslice_both_iq_out_7_V_last_V_U_ack_in_dummy,
        data_out => iq_out_7_TLAST,
        vld_out => regslice_both_iq_out_7_V_last_V_U_vld_out,
        ack_out => iq_out_7_TREADY,
        apdone_blk => regslice_both_iq_out_7_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1108)) then
                if (((p_Result_2_fu_860_p2 = ap_const_lv1_0) and (icmp_ln94_2_fu_834_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture <= ap_const_lv8_7F;
                elsif ((icmp_ln94_2_fu_834_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture <= nexttocap_2_fu_822_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1098)) then
                if (((p_Result_1_fu_802_p2 = ap_const_lv1_0) and (icmp_ln94_1_fu_776_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_1_fu_776_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 <= nexttocap_1_fu_764_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1158)) then
                if (((p_Result_7_fu_1150_p2 = ap_const_lv1_0) and (icmp_ln94_7_fu_1124_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_7_fu_1124_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 <= nexttocap_7_fu_1112_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1148)) then
                if (((p_Result_6_fu_1092_p2 = ap_const_lv1_0) and (icmp_ln94_6_fu_1066_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_6_fu_1066_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 <= nexttocap_6_fu_1054_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1138)) then
                if (((p_Result_5_fu_1034_p2 = ap_const_lv1_0) and (icmp_ln94_5_fu_1008_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_5_fu_1008_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 <= nexttocap_5_fu_996_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1128)) then
                if (((p_Result_4_fu_976_p2 = ap_const_lv1_0) and (icmp_ln94_4_fu_950_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_4_fu_950_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 <= nexttocap_4_fu_938_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1118)) then
                if (((p_Result_3_fu_918_p2 = ap_const_lv1_0) and (icmp_ln94_3_fu_892_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_3_fu_892_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 <= nexttocap_3_fu_880_p2;
                end if;
            end if; 
        end if;
    end process;

    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1088)) then
                if (((p_Result_s_fu_744_p2 = ap_const_lv1_0) and (icmp_ln94_fu_718_p2 = ap_const_lv1_1))) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 <= ap_const_lv8_7F;
                elsif ((icmp_ln94_fu_718_p2 = ap_const_lv1_0)) then 
                    postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 <= nexttocap_fu_706_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gid_V_1_reg_1403 <= monitor_1(10 downto 2);
                gid_V_2_reg_1414 <= monitor_2(10 downto 2);
                gid_V_3_reg_1425 <= monitor_3(10 downto 2);
                gid_V_4_reg_1436 <= monitor_4(10 downto 2);
                gid_V_5_reg_1447 <= monitor_5(10 downto 2);
                gid_V_6_reg_1458 <= monitor_6(10 downto 2);
                gid_V_7_reg_1469 <= monitor_7(10 downto 2);
                gid_V_reg_1392 <= monitor_0(10 downto 2);
                group_V_reg_1314 <= group_V_fu_538_p1;
                icmp_ln1065_1_reg_1491 <= icmp_ln1065_1_fu_756_p2;
                icmp_ln1065_2_reg_1508 <= icmp_ln1065_2_fu_814_p2;
                icmp_ln1065_3_reg_1525 <= icmp_ln1065_3_fu_872_p2;
                icmp_ln1065_4_reg_1542 <= icmp_ln1065_4_fu_930_p2;
                icmp_ln1065_5_reg_1559 <= icmp_ln1065_5_fu_988_p2;
                icmp_ln1065_6_reg_1576 <= icmp_ln1065_6_fu_1046_p2;
                icmp_ln1065_7_reg_1593 <= icmp_ln1065_7_fu_1104_p2;
                icmp_ln1065_reg_1474 <= icmp_ln1065_fu_698_p2;
                lane_V_1_reg_1397 <= lane_V_1_fu_600_p1;
                lane_V_1_reg_1397_pp0_iter1_reg <= lane_V_1_reg_1397;
                lane_V_2_reg_1408 <= lane_V_2_fu_614_p1;
                lane_V_2_reg_1408_pp0_iter1_reg <= lane_V_2_reg_1408;
                lane_V_3_reg_1419 <= lane_V_3_fu_628_p1;
                lane_V_3_reg_1419_pp0_iter1_reg <= lane_V_3_reg_1419;
                lane_V_4_reg_1430 <= lane_V_4_fu_642_p1;
                lane_V_4_reg_1430_pp0_iter1_reg <= lane_V_4_reg_1430;
                lane_V_5_reg_1441 <= lane_V_5_fu_656_p1;
                lane_V_5_reg_1441_pp0_iter1_reg <= lane_V_5_reg_1441;
                lane_V_6_reg_1452 <= lane_V_6_fu_670_p1;
                lane_V_6_reg_1452_pp0_iter1_reg <= lane_V_6_reg_1452;
                lane_V_7_reg_1463 <= lane_V_7_fu_684_p1;
                lane_V_7_reg_1463_pp0_iter1_reg <= lane_V_7_reg_1463;
                lane_V_reg_1386 <= lane_V_fu_586_p1;
                lane_V_reg_1386_pp0_iter1_reg <= lane_V_reg_1386;
                tmp_last_V_1_reg_1496 <= tmp_last_V_1_fu_770_p2;
                tmp_last_V_2_reg_1513 <= tmp_last_V_2_fu_828_p2;
                tmp_last_V_3_reg_1530 <= tmp_last_V_3_fu_886_p2;
                tmp_last_V_4_reg_1547 <= tmp_last_V_4_fu_944_p2;
                tmp_last_V_5_reg_1564 <= tmp_last_V_5_fu_1002_p2;
                tmp_last_V_6_reg_1581 <= tmp_last_V_6_fu_1060_p2;
                tmp_last_V_7_reg_1598 <= tmp_last_V_7_fu_1118_p2;
                tmp_last_V_reg_1479 <= tmp_last_V_fu_712_p2;
                trigger_V_reg_1326 <= instream_TUSER_int_regslice(12 downto 9);
                x_1_reg_1350 <= iniq_TDATA_int_regslice(63 downto 32);
                x_1_reg_1350_pp0_iter1_reg <= x_1_reg_1350;
                x_2_reg_1362 <= iniq_TDATA_int_regslice(95 downto 64);
                x_2_reg_1362_pp0_iter1_reg <= x_2_reg_1362;
                x_3_reg_1374 <= iniq_TDATA_int_regslice(127 downto 96);
                x_3_reg_1374_pp0_iter1_reg <= x_3_reg_1374;
                x_reg_1338 <= x_fu_552_p1;
                x_reg_1338_pp0_iter1_reg <= x_reg_1338;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln1065_1_reg_1491_pp0_iter2_reg <= icmp_ln1065_1_reg_1491;
                icmp_ln1065_2_reg_1508_pp0_iter2_reg <= icmp_ln1065_2_reg_1508;
                icmp_ln1065_3_reg_1525_pp0_iter2_reg <= icmp_ln1065_3_reg_1525;
                icmp_ln1065_4_reg_1542_pp0_iter2_reg <= icmp_ln1065_4_reg_1542;
                icmp_ln1065_5_reg_1559_pp0_iter2_reg <= icmp_ln1065_5_reg_1559;
                icmp_ln1065_6_reg_1576_pp0_iter2_reg <= icmp_ln1065_6_reg_1576;
                icmp_ln1065_7_reg_1593_pp0_iter2_reg <= icmp_ln1065_7_reg_1593;
                icmp_ln1065_reg_1474_pp0_iter2_reg <= icmp_ln1065_reg_1474;
                icmp_ln94_1_reg_1501_pp0_iter2_reg <= icmp_ln94_1_reg_1501;
                icmp_ln94_2_reg_1518_pp0_iter2_reg <= icmp_ln94_2_reg_1518;
                icmp_ln94_3_reg_1535_pp0_iter2_reg <= icmp_ln94_3_reg_1535;
                icmp_ln94_4_reg_1552_pp0_iter2_reg <= icmp_ln94_4_reg_1552;
                icmp_ln94_5_reg_1569_pp0_iter2_reg <= icmp_ln94_5_reg_1569;
                icmp_ln94_6_reg_1586_pp0_iter2_reg <= icmp_ln94_6_reg_1586;
                icmp_ln94_7_reg_1603_pp0_iter2_reg <= icmp_ln94_7_reg_1603;
                icmp_ln94_reg_1484_pp0_iter2_reg <= icmp_ln94_reg_1484;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_1_fu_756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_1_reg_1501 <= icmp_ln94_1_fu_776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_2_fu_814_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_2_reg_1518 <= icmp_ln94_2_fu_834_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_3_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_3_reg_1535 <= icmp_ln94_3_fu_892_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_4_fu_930_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_4_reg_1552 <= icmp_ln94_4_fu_950_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_5_fu_988_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_5_reg_1569 <= icmp_ln94_5_fu_1008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_6_fu_1046_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_6_reg_1586 <= icmp_ln94_6_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_7_fu_1104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_7_reg_1603 <= icmp_ln94_7_fu_1124_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1065_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln94_reg_1484 <= icmp_ln94_fu_718_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln825_1_fu_797_p2 <= (trigger_V_reg_1326 and shl_ln825_1_fu_791_p2);
    and_ln825_2_fu_855_p2 <= (trigger_V_reg_1326 and shl_ln825_2_fu_849_p2);
    and_ln825_3_fu_913_p2 <= (trigger_V_reg_1326 and shl_ln825_3_fu_907_p2);
    and_ln825_4_fu_971_p2 <= (trigger_V_reg_1326 and shl_ln825_4_fu_965_p2);
    and_ln825_5_fu_1029_p2 <= (trigger_V_reg_1326 and shl_ln825_5_fu_1023_p2);
    and_ln825_6_fu_1087_p2 <= (trigger_V_reg_1326 and shl_ln825_6_fu_1081_p2);
    and_ln825_7_fu_1145_p2 <= (trigger_V_reg_1326 and shl_ln825_7_fu_1139_p2);
    and_ln825_fu_739_p2 <= (trigger_V_reg_1326 and shl_ln825_fu_733_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op263_write_state3, ap_predicate_op266_write_state3, ap_predicate_op269_write_state3, ap_predicate_op272_write_state3, ap_predicate_op275_write_state3, ap_predicate_op278_write_state3, ap_predicate_op281_write_state3, ap_predicate_op284_write_state3, ap_predicate_op285_write_state4, ap_predicate_op287_write_state4, ap_predicate_op289_write_state4, ap_predicate_op291_write_state4, ap_predicate_op293_write_state4, ap_predicate_op295_write_state4, ap_predicate_op297_write_state4, ap_predicate_op299_write_state4, regslice_both_iq_out_0_V_data_V_U_apdone_blk, regslice_both_iq_out_1_V_data_V_U_apdone_blk, regslice_both_iq_out_2_V_data_V_U_apdone_blk, regslice_both_iq_out_3_V_data_V_U_apdone_blk, regslice_both_iq_out_4_V_data_V_U_apdone_blk, regslice_both_iq_out_5_V_data_V_U_apdone_blk, regslice_both_iq_out_6_V_data_V_U_apdone_blk, regslice_both_iq_out_7_V_data_V_U_apdone_blk, instream_TVALID_int_regslice, iniq_TVALID_int_regslice, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_iq_out_7_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_6_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_5_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_4_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_3_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_2_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_1_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_0_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ap_predicate_op299_write_state4 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op297_write_state4 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op295_write_state4 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op293_write_state4 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op291_write_state4 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op289_write_state4 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op287_write_state4 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op285_write_state4 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op284_write_state3 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op281_write_state3 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op278_write_state3 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op275_write_state3 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op272_write_state3 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op269_write_state3 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op266_write_state3 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op263_write_state3 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_const_logic_1) and ((iniq_TVALID_int_regslice = ap_const_logic_0) or (instream_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op263_write_state3, ap_predicate_op266_write_state3, ap_predicate_op269_write_state3, ap_predicate_op272_write_state3, ap_predicate_op275_write_state3, ap_predicate_op278_write_state3, ap_predicate_op281_write_state3, ap_predicate_op284_write_state3, ap_block_state3_io, ap_predicate_op285_write_state4, ap_predicate_op287_write_state4, ap_predicate_op289_write_state4, ap_predicate_op291_write_state4, ap_predicate_op293_write_state4, ap_predicate_op295_write_state4, ap_predicate_op297_write_state4, ap_predicate_op299_write_state4, regslice_both_iq_out_0_V_data_V_U_apdone_blk, regslice_both_iq_out_1_V_data_V_U_apdone_blk, regslice_both_iq_out_2_V_data_V_U_apdone_blk, regslice_both_iq_out_3_V_data_V_U_apdone_blk, regslice_both_iq_out_4_V_data_V_U_apdone_blk, regslice_both_iq_out_5_V_data_V_U_apdone_blk, regslice_both_iq_out_6_V_data_V_U_apdone_blk, regslice_both_iq_out_7_V_data_V_U_apdone_blk, ap_block_state4_io, instream_TVALID_int_regslice, iniq_TVALID_int_regslice, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_iq_out_7_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_6_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_5_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_4_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_3_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_2_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_1_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_0_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state4_io) or ((ap_predicate_op299_write_state4 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op297_write_state4 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op295_write_state4 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op293_write_state4 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op291_write_state4 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op289_write_state4 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op287_write_state4 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op285_write_state4 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op284_write_state3 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op281_write_state3 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op278_write_state3 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op275_write_state3 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op272_write_state3 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op269_write_state3 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op266_write_state3 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op263_write_state3 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_const_logic_1) and ((iniq_TVALID_int_regslice = ap_const_logic_0) or (instream_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op263_write_state3, ap_predicate_op266_write_state3, ap_predicate_op269_write_state3, ap_predicate_op272_write_state3, ap_predicate_op275_write_state3, ap_predicate_op278_write_state3, ap_predicate_op281_write_state3, ap_predicate_op284_write_state3, ap_block_state3_io, ap_predicate_op285_write_state4, ap_predicate_op287_write_state4, ap_predicate_op289_write_state4, ap_predicate_op291_write_state4, ap_predicate_op293_write_state4, ap_predicate_op295_write_state4, ap_predicate_op297_write_state4, ap_predicate_op299_write_state4, regslice_both_iq_out_0_V_data_V_U_apdone_blk, regslice_both_iq_out_1_V_data_V_U_apdone_blk, regslice_both_iq_out_2_V_data_V_U_apdone_blk, regslice_both_iq_out_3_V_data_V_U_apdone_blk, regslice_both_iq_out_4_V_data_V_U_apdone_blk, regslice_both_iq_out_5_V_data_V_U_apdone_blk, regslice_both_iq_out_6_V_data_V_U_apdone_blk, regslice_both_iq_out_7_V_data_V_U_apdone_blk, ap_block_state4_io, instream_TVALID_int_regslice, iniq_TVALID_int_regslice, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_iq_out_7_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_6_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_5_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_4_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_3_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_2_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_1_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_0_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state4_io) or ((ap_predicate_op299_write_state4 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op297_write_state4 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op295_write_state4 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op293_write_state4 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op291_write_state4 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op289_write_state4 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op287_write_state4 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op285_write_state4 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op284_write_state3 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op281_write_state3 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op278_write_state3 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op275_write_state3 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op272_write_state3 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op269_write_state3 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op266_write_state3 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op263_write_state3 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_const_logic_1) and ((iniq_TVALID_int_regslice = ap_const_logic_0) or (instream_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(instream_TVALID_int_regslice, iniq_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((iniq_TVALID_int_regslice = ap_const_logic_0) or (instream_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(ap_predicate_op263_write_state3, ap_predicate_op266_write_state3, ap_predicate_op269_write_state3, ap_predicate_op272_write_state3, ap_predicate_op275_write_state3, ap_predicate_op278_write_state3, ap_predicate_op281_write_state3, ap_predicate_op284_write_state3, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((ap_predicate_op284_write_state3 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op281_write_state3 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op278_write_state3 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op275_write_state3 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op272_write_state3 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op269_write_state3 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op266_write_state3 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op263_write_state3 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ap_predicate_op263_write_state3, ap_predicate_op266_write_state3, ap_predicate_op269_write_state3, ap_predicate_op272_write_state3, ap_predicate_op275_write_state3, ap_predicate_op278_write_state3, ap_predicate_op281_write_state3, ap_predicate_op284_write_state3, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((ap_predicate_op284_write_state3 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op281_write_state3 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op278_write_state3 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op275_write_state3 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op272_write_state3 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op269_write_state3 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op266_write_state3 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op263_write_state3 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(ap_predicate_op285_write_state4, ap_predicate_op287_write_state4, ap_predicate_op289_write_state4, ap_predicate_op291_write_state4, ap_predicate_op293_write_state4, ap_predicate_op295_write_state4, ap_predicate_op297_write_state4, ap_predicate_op299_write_state4, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_state4_io <= (((ap_predicate_op299_write_state4 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op297_write_state4 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op295_write_state4 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op293_write_state4 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op291_write_state4 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op289_write_state4 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op287_write_state4 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op285_write_state4 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(ap_predicate_op285_write_state4, ap_predicate_op287_write_state4, ap_predicate_op289_write_state4, ap_predicate_op291_write_state4, ap_predicate_op293_write_state4, ap_predicate_op295_write_state4, ap_predicate_op297_write_state4, ap_predicate_op299_write_state4, regslice_both_iq_out_0_V_data_V_U_apdone_blk, regslice_both_iq_out_1_V_data_V_U_apdone_blk, regslice_both_iq_out_2_V_data_V_U_apdone_blk, regslice_both_iq_out_3_V_data_V_U_apdone_blk, regslice_both_iq_out_4_V_data_V_U_apdone_blk, regslice_both_iq_out_5_V_data_V_U_apdone_blk, regslice_both_iq_out_6_V_data_V_U_apdone_blk, regslice_both_iq_out_7_V_data_V_U_apdone_blk, iq_out_0_TREADY_int_regslice, iq_out_1_TREADY_int_regslice, iq_out_2_TREADY_int_regslice, iq_out_3_TREADY_int_regslice, iq_out_4_TREADY_int_regslice, iq_out_5_TREADY_int_regslice, iq_out_6_TREADY_int_regslice, iq_out_7_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((regslice_both_iq_out_7_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_6_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_5_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_4_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_3_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_2_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_1_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq_out_0_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ap_predicate_op299_write_state4 = ap_const_boolean_1) and (iq_out_7_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op297_write_state4 = ap_const_boolean_1) and (iq_out_6_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op295_write_state4 = ap_const_boolean_1) and (iq_out_5_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op293_write_state4 = ap_const_boolean_1) and (iq_out_4_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op291_write_state4 = ap_const_boolean_1) and (iq_out_3_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op289_write_state4 = ap_const_boolean_1) and (iq_out_2_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op287_write_state4 = ap_const_boolean_1) and (iq_out_1_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op285_write_state4 = ap_const_boolean_1) and (iq_out_0_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_condition_1088_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_fu_698_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1088 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1098_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_1_fu_756_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1098 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_1_fu_756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1108_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_2_fu_814_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1108 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_2_fu_814_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1118_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_3_fu_872_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1118 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_3_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1128_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_4_fu_930_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1128 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_4_fu_930_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1138_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_5_fu_988_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1138 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_5_fu_988_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1148_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_6_fu_1046_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1148 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_6_fu_1046_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_1158_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1065_7_fu_1104_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1158 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1065_7_fu_1104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op263_write_state3_assign_proc : process(icmp_ln1065_reg_1474, icmp_ln94_reg_1484)
    begin
                ap_predicate_op263_write_state3 <= ((icmp_ln94_reg_1484 = ap_const_lv1_0) and (icmp_ln1065_reg_1474 = ap_const_lv1_1));
    end process;


    ap_predicate_op266_write_state3_assign_proc : process(icmp_ln1065_1_reg_1491, icmp_ln94_1_reg_1501)
    begin
                ap_predicate_op266_write_state3 <= ((icmp_ln94_1_reg_1501 = ap_const_lv1_0) and (icmp_ln1065_1_reg_1491 = ap_const_lv1_1));
    end process;


    ap_predicate_op269_write_state3_assign_proc : process(icmp_ln1065_2_reg_1508, icmp_ln94_2_reg_1518)
    begin
                ap_predicate_op269_write_state3 <= ((icmp_ln94_2_reg_1518 = ap_const_lv1_0) and (icmp_ln1065_2_reg_1508 = ap_const_lv1_1));
    end process;


    ap_predicate_op272_write_state3_assign_proc : process(icmp_ln1065_3_reg_1525, icmp_ln94_3_reg_1535)
    begin
                ap_predicate_op272_write_state3 <= ((icmp_ln94_3_reg_1535 = ap_const_lv1_0) and (icmp_ln1065_3_reg_1525 = ap_const_lv1_1));
    end process;


    ap_predicate_op275_write_state3_assign_proc : process(icmp_ln1065_4_reg_1542, icmp_ln94_4_reg_1552)
    begin
                ap_predicate_op275_write_state3 <= ((icmp_ln94_4_reg_1552 = ap_const_lv1_0) and (icmp_ln1065_4_reg_1542 = ap_const_lv1_1));
    end process;


    ap_predicate_op278_write_state3_assign_proc : process(icmp_ln1065_5_reg_1559, icmp_ln94_5_reg_1569)
    begin
                ap_predicate_op278_write_state3 <= ((icmp_ln94_5_reg_1569 = ap_const_lv1_0) and (icmp_ln1065_5_reg_1559 = ap_const_lv1_1));
    end process;


    ap_predicate_op281_write_state3_assign_proc : process(icmp_ln1065_6_reg_1576, icmp_ln94_6_reg_1586)
    begin
                ap_predicate_op281_write_state3 <= ((icmp_ln94_6_reg_1586 = ap_const_lv1_0) and (icmp_ln1065_6_reg_1576 = ap_const_lv1_1));
    end process;


    ap_predicate_op284_write_state3_assign_proc : process(icmp_ln1065_7_reg_1593, icmp_ln94_7_reg_1603)
    begin
                ap_predicate_op284_write_state3 <= ((icmp_ln94_7_reg_1603 = ap_const_lv1_0) and (icmp_ln1065_7_reg_1593 = ap_const_lv1_1));
    end process;


    ap_predicate_op285_write_state4_assign_proc : process(icmp_ln1065_reg_1474_pp0_iter2_reg, icmp_ln94_reg_1484_pp0_iter2_reg)
    begin
                ap_predicate_op285_write_state4 <= ((icmp_ln94_reg_1484_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_reg_1474_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op287_write_state4_assign_proc : process(icmp_ln1065_1_reg_1491_pp0_iter2_reg, icmp_ln94_1_reg_1501_pp0_iter2_reg)
    begin
                ap_predicate_op287_write_state4 <= ((icmp_ln94_1_reg_1501_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_1_reg_1491_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op289_write_state4_assign_proc : process(icmp_ln1065_2_reg_1508_pp0_iter2_reg, icmp_ln94_2_reg_1518_pp0_iter2_reg)
    begin
                ap_predicate_op289_write_state4 <= ((icmp_ln94_2_reg_1518_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_2_reg_1508_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op291_write_state4_assign_proc : process(icmp_ln1065_3_reg_1525_pp0_iter2_reg, icmp_ln94_3_reg_1535_pp0_iter2_reg)
    begin
                ap_predicate_op291_write_state4 <= ((icmp_ln94_3_reg_1535_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_3_reg_1525_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op293_write_state4_assign_proc : process(icmp_ln1065_4_reg_1542_pp0_iter2_reg, icmp_ln94_4_reg_1552_pp0_iter2_reg)
    begin
                ap_predicate_op293_write_state4 <= ((icmp_ln94_4_reg_1552_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_4_reg_1542_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op295_write_state4_assign_proc : process(icmp_ln1065_5_reg_1559_pp0_iter2_reg, icmp_ln94_5_reg_1569_pp0_iter2_reg)
    begin
                ap_predicate_op295_write_state4 <= ((icmp_ln94_5_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_5_reg_1559_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op297_write_state4_assign_proc : process(icmp_ln1065_6_reg_1576_pp0_iter2_reg, icmp_ln94_6_reg_1586_pp0_iter2_reg)
    begin
                ap_predicate_op297_write_state4 <= ((icmp_ln94_6_reg_1586_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_6_reg_1576_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op299_write_state4_assign_proc : process(icmp_ln1065_7_reg_1593_pp0_iter2_reg, icmp_ln94_7_reg_1603_pp0_iter2_reg)
    begin
                ap_predicate_op299_write_state4 <= ((icmp_ln94_7_reg_1603_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_7_reg_1593_pp0_iter2_reg = ap_const_lv1_1));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    group_V_fu_538_p1 <= instream_TUSER_int_regslice(9 - 1 downto 0);
    icmp_ln1065_1_fu_756_p2 <= "1" when (gid_V_1_reg_1403 = group_V_reg_1314) else "0";
    icmp_ln1065_2_fu_814_p2 <= "1" when (gid_V_2_reg_1414 = group_V_reg_1314) else "0";
    icmp_ln1065_3_fu_872_p2 <= "1" when (gid_V_3_reg_1425 = group_V_reg_1314) else "0";
    icmp_ln1065_4_fu_930_p2 <= "1" when (gid_V_4_reg_1436 = group_V_reg_1314) else "0";
    icmp_ln1065_5_fu_988_p2 <= "1" when (gid_V_5_reg_1447 = group_V_reg_1314) else "0";
    icmp_ln1065_6_fu_1046_p2 <= "1" when (gid_V_6_reg_1458 = group_V_reg_1314) else "0";
    icmp_ln1065_7_fu_1104_p2 <= "1" when (gid_V_7_reg_1469 = group_V_reg_1314) else "0";
    icmp_ln1065_fu_698_p2 <= "1" when (gid_V_reg_1392 = group_V_reg_1314) else "0";
    icmp_ln94_1_fu_776_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 = ap_const_lv8_0) else "0";
    icmp_ln94_2_fu_834_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture = ap_const_lv8_0) else "0";
    icmp_ln94_3_fu_892_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 = ap_const_lv8_0) else "0";
    icmp_ln94_4_fu_950_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 = ap_const_lv8_0) else "0";
    icmp_ln94_5_fu_1008_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 = ap_const_lv8_0) else "0";
    icmp_ln94_6_fu_1066_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 = ap_const_lv8_0) else "0";
    icmp_ln94_7_fu_1124_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 = ap_const_lv8_0) else "0";
    icmp_ln94_fu_718_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 = ap_const_lv8_0) else "0";

    iniq_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, iniq_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            iniq_TDATA_blk_n <= iniq_TVALID_int_regslice;
        else 
            iniq_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iniq_TREADY <= regslice_both_iniq_V_data_V_U_ack_in;

    iniq_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            iniq_TREADY_int_regslice <= ap_const_logic_1;
        else 
            iniq_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    instream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, instream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            instream_TDATA_blk_n <= instream_TVALID_int_regslice;
        else 
            instream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    instream_TREADY <= regslice_both_instream_V_data_V_U_ack_in;

    instream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            instream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            instream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_0_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln1065_reg_1474, icmp_ln94_reg_1484, ap_enable_reg_pp0_iter3, icmp_ln1065_reg_1474_pp0_iter2_reg, icmp_ln94_reg_1484_pp0_iter2_reg, iq_out_0_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_reg_1484_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_reg_1474_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_reg_1484 = ap_const_lv1_0) and (icmp_ln1065_reg_1474 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_0_TDATA_blk_n <= iq_out_0_TREADY_int_regslice;
        else 
            iq_out_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_0_TVALID <= regslice_both_iq_out_0_V_data_V_U_vld_out;

    iq_out_0_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op263_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op263_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_0_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_0_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_1_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_1_reg_1491, icmp_ln94_1_reg_1501, icmp_ln1065_1_reg_1491_pp0_iter2_reg, icmp_ln94_1_reg_1501_pp0_iter2_reg, iq_out_1_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_1_reg_1501_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_1_reg_1491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_1_reg_1501 = ap_const_lv1_0) and (icmp_ln1065_1_reg_1491 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_1_TDATA_blk_n <= iq_out_1_TREADY_int_regslice;
        else 
            iq_out_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_1_TVALID <= regslice_both_iq_out_1_V_data_V_U_vld_out;

    iq_out_1_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op266_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op266_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_1_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_1_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_2_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_2_reg_1508, icmp_ln94_2_reg_1518, icmp_ln1065_2_reg_1508_pp0_iter2_reg, icmp_ln94_2_reg_1518_pp0_iter2_reg, iq_out_2_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_2_reg_1518_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_2_reg_1508_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_2_reg_1518 = ap_const_lv1_0) and (icmp_ln1065_2_reg_1508 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_2_TDATA_blk_n <= iq_out_2_TREADY_int_regslice;
        else 
            iq_out_2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_2_TVALID <= regslice_both_iq_out_2_V_data_V_U_vld_out;

    iq_out_2_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op269_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op269_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_2_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_2_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_3_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_3_reg_1525, icmp_ln94_3_reg_1535, icmp_ln1065_3_reg_1525_pp0_iter2_reg, icmp_ln94_3_reg_1535_pp0_iter2_reg, iq_out_3_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_3_reg_1535_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_3_reg_1525_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_3_reg_1535 = ap_const_lv1_0) and (icmp_ln1065_3_reg_1525 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_3_TDATA_blk_n <= iq_out_3_TREADY_int_regslice;
        else 
            iq_out_3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_3_TVALID <= regslice_both_iq_out_3_V_data_V_U_vld_out;

    iq_out_3_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op272_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op272_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_3_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_3_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_4_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_4_reg_1542, icmp_ln94_4_reg_1552, icmp_ln1065_4_reg_1542_pp0_iter2_reg, icmp_ln94_4_reg_1552_pp0_iter2_reg, iq_out_4_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_4_reg_1552_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_4_reg_1542_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_4_reg_1552 = ap_const_lv1_0) and (icmp_ln1065_4_reg_1542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_4_TDATA_blk_n <= iq_out_4_TREADY_int_regslice;
        else 
            iq_out_4_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_4_TVALID <= regslice_both_iq_out_4_V_data_V_U_vld_out;

    iq_out_4_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op275_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op275_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_4_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_4_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_5_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_5_reg_1559, icmp_ln94_5_reg_1569, icmp_ln1065_5_reg_1559_pp0_iter2_reg, icmp_ln94_5_reg_1569_pp0_iter2_reg, iq_out_5_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_5_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_5_reg_1559_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_5_reg_1569 = ap_const_lv1_0) and (icmp_ln1065_5_reg_1559 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_5_TDATA_blk_n <= iq_out_5_TREADY_int_regslice;
        else 
            iq_out_5_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_5_TVALID <= regslice_both_iq_out_5_V_data_V_U_vld_out;

    iq_out_5_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op278_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op278_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_5_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_5_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_6_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_6_reg_1576, icmp_ln94_6_reg_1586, icmp_ln1065_6_reg_1576_pp0_iter2_reg, icmp_ln94_6_reg_1586_pp0_iter2_reg, iq_out_6_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_6_reg_1586_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_6_reg_1576_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_6_reg_1586 = ap_const_lv1_0) and (icmp_ln1065_6_reg_1576 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_6_TDATA_blk_n <= iq_out_6_TREADY_int_regslice;
        else 
            iq_out_6_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_6_TVALID <= regslice_both_iq_out_6_V_data_V_U_vld_out;

    iq_out_6_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op281_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op281_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_6_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_6_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq_out_7_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, icmp_ln1065_7_reg_1593, icmp_ln94_7_reg_1603, icmp_ln1065_7_reg_1593_pp0_iter2_reg, icmp_ln94_7_reg_1603_pp0_iter2_reg, iq_out_7_TREADY_int_regslice)
    begin
        if ((((icmp_ln94_7_reg_1603_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln1065_7_reg_1593_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln94_7_reg_1603 = ap_const_lv1_0) and (icmp_ln1065_7_reg_1593 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            iq_out_7_TDATA_blk_n <= iq_out_7_TREADY_int_regslice;
        else 
            iq_out_7_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_out_7_TVALID <= regslice_both_iq_out_7_V_data_V_U_vld_out;

    iq_out_7_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op284_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op284_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            iq_out_7_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq_out_7_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    lane_V_1_fu_600_p1 <= monitor_1(2 - 1 downto 0);
    lane_V_2_fu_614_p1 <= monitor_2(2 - 1 downto 0);
    lane_V_3_fu_628_p1 <= monitor_3(2 - 1 downto 0);
    lane_V_4_fu_642_p1 <= monitor_4(2 - 1 downto 0);
    lane_V_5_fu_656_p1 <= monitor_5(2 - 1 downto 0);
    lane_V_6_fu_670_p1 <= monitor_6(2 - 1 downto 0);
    lane_V_7_fu_684_p1 <= monitor_7(2 - 1 downto 0);
    lane_V_fu_586_p1 <= monitor_0(2 - 1 downto 0);
    nexttocap_1_fu_764_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1) + unsigned(ap_const_lv8_FF));
    nexttocap_2_fu_822_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture) + unsigned(ap_const_lv8_FF));
    nexttocap_3_fu_880_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6) + unsigned(ap_const_lv8_FF));
    nexttocap_4_fu_938_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5) + unsigned(ap_const_lv8_FF));
    nexttocap_5_fu_996_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4) + unsigned(ap_const_lv8_FF));
    nexttocap_6_fu_1054_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3) + unsigned(ap_const_lv8_FF));
    nexttocap_7_fu_1112_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2) + unsigned(ap_const_lv8_FF));
    nexttocap_fu_706_p2 <= std_logic_vector(unsigned(postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7) + unsigned(ap_const_lv8_FF));
    p_Result_1_fu_802_p2 <= "1" when (and_ln825_1_fu_797_p2 = ap_const_lv4_0) else "0";
    p_Result_2_fu_860_p2 <= "1" when (and_ln825_2_fu_855_p2 = ap_const_lv4_0) else "0";
    p_Result_3_fu_918_p2 <= "1" when (and_ln825_3_fu_913_p2 = ap_const_lv4_0) else "0";
    p_Result_4_fu_976_p2 <= "1" when (and_ln825_4_fu_971_p2 = ap_const_lv4_0) else "0";
    p_Result_5_fu_1034_p2 <= "1" when (and_ln825_5_fu_1029_p2 = ap_const_lv4_0) else "0";
    p_Result_6_fu_1092_p2 <= "1" when (and_ln825_6_fu_1087_p2 = ap_const_lv4_0) else "0";
    p_Result_7_fu_1150_p2 <= "1" when (and_ln825_7_fu_1145_p2 = ap_const_lv4_0) else "0";
    p_Result_s_fu_744_p2 <= "1" when (and_ln825_fu_739_p2 = ap_const_lv4_0) else "0";

    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_6_reg_1576, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0 <= icmp_ln1065_6_reg_1576(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_6_reg_1576, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0 <= icmp_ln1065_6_reg_1576(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_5_reg_1559, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0 <= icmp_ln1065_5_reg_1559(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_5_reg_1559, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0 <= icmp_ln1065_5_reg_1559(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_4_reg_1542, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0 <= icmp_ln1065_4_reg_1542(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_4_reg_1542, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0 <= icmp_ln1065_4_reg_1542(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_3_reg_1525, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0 <= icmp_ln1065_3_reg_1525(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_3_reg_1525, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0 <= icmp_ln1065_3_reg_1525(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_2_reg_1508, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0 <= icmp_ln1065_2_reg_1508(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_2_reg_1508, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0 <= icmp_ln1065_2_reg_1508(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_1_reg_1491, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0 <= icmp_ln1065_1_reg_1491(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_1_reg_1491, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0 <= icmp_ln1065_1_reg_1491(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_reg_1474, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0 <= icmp_ln1065_reg_1474(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_reg_1474, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0 <= icmp_ln1065_reg_1474(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_7_reg_1593, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0 <= icmp_ln1065_7_reg_1593(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1065_7_reg_1593, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0 <= icmp_ln1065_7_reg_1593(0);
        else 
            postage_filter_stream_stream_ap_uint_stream_axis_0_iqprereg_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln825_1_fu_791_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_1_fu_788_p1(4-1 downto 0)))));
    shl_ln825_2_fu_849_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_2_fu_846_p1(4-1 downto 0)))));
    shl_ln825_3_fu_907_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_3_fu_904_p1(4-1 downto 0)))));
    shl_ln825_4_fu_965_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_4_fu_962_p1(4-1 downto 0)))));
    shl_ln825_5_fu_1023_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_5_fu_1020_p1(4-1 downto 0)))));
    shl_ln825_6_fu_1081_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_6_fu_1078_p1(4-1 downto 0)))));
    shl_ln825_7_fu_1139_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_7_fu_1136_p1(4-1 downto 0)))));
    shl_ln825_fu_733_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln825_fu_730_p1(4-1 downto 0)))));
    tmp_last_V_1_fu_770_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_1 = ap_const_lv8_1) else "0";
    tmp_last_V_2_fu_828_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture = ap_const_lv8_1) else "0";
    tmp_last_V_3_fu_886_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_6 = ap_const_lv8_1) else "0";
    tmp_last_V_4_fu_944_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_5 = ap_const_lv8_1) else "0";
    tmp_last_V_5_fu_1002_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_4 = ap_const_lv8_1) else "0";
    tmp_last_V_6_fu_1060_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_3 = ap_const_lv8_1) else "0";
    tmp_last_V_7_fu_1118_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_2 = ap_const_lv8_1) else "0";
    tmp_last_V_fu_712_p2 <= "1" when (postage_filter_stream_stream_ap_uint_stream_axis_0_tocapture_7 = ap_const_lv8_1) else "0";
    x_fu_552_p1 <= iniq_TDATA_int_regslice(32 - 1 downto 0);
    zext_ln825_1_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_1_reg_1397),4));
    zext_ln825_2_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_2_reg_1408),4));
    zext_ln825_3_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_3_reg_1419),4));
    zext_ln825_4_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_4_reg_1430),4));
    zext_ln825_5_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_5_reg_1441),4));
    zext_ln825_6_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_6_reg_1452),4));
    zext_ln825_7_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_7_reg_1463),4));
    zext_ln825_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lane_V_reg_1386),4));
end behav;
