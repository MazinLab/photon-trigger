-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity photon_maxi is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    photons_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    photons_TVALID : IN STD_LOGIC;
    photons_TREADY : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of photon_maxi is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "photon_maxi_photon_maxi,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=3.906000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.851380,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1767,HLS_SYN_LUT=3694,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv64_C8000 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000011001000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_1FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv17_200 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal photons_out : STD_LOGIC_VECTOR (63 downto 0);
    signal n_photons_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_photons_ce0 : STD_LOGIC;
    signal n_photons_we0 : STD_LOGIC;
    signal n_photons_d0 : STD_LOGIC_VECTOR (16 downto 0);
    signal active_buffer_ap_vld : STD_LOGIC;
    signal photons_per_buf : STD_LOGIC_VECTOR (16 downto 0);
    signal time_shift : STD_LOGIC_VECTOR (4 downto 0);
    signal p_ab : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln218_reg_626 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln244_reg_646 : STD_LOGIC_VECTOR (0 downto 0);
    signal photons_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_phi_mux_phi_ln208_phi_fu_238_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal time_shift_read_reg_581 : STD_LOGIC_VECTOR (4 downto 0);
    signal photons_per_buf_read_reg_587 : STD_LOGIC_VECTOR (16 downto 0);
    signal photons_out_read_reg_592 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_fu_301_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sh_prom_i_fu_331_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal sh_prom_i_reg_605 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln219_fu_343_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln219_reg_610 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_photons_addr_reg_616 : STD_LOGIC_VECTOR (0 downto 0);
    signal photon_time_V_fu_348_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal photon_time_V_reg_621 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp_ln218_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_reg_630 : STD_LOGIC_VECTOR (59 downto 0);
    signal div_fu_412_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal div_reg_636 : STD_LOGIC_VECTOR (14 downto 0);
    signal div_cast2_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal div_cast2_reg_641 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln244_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_650 : STD_LOGIC_VECTOR (59 downto 0);
    signal xor_ln208_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal burstcache_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal burstcache_ce0 : STD_LOGIC;
    signal burstcache_we0 : STD_LOGIC;
    signal burstcache_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal burstcache_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal burstcache_ce1 : STD_LOGIC;
    signal burstcache_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_ap_start : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_ap_done : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_ap_idle : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_ap_ready : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce0 : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce1 : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_ap_done : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_ap_idle : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_ap_ready : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce0 : STD_LOGIC;
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce1 : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal phi_ln208_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11 : BOOLEAN;
    signal seen_a_photon_reg_245 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_photon_maxi_Pipeline_burst512_fu_259_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal conv_i_fu_296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln216_fu_352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln219_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln244_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state19 : BOOLEAN;
    signal xor_ln886_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cache_i_fu_138 : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_i_1_fu_363_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal p_last_time_V_fu_142 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln993_fu_481_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_n_photons_V_fu_146 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_n_photons_V_1_fu_401_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_n_photons_V_3_fu_555_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal cmp_i_i83_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shft_V_fu_310_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp_i_i_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shft_V_1_fu_323_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln219_fu_335_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_282_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_374_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln219_fu_382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln219_1_fu_386_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1_fu_432_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln244_fu_440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln244_fu_444_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_fu_477_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp_ln1077_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1077_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln237_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rotate_buffer_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln886_fu_551_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal regslice_both_photons_U_apdone_blk : STD_LOGIC;
    signal photons_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photons_TVALID_int_regslice : STD_LOGIC;
    signal photons_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photons_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component photon_maxi_photon_maxi_Pipeline_burst512 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln219 : IN STD_LOGIC_VECTOR (59 downto 0);
        burstcache_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        burstcache_ce0 : OUT STD_LOGIC;
        burstcache_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        burstcache_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        burstcache_ce1 : OUT STD_LOGIC;
        burstcache_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component photon_maxi_photon_maxi_Pipeline_burstvar IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln244 : IN STD_LOGIC_VECTOR (59 downto 0);
        div : IN STD_LOGIC_VECTOR (14 downto 0);
        burstcache_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        burstcache_ce0 : OUT STD_LOGIC;
        burstcache_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        burstcache_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        burstcache_ce1 : OUT STD_LOGIC;
        burstcache_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component photon_maxi_burstcache_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component photon_maxi_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        photons_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        n_photons_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        n_photons_ce0 : IN STD_LOGIC;
        n_photons_we0 : IN STD_LOGIC;
        n_photons_d0 : IN STD_LOGIC_VECTOR (16 downto 0);
        active_buffer : IN STD_LOGIC_VECTOR (7 downto 0);
        active_buffer_ap_vld : IN STD_LOGIC;
        photons_per_buf : OUT STD_LOGIC_VECTOR (16 downto 0);
        time_shift : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component photon_maxi_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component photon_maxi_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    burstcache_U : component photon_maxi_burstcache_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => burstcache_address0,
        ce0 => burstcache_ce0,
        we0 => burstcache_we0,
        d0 => photons_TDATA_int_regslice,
        q0 => burstcache_q0,
        address1 => burstcache_address1,
        ce1 => burstcache_ce1,
        q1 => burstcache_q1);

    grp_photon_maxi_Pipeline_burst512_fu_259 : component photon_maxi_photon_maxi_Pipeline_burst512
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_photon_maxi_Pipeline_burst512_fu_259_ap_start,
        ap_done => grp_photon_maxi_Pipeline_burst512_fu_259_ap_done,
        ap_idle => grp_photon_maxi_Pipeline_burst512_fu_259_ap_idle,
        ap_ready => grp_photon_maxi_Pipeline_burst512_fu_259_ap_ready,
        m_axi_gmem_AWVALID => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv128_lc_1,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln219 => trunc_ln1_reg_630,
        burstcache_address0 => grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address0,
        burstcache_ce0 => grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce0,
        burstcache_q0 => burstcache_q0,
        burstcache_address1 => grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address1,
        burstcache_ce1 => grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce1,
        burstcache_q1 => burstcache_q1);

    grp_photon_maxi_Pipeline_burstvar_fu_267 : component photon_maxi_photon_maxi_Pipeline_burstvar
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start,
        ap_done => grp_photon_maxi_Pipeline_burstvar_fu_267_ap_done,
        ap_idle => grp_photon_maxi_Pipeline_burstvar_fu_267_ap_idle,
        ap_ready => grp_photon_maxi_Pipeline_burstvar_fu_267_ap_ready,
        m_axi_gmem_AWVALID => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv128_lc_1,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln244 => trunc_ln2_reg_650,
        div => div_reg_636,
        burstcache_address0 => grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address0,
        burstcache_ce0 => grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce0,
        burstcache_q0 => burstcache_q0,
        burstcache_address1 => grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address1,
        burstcache_ce1 => grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce1,
        burstcache_q1 => burstcache_q1);

    control_s_axi_U : component photon_maxi_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        photons_out => photons_out,
        n_photons_address0 => n_photons_address0,
        n_photons_ce0 => n_photons_ce0,
        n_photons_we0 => n_photons_we0,
        n_photons_d0 => n_photons_d0,
        active_buffer => conv_reg_600,
        active_buffer_ap_vld => active_buffer_ap_vld,
        photons_per_buf => photons_per_buf,
        time_shift => time_shift,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component photon_maxi_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 256,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_DW => 128,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => gmem_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWLEN => gmem_AWLEN,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WSTRB => gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    regslice_both_photons_U : component photon_maxi_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photons_TDATA,
        vld_in => photons_TVALID,
        ack_in => regslice_both_photons_U_ack_in,
        data_out => photons_TDATA_int_regslice,
        vld_out => photons_TVALID_int_regslice,
        ack_out => photons_TREADY_int_regslice,
        apdone_blk => regslice_both_photons_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_photon_maxi_Pipeline_burst512_fu_259_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_photon_maxi_Pipeline_burst512_fu_259_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_photon_maxi_Pipeline_burst512_fu_259_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_photon_maxi_Pipeline_burst512_fu_259_ap_ready = ap_const_logic_1)) then 
                    grp_photon_maxi_Pipeline_burst512_fu_259_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_photon_maxi_Pipeline_burstvar_fu_267_ap_ready = ap_const_logic_1)) then 
                    grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cache_i_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln218_fu_357_p2 = ap_const_lv1_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) then 
                cache_i_fu_138 <= cache_i_1_fu_363_p2;
            elsif ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln218_reg_626 = ap_const_lv1_1))) then 
                cache_i_fu_138 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    phi_ln208_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                phi_ln208_reg_234 <= xor_ln208_fu_514_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                phi_ln208_reg_234 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    seen_a_photon_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                seen_a_photon_reg_245 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                seen_a_photon_reg_245 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln219_reg_610 <= add_ln219_fu_343_p2;
                    conv_reg_600(0) <= conv_fu_301_p1(0);
                n_photons_addr_reg_616 <= conv_i_fu_296_p1(1 - 1 downto 0);
                    sh_prom_i_reg_605(4 downto 0) <= sh_prom_i_fu_331_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln208_phi_fu_238_p4 = ap_const_lv1_0))) then
                    div_cast2_reg_641(14 downto 0) <= div_cast2_fu_422_p1(14 downto 0);
                div_reg_636 <= cache_i_fu_138(15 downto 1);
                icmp_ln244_reg_646 <= icmp_ln244_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (phi_ln208_reg_234 = ap_const_lv1_1))) then
                icmp_ln218_reg_626 <= icmp_ln218_fu_357_p2;
                photon_time_V_reg_621 <= photon_time_V_fu_348_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                p_ab <= xor_ln886_fu_535_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                p_last_time_V_fu_142 <= trunc_ln993_fu_481_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln218_fu_357_p2 = ap_const_lv1_1) and (phi_ln208_reg_234 = ap_const_lv1_1))) then
                p_n_photons_V_fu_146 <= p_n_photons_V_1_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                photons_out_read_reg_592 <= photons_out;
                photons_per_buf_read_reg_587 <= photons_per_buf;
                time_shift_read_reg_581 <= time_shift;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln218_fu_357_p2 = ap_const_lv1_1) and (phi_ln208_reg_234 = ap_const_lv1_1))) then
                trunc_ln1_reg_630 <= add_ln219_1_fu_386_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln244_fu_426_p2 = ap_const_lv1_0) and (ap_phi_mux_phi_ln208_phi_fu_238_p4 = ap_const_lv1_0))) then
                trunc_ln2_reg_650 <= add_ln244_fu_444_p2(63 downto 4);
            end if;
        end if;
    end process;
    conv_reg_600(7 downto 1) <= "0000000";
    sh_prom_i_reg_605(35 downto 5) <= "0000000000000000000000000000000";
    div_cast2_reg_641(31 downto 15) <= "00000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state11, icmp_ln218_reg_626, ap_CS_fsm_state12, ap_CS_fsm_state19, icmp_ln244_reg_646, ap_CS_fsm_state3, ap_phi_mux_phi_ln208_phi_fu_238_p4, icmp_ln218_fu_357_p2, icmp_ln244_fu_426_p2, grp_photon_maxi_Pipeline_burst512_fu_259_ap_done, grp_photon_maxi_Pipeline_burstvar_fu_267_ap_done, gmem_AWREADY, gmem_BVALID, phi_ln208_reg_234, ap_CS_fsm_state6, ap_CS_fsm_state14, photons_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln244_fu_426_p2 = ap_const_lv1_1) and (ap_phi_mux_phi_ln208_phi_fu_238_p4 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln244_fu_426_p2 = ap_const_lv1_0) and (ap_phi_mux_phi_ln208_phi_fu_238_p4 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln218_fu_357_p2 = ap_const_lv1_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln218_fu_357_p2 = ap_const_lv1_1) and (phi_ln208_reg_234 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_photon_maxi_Pipeline_burst512_fu_259_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_photon_maxi_Pipeline_burstvar_fu_267_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    active_buffer_ap_vld_assign_proc : process(ap_CS_fsm_state3, phi_ln208_reg_234, photons_TVALID_int_regslice)
    begin
        if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (phi_ln208_reg_234 = ap_const_lv1_1))) then 
            active_buffer_ap_vld <= ap_const_logic_1;
        else 
            active_buffer_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln219_1_fu_386_p2 <= std_logic_vector(unsigned(zext_ln219_fu_382_p1) + unsigned(add_ln219_reg_610));
    add_ln219_fu_343_p2 <= std_logic_vector(unsigned(select_ln219_fu_335_p3) + unsigned(photons_out_read_reg_592));
    add_ln244_fu_444_p2 <= std_logic_vector(unsigned(zext_ln244_fu_440_p1) + unsigned(add_ln219_reg_610));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(icmp_ln218_reg_626, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_photon_maxi_Pipeline_burstvar_fu_267_ap_done)
    begin
        if ((grp_photon_maxi_Pipeline_burstvar_fu_267_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(icmp_ln244_reg_646, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0))) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(phi_ln208_reg_234, photons_TVALID_int_regslice)
    begin
        if (((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_photon_maxi_Pipeline_burst512_fu_259_ap_done)
    begin
        if ((grp_photon_maxi_Pipeline_burst512_fu_259_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state11_assign_proc : process(icmp_ln218_reg_626, gmem_BVALID)
    begin
                ap_block_state11 <= ((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1));
    end process;


    ap_block_state19_assign_proc : process(icmp_ln244_reg_646, gmem_BVALID)
    begin
                ap_block_state19 <= ((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0));
    end process;


    ap_block_state3_assign_proc : process(phi_ln208_reg_234, photons_TVALID_int_regslice)
    begin
                ap_block_state3 <= ((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_phi_ln208_phi_fu_238_p4 <= phi_ln208_reg_234;

    ap_ready_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    burstcache_address0_assign_proc : process(ap_CS_fsm_state3, grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address0, grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address0, ap_CS_fsm_state6, ap_CS_fsm_state14, zext_ln216_fu_352_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            burstcache_address0 <= zext_ln216_fu_352_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            burstcache_address0 <= grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            burstcache_address0 <= grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address0;
        else 
            burstcache_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    burstcache_address1_assign_proc : process(grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address1, grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address1, ap_CS_fsm_state6, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            burstcache_address1 <= grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            burstcache_address1 <= grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_address1;
        else 
            burstcache_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    burstcache_ce0_assign_proc : process(ap_CS_fsm_state3, grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce0, grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce0, phi_ln208_reg_234, ap_CS_fsm_state6, ap_CS_fsm_state14, photons_TVALID_int_regslice)
    begin
        if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            burstcache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            burstcache_ce0 <= grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            burstcache_ce0 <= grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce0;
        else 
            burstcache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    burstcache_ce1_assign_proc : process(grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce1, grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce1, ap_CS_fsm_state6, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            burstcache_ce1 <= grp_photon_maxi_Pipeline_burstvar_fu_267_burstcache_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            burstcache_ce1 <= grp_photon_maxi_Pipeline_burst512_fu_259_burstcache_ce1;
        else 
            burstcache_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    burstcache_we0_assign_proc : process(ap_CS_fsm_state3, phi_ln208_reg_234, photons_TVALID_int_regslice)
    begin
        if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (phi_ln208_reg_234 = ap_const_lv1_1))) then 
            burstcache_we0 <= ap_const_logic_1;
        else 
            burstcache_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cache_i_1_fu_363_p2 <= std_logic_vector(unsigned(cache_i_fu_138) + unsigned(ap_const_lv16_1));
    cmp_i_i83_fu_305_p2 <= "1" when (unsigned(time_shift_read_reg_581) < unsigned(ap_const_lv5_9)) else "0";
    cmp_i_i_fu_317_p2 <= "1" when (unsigned(shft_V_fu_310_p3) > unsigned(ap_const_lv5_14)) else "0";
    conv_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ab),8));
    conv_i_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ab),64));
    div_cast2_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div_fu_412_p4),32));
    div_fu_412_p4 <= cache_i_fu_138(15 downto 1);

    gmem_AWADDR_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWADDR, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWADDR, gmem_AWREADY, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14, sext_ln219_fu_459_p1, sext_ln244_fu_525_p1)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            gmem_AWADDR <= sext_ln244_fu_525_p1;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_AWADDR <= sext_ln219_fu_459_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_AWADDR <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_AWADDR <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWADDR;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWLEN_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, div_cast2_reg_641, grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWLEN, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWLEN, gmem_AWREADY, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            gmem_AWLEN <= div_cast2_reg_641;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_AWLEN <= ap_const_lv32_100;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_AWLEN <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_AWLEN <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWLEN;
        else 
            gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWVALID, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWVALID, gmem_AWREADY, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_AWVALID <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_AWVALID <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state11, icmp_ln218_reg_626, ap_CS_fsm_state19, icmp_ln244_reg_646, grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_BREADY, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_BREADY, gmem_BVALID, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln244_reg_646 = ap_const_lv1_0)) or (not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln218_reg_626 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln218_reg_626 = ap_const_lv1_1)))) then 
            gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_BREADY <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_BREADY <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WDATA_assign_proc : process(grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WDATA, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WDATA, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_WDATA <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_WDATA <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WDATA;
        else 
            gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_WSTRB_assign_proc : process(grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WSTRB, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WSTRB, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_WSTRB <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_WSTRB <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WSTRB;
        else 
            gmem_WSTRB <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WVALID, grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WVALID, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem_WVALID <= grp_photon_maxi_Pipeline_burstvar_fu_267_m_axi_gmem_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_WVALID <= grp_photon_maxi_Pipeline_burst512_fu_259_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state11, icmp_ln218_reg_626, ap_CS_fsm_state19, icmp_ln244_reg_646)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln244_reg_646 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln218_reg_626 = ap_const_lv1_1)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_282_p4 <= p_n_photons_V_fu_146(16 downto 1);
    grp_photon_maxi_Pipeline_burst512_fu_259_ap_start <= grp_photon_maxi_Pipeline_burst512_fu_259_ap_start_reg;
    grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start <= grp_photon_maxi_Pipeline_burstvar_fu_267_ap_start_reg;
    icmp_ln1069_fu_496_p2 <= "0" when (trunc_ln993_fu_481_p1 = p_last_time_V_fu_142) else "1";
    icmp_ln1077_fu_485_p2 <= "1" when (unsigned(p_n_photons_V_fu_146) < unsigned(photons_per_buf_read_reg_587)) else "0";
    icmp_ln218_fu_357_p2 <= "1" when (cache_i_fu_138 = ap_const_lv16_1FF) else "0";
    icmp_ln244_fu_426_p2 <= "1" when (div_fu_412_p4 = ap_const_lv15_0) else "0";

    n_photons_address0_assign_proc : process(ap_CS_fsm_state19, n_photons_addr_reg_616, zext_ln587_fu_546_p1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            n_photons_address0 <= n_photons_addr_reg_616;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            n_photons_address0 <= zext_ln587_fu_546_p1(1 - 1 downto 0);
        else 
            n_photons_address0 <= "X";
        end if; 
    end process;


    n_photons_ce0_assign_proc : process(ap_CS_fsm_state19, icmp_ln244_reg_646, gmem_BVALID, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            n_photons_ce0 <= ap_const_logic_1;
        else 
            n_photons_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    n_photons_d0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state20, p_n_photons_V_3_fu_555_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            n_photons_d0 <= p_n_photons_V_3_fu_555_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            n_photons_d0 <= ap_const_lv17_0;
        else 
            n_photons_d0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    n_photons_we0_assign_proc : process(ap_CS_fsm_state19, icmp_ln244_reg_646, gmem_BVALID, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln244_reg_646 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            n_photons_we0 <= ap_const_logic_1;
        else 
            n_photons_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln237_fu_502_p2 <= (xor_ln1077_fu_490_p2 or icmp_ln1069_fu_496_p2);
    p_n_photons_V_1_fu_401_p2 <= std_logic_vector(unsigned(p_n_photons_V_fu_146) + unsigned(ap_const_lv17_200));
    p_n_photons_V_3_fu_555_p2 <= std_logic_vector(unsigned(p_n_photons_V_fu_146) + unsigned(zext_ln886_fu_551_p1));
    photon_time_V_fu_348_p1 <= photons_TDATA_int_regslice(36 - 1 downto 0);

    photons_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, phi_ln208_reg_234, photons_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (phi_ln208_reg_234 = ap_const_lv1_1))) then 
            photons_TDATA_blk_n <= photons_TVALID_int_regslice;
        else 
            photons_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    photons_TREADY <= regslice_both_photons_U_ack_in;

    photons_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state3, phi_ln208_reg_234, photons_TVALID_int_regslice)
    begin
        if ((not(((photons_TVALID_int_regslice = ap_const_logic_0) and (phi_ln208_reg_234 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (phi_ln208_reg_234 = ap_const_lv1_1))) then 
            photons_TREADY_int_regslice <= ap_const_logic_1;
        else 
            photons_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    r_V_fu_477_p2 <= std_logic_vector(shift_right(unsigned(photon_time_V_reg_621),to_integer(unsigned('0' & sh_prom_i_reg_605(31-1 downto 0)))));
    rotate_buffer_fu_508_p2 <= (seen_a_photon_reg_245 and or_ln237_fu_502_p2);
    select_ln219_fu_335_p3 <= 
        ap_const_lv64_C8000 when (p_ab(0) = '1') else 
        ap_const_lv64_0;
        sext_ln219_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_630),64));

        sext_ln244_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_650),64));

    sh_prom_i_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shft_V_1_fu_323_p3),36));
    shft_V_1_fu_323_p3 <= 
        ap_const_lv5_14 when (cmp_i_i_fu_317_p2(0) = '1') else 
        shft_V_fu_310_p3;
    shft_V_fu_310_p3 <= 
        ap_const_lv5_9 when (cmp_i_i83_fu_305_p2(0) = '1') else 
        time_shift_read_reg_581;
    shl_ln1_fu_432_p3 <= (grp_fu_282_p4 & ap_const_lv4_0);
    shl_ln_fu_374_p3 <= (grp_fu_282_p4 & ap_const_lv4_0);
    trunc_ln993_fu_481_p1 <= r_V_fu_477_p2(27 - 1 downto 0);
    xor_ln1077_fu_490_p2 <= (icmp_ln1077_fu_485_p2 xor ap_const_lv1_1);
    xor_ln208_fu_514_p2 <= (rotate_buffer_fu_508_p2 xor ap_const_lv1_1);
    xor_ln886_fu_535_p2 <= (p_ab xor ap_const_lv1_1);
    zext_ln216_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cache_i_fu_138),64));
    zext_ln219_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_374_p3),64));
    zext_ln244_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_432_p3),64));
    zext_ln587_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln886_fu_535_p2),64));
    zext_ln886_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cache_i_fu_138),17));
end behav;
