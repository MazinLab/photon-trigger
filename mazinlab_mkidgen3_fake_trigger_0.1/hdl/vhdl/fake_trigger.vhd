-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fake_trigger is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 13;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    timestamp_TDATA : IN STD_LOGIC_VECTOR (39 downto 0);
    timestamp_TVALID : IN STD_LOGIC;
    timestamp_TREADY : OUT STD_LOGIC;
    photons_lane_0_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    photons_lane_0_TVALID : OUT STD_LOGIC;
    photons_lane_0_TREADY : IN STD_LOGIC;
    photons_lane_1_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    photons_lane_1_TVALID : OUT STD_LOGIC;
    photons_lane_1_TREADY : IN STD_LOGIC;
    photons_lane_2_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    photons_lane_2_TVALID : OUT STD_LOGIC;
    photons_lane_2_TREADY : IN STD_LOGIC;
    photons_lane_3_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    photons_lane_3_TVALID : OUT STD_LOGIC;
    photons_lane_3_TREADY : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of fake_trigger is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fake_trigger_fake_trigger,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.242000,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=714,HLS_SYN_LUT=703,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal threshoffs_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal threshoffs_ce0 : STD_LOGIC;
    signal threshoffs_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal group_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal since_cache_since_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal since_cache_since_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal since_cache_since_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal since_cache_since : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal since_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal since_data_ce0 : STD_LOGIC;
    signal since_data_we0 : STD_LOGIC;
    signal since_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal since_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal since_data_ce1 : STD_LOGIC;
    signal since_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal photon_cache_lane_time_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal photon_cache_lane_phase_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal photon_cache_lane_time_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal photon_cache_lane_phase_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal photon_cache_lane_time_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal photon_cache_lane_phase : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal photon_cache_lane_time : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal photon_cache_lane_phase_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal photon_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal photon_data_ce0 : STD_LOGIC;
    signal photon_data_we0 : STD_LOGIC;
    signal photon_data_d0 : STD_LOGIC_VECTOR (95 downto 0);
    signal photon_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal photon_data_ce1 : STD_LOGIC;
    signal photon_data_q1 : STD_LOGIC_VECTOR (95 downto 0);
    signal phase : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal timestamp_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal photons_lane_0_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal emit_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal emit_reg_977_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal photons_lane_1_TDATA_blk_n : STD_LOGIC;
    signal emit_1_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal emit_1_reg_981_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal photons_lane_2_TDATA_blk_n : STD_LOGIC;
    signal emit_2_reg_985 : STD_LOGIC_VECTOR (0 downto 0);
    signal emit_2_reg_985_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal photons_lane_3_TDATA_blk_n : STD_LOGIC;
    signal emit_3_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal emit_3_reg_989_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_265_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_reg_842 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal regslice_both_photons_lane_0_U_apdone_blk : STD_LOGIC;
    signal regslice_both_photons_lane_1_U_apdone_blk : STD_LOGIC;
    signal regslice_both_photons_lane_2_U_apdone_blk : STD_LOGIC;
    signal regslice_both_photons_lane_3_U_apdone_blk : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_842_pp0_iter1_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_reg_842_pp0_iter2_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_s_reg_850 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_850_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_850_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal last_group_fu_308_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal last_group_reg_872 : STD_LOGIC_VECTOR (8 downto 0);
    signal sinces_since_fu_313_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_reg_877 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_1_reg_884 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_2_reg_891 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_3_reg_898 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_4_fu_347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_4_reg_905 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_4_reg_905_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_phase_6_reg_911 : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_phase_6_reg_911_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_time_1_reg_917 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_1_reg_917_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_phase_reg_923 : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_phase_reg_923_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_time_2_reg_929 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_2_reg_929_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_phase_4_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_phase_4_reg_935_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_time_3_reg_941 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_3_reg_941_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_phase_5_reg_947 : STD_LOGIC_VECTOR (15 downto 0);
    signal photons_lane_phase_5_reg_947_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal hoffs_reg_953 : STD_LOGIC_VECTOR (7 downto 0);
    signal hoffs_1_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal hoffs_2_reg_965 : STD_LOGIC_VECTOR (7 downto 0);
    signal hoffs_3_reg_971 : STD_LOGIC_VECTOR (7 downto 0);
    signal emit_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal emit_1_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal emit_2_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal emit_3_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal zext_ln587_1_fu_273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln886_fu_280_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sinces_since_5_fu_563_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_7_fu_591_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_9_fu_619_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sinces_since_11_fu_647_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_fu_570_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_5_fu_598_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_6_fu_626_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal photons_lane_time_7_fu_654_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln265_fu_296_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trig_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_since_fu_558_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trig_1_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_since_1_fu_586_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trig_2_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_since_2_fu_614_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trig_3_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_since_3_fu_642_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_fu_735_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal photon_out_time_V_fu_738_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_1_fu_743_p5 : STD_LOGIC_VECTOR (62 downto 0);
    signal photon_out_id_V_fu_728_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln232_1_fu_764_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal photon_out_id_V_1_fu_758_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal photon_out_time_V_1_fu_767_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_3_fu_772_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln232_2_fu_792_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal photon_out_id_V_2_fu_786_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal photon_out_time_V_2_fu_795_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_5_fu_800_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln232_3_fu_820_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal photon_out_id_V_3_fu_814_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal photon_out_time_V_3_fu_823_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_7_fu_828_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_timestamp_U_apdone_blk : STD_LOGIC;
    signal timestamp_TDATA_int_regslice : STD_LOGIC_VECTOR (39 downto 0);
    signal timestamp_TVALID_int_regslice : STD_LOGIC;
    signal timestamp_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_timestamp_U_ack_in : STD_LOGIC;
    signal photons_lane_0_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photons_lane_0_TVALID_int_regslice : STD_LOGIC;
    signal photons_lane_0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photons_lane_0_U_vld_out : STD_LOGIC;
    signal photons_lane_1_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photons_lane_1_TVALID_int_regslice : STD_LOGIC;
    signal photons_lane_1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photons_lane_1_U_vld_out : STD_LOGIC;
    signal photons_lane_2_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photons_lane_2_TVALID_int_regslice : STD_LOGIC;
    signal photons_lane_2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photons_lane_2_U_vld_out : STD_LOGIC;
    signal photons_lane_3_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photons_lane_3_TVALID_int_regslice : STD_LOGIC;
    signal photons_lane_3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photons_lane_3_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fake_trigger_since_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fake_trigger_photon_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (95 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (95 downto 0) );
    end component;


    component fake_trigger_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        threshoffs_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        threshoffs_ce0 : IN STD_LOGIC;
        threshoffs_q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fake_trigger_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    since_data_U : component fake_trigger_since_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => since_data_address0,
        ce0 => since_data_ce0,
        we0 => since_data_we0,
        d0 => since_data_d0,
        address1 => since_data_address1,
        ce1 => since_data_ce1,
        q1 => since_data_q1);

    photon_data_U : component fake_trigger_photon_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 96,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => photon_data_address0,
        ce0 => photon_data_ce0,
        we0 => photon_data_we0,
        d0 => photon_data_d0,
        address1 => photon_data_address1,
        ce1 => photon_data_ce1,
        q1 => photon_data_q1);

    control_s_axi_U : component fake_trigger_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        threshoffs_address0 => threshoffs_address0,
        threshoffs_ce0 => threshoffs_ce0,
        threshoffs_q0 => threshoffs_q0);

    regslice_both_timestamp_U : component fake_trigger_regslice_both
    generic map (
        DataWidth => 40)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => timestamp_TDATA,
        vld_in => timestamp_TVALID,
        ack_in => regslice_both_timestamp_U_ack_in,
        data_out => timestamp_TDATA_int_regslice,
        vld_out => timestamp_TVALID_int_regslice,
        ack_out => timestamp_TREADY_int_regslice,
        apdone_blk => regslice_both_timestamp_U_apdone_blk);

    regslice_both_photons_lane_0_U : component fake_trigger_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photons_lane_0_TDATA_int_regslice,
        vld_in => photons_lane_0_TVALID_int_regslice,
        ack_in => photons_lane_0_TREADY_int_regslice,
        data_out => photons_lane_0_TDATA,
        vld_out => regslice_both_photons_lane_0_U_vld_out,
        ack_out => photons_lane_0_TREADY,
        apdone_blk => regslice_both_photons_lane_0_U_apdone_blk);

    regslice_both_photons_lane_1_U : component fake_trigger_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photons_lane_1_TDATA_int_regslice,
        vld_in => photons_lane_1_TVALID_int_regslice,
        ack_in => photons_lane_1_TREADY_int_regslice,
        data_out => photons_lane_1_TDATA,
        vld_out => regslice_both_photons_lane_1_U_vld_out,
        ack_out => photons_lane_1_TREADY,
        apdone_blk => regslice_both_photons_lane_1_U_apdone_blk);

    regslice_both_photons_lane_2_U : component fake_trigger_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photons_lane_2_TDATA_int_regslice,
        vld_in => photons_lane_2_TVALID_int_regslice,
        ack_in => photons_lane_2_TREADY_int_regslice,
        data_out => photons_lane_2_TDATA,
        vld_out => regslice_both_photons_lane_2_U_vld_out,
        ack_out => photons_lane_2_TREADY,
        apdone_blk => regslice_both_photons_lane_2_U_apdone_blk);

    regslice_both_photons_lane_3_U : component fake_trigger_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photons_lane_3_TDATA_int_regslice,
        vld_in => photons_lane_3_TVALID_int_regslice,
        ack_in => photons_lane_3_TREADY_int_regslice,
        data_out => photons_lane_3_TDATA,
        vld_out => regslice_both_photons_lane_3_U_vld_out,
        ack_out => photons_lane_3_TREADY,
        apdone_blk => regslice_both_photons_lane_3_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                emit_1_reg_981 <= emit_1_fu_581_p2;
                emit_1_reg_981_pp0_iter3_reg <= emit_1_reg_981;
                emit_2_reg_985 <= emit_2_fu_609_p2;
                emit_2_reg_985_pp0_iter3_reg <= emit_2_reg_985;
                emit_3_reg_989 <= emit_3_fu_637_p2;
                emit_3_reg_989_pp0_iter3_reg <= emit_3_reg_989;
                emit_reg_977 <= emit_fu_553_p2;
                emit_reg_977_pp0_iter3_reg <= emit_reg_977;
                p_Val2_s_reg_850_pp0_iter2_reg <= p_Val2_s_reg_850_pp0_iter1_reg;
                photons_lane_phase_4_reg_935_pp0_iter2_reg <= photons_lane_phase_4_reg_935;
                photons_lane_phase_5_reg_947_pp0_iter2_reg <= photons_lane_phase_5_reg_947;
                photons_lane_phase_6_reg_911_pp0_iter2_reg <= photons_lane_phase_6_reg_911;
                photons_lane_phase_reg_923_pp0_iter2_reg <= photons_lane_phase_reg_923;
                photons_lane_time_1_reg_917_pp0_iter2_reg <= photons_lane_time_1_reg_917;
                photons_lane_time_2_reg_929_pp0_iter2_reg <= photons_lane_time_2_reg_929;
                photons_lane_time_3_reg_941_pp0_iter2_reg <= photons_lane_time_3_reg_941;
                photons_lane_time_4_reg_905_pp0_iter2_reg <= photons_lane_time_4_reg_905;
                tmp_reg_842_pp0_iter2_reg <= tmp_reg_842_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                group_V <= add_ln886_fu_280_p2;
                phase <= add_ln265_fu_296_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hoffs_1_reg_959 <= threshoffs_q0(31 downto 24);
                hoffs_2_reg_965 <= threshoffs_q0(47 downto 40);
                hoffs_3_reg_971 <= threshoffs_q0(63 downto 56);
                hoffs_reg_953 <= threshoffs_q0(15 downto 8);
                last_group_reg_872 <= last_group_fu_308_p2;
                p_Val2_s_reg_850 <= group_V;
                p_Val2_s_reg_850_pp0_iter1_reg <= p_Val2_s_reg_850;
                photons_lane_phase_4_reg_935 <= photon_data_q1(71 downto 56);
                photons_lane_phase_5_reg_947 <= photon_data_q1(95 downto 80);
                photons_lane_phase_6_reg_911 <= photon_data_q1(23 downto 8);
                photons_lane_phase_reg_923 <= photon_data_q1(47 downto 32);
                photons_lane_time_1_reg_917 <= photon_data_q1(31 downto 24);
                photons_lane_time_2_reg_929 <= photon_data_q1(55 downto 48);
                photons_lane_time_3_reg_941 <= photon_data_q1(79 downto 72);
                photons_lane_time_4_reg_905 <= photons_lane_time_4_fu_347_p1;
                sinces_since_1_reg_884 <= since_data_q1(15 downto 8);
                sinces_since_2_reg_891 <= since_data_q1(23 downto 16);
                sinces_since_3_reg_898 <= since_data_q1(31 downto 24);
                sinces_since_reg_877 <= sinces_since_fu_313_p1;
                tmp_reg_842 <= tmp_fu_265_p1;
                tmp_reg_842_pp0_iter1_reg <= tmp_reg_842;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                photon_cache_lane_phase <= photons_lane_phase_4_reg_935;
                photon_cache_lane_phase_1 <= photons_lane_phase_reg_923;
                photon_cache_lane_phase_2 <= photons_lane_phase_6_reg_911;
                photon_cache_lane_phase_3 <= photons_lane_phase_5_reg_947;
                photon_cache_lane_time <= photons_lane_time_7_fu_654_p3;
                photon_cache_lane_time_1 <= photons_lane_time_6_fu_626_p3;
                photon_cache_lane_time_2 <= photons_lane_time_5_fu_598_p3;
                photon_cache_lane_time_3 <= photons_lane_time_fu_570_p3;
                since_cache_since <= sinces_since_11_fu_647_p3;
                since_cache_since_1 <= sinces_since_9_fu_619_p3;
                since_cache_since_2 <= sinces_since_7_fu_591_p3;
                since_cache_since_3 <= sinces_since_5_fu_563_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln265_fu_296_p2 <= std_logic_vector(unsigned(phase) + unsigned(ap_const_lv16_1));
    add_ln886_fu_280_p2 <= std_logic_vector(unsigned(group_V) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter3, emit_reg_977, ap_enable_reg_pp0_iter4, emit_reg_977_pp0_iter3_reg, emit_1_reg_981, emit_1_reg_981_pp0_iter3_reg, emit_2_reg_985, emit_2_reg_985_pp0_iter3_reg, emit_3_reg_989, emit_3_reg_989_pp0_iter3_reg, regslice_both_photons_lane_0_U_apdone_blk, regslice_both_photons_lane_1_U_apdone_blk, regslice_both_photons_lane_2_U_apdone_blk, regslice_both_photons_lane_3_U_apdone_blk, timestamp_TVALID_int_regslice, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((regslice_both_photons_lane_3_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_0_U_apdone_blk = ap_const_logic_1) or ((emit_reg_977_pp0_iter3_reg = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981_pp0_iter3_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((emit_reg_977 = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989 = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985 = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_const_logic_1) and (timestamp_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, emit_reg_977, ap_enable_reg_pp0_iter4, emit_reg_977_pp0_iter3_reg, emit_1_reg_981, emit_1_reg_981_pp0_iter3_reg, emit_2_reg_985, emit_2_reg_985_pp0_iter3_reg, emit_3_reg_989, emit_3_reg_989_pp0_iter3_reg, ap_block_state4_io, regslice_both_photons_lane_0_U_apdone_blk, regslice_both_photons_lane_1_U_apdone_blk, regslice_both_photons_lane_2_U_apdone_blk, regslice_both_photons_lane_3_U_apdone_blk, ap_block_state5_io, timestamp_TVALID_int_regslice, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or (regslice_both_photons_lane_3_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_0_U_apdone_blk = ap_const_logic_1) or ((emit_reg_977_pp0_iter3_reg = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981_pp0_iter3_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((emit_reg_977 = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989 = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985 = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_const_logic_1) and (timestamp_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, emit_reg_977, ap_enable_reg_pp0_iter4, emit_reg_977_pp0_iter3_reg, emit_1_reg_981, emit_1_reg_981_pp0_iter3_reg, emit_2_reg_985, emit_2_reg_985_pp0_iter3_reg, emit_3_reg_989, emit_3_reg_989_pp0_iter3_reg, ap_block_state4_io, regslice_both_photons_lane_0_U_apdone_blk, regslice_both_photons_lane_1_U_apdone_blk, regslice_both_photons_lane_2_U_apdone_blk, regslice_both_photons_lane_3_U_apdone_blk, ap_block_state5_io, timestamp_TVALID_int_regslice, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or (regslice_both_photons_lane_3_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_0_U_apdone_blk = ap_const_logic_1) or ((emit_reg_977_pp0_iter3_reg = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981_pp0_iter3_reg = ap_const_lv1_1)))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((emit_reg_977 = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989 = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985 = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_const_logic_1) and (timestamp_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(timestamp_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (timestamp_TVALID_int_regslice = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(emit_reg_977, emit_1_reg_981, emit_2_reg_985, emit_3_reg_989, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_state4_io <= (((emit_reg_977 = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989 = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985 = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981 = ap_const_lv1_1)));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(emit_reg_977, emit_1_reg_981, emit_2_reg_985, emit_3_reg_989, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (((emit_reg_977 = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989 = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985 = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981 = ap_const_lv1_1)));
    end process;


    ap_block_state5_io_assign_proc : process(emit_reg_977_pp0_iter3_reg, emit_1_reg_981_pp0_iter3_reg, emit_2_reg_985_pp0_iter3_reg, emit_3_reg_989_pp0_iter3_reg, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_state5_io <= (((emit_reg_977_pp0_iter3_reg = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981_pp0_iter3_reg = ap_const_lv1_1)));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(emit_reg_977_pp0_iter3_reg, emit_1_reg_981_pp0_iter3_reg, emit_2_reg_985_pp0_iter3_reg, emit_3_reg_989_pp0_iter3_reg, regslice_both_photons_lane_0_U_apdone_blk, regslice_both_photons_lane_1_U_apdone_blk, regslice_both_photons_lane_2_U_apdone_blk, regslice_both_photons_lane_3_U_apdone_blk, photons_lane_0_TREADY_int_regslice, photons_lane_1_TREADY_int_regslice, photons_lane_2_TREADY_int_regslice, photons_lane_3_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((regslice_both_photons_lane_3_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_photons_lane_0_U_apdone_blk = ap_const_logic_1) or ((emit_reg_977_pp0_iter3_reg = ap_const_lv1_1) and (photons_lane_0_TREADY_int_regslice = ap_const_logic_0)) or ((photons_lane_3_TREADY_int_regslice = ap_const_logic_0) and (emit_3_reg_989_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_2_TREADY_int_regslice = ap_const_logic_0) and (emit_2_reg_985_pp0_iter3_reg = ap_const_lv1_1)) or ((photons_lane_1_TREADY_int_regslice = ap_const_logic_0) and (emit_1_reg_981_pp0_iter3_reg = ap_const_lv1_1)));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    emit_1_fu_581_p2 <= "1" when (sinces_since_1_reg_884 = ap_const_lv8_1) else "0";
    emit_2_fu_609_p2 <= "1" when (sinces_since_2_reg_891 = ap_const_lv8_1) else "0";
    emit_3_fu_637_p2 <= "1" when (sinces_since_3_reg_898 = ap_const_lv8_1) else "0";
    emit_fu_553_p2 <= "1" when (sinces_since_reg_877 = ap_const_lv8_1) else "0";
    last_group_fu_308_p2 <= std_logic_vector(unsigned(p_Val2_s_reg_850) + unsigned(ap_const_lv9_1FF));
    new_since_1_fu_586_p2 <= std_logic_vector(unsigned(sinces_since_1_reg_884) + unsigned(ap_const_lv8_FF));
    new_since_2_fu_614_p2 <= std_logic_vector(unsigned(sinces_since_2_reg_891) + unsigned(ap_const_lv8_FF));
    new_since_3_fu_642_p2 <= std_logic_vector(unsigned(sinces_since_3_reg_898) + unsigned(ap_const_lv8_FF));
    new_since_fu_558_p2 <= std_logic_vector(unsigned(sinces_since_reg_877) + unsigned(ap_const_lv8_FF));
    photon_data_address0 <= zext_ln587_fu_461_p1(9 - 1 downto 0);
    photon_data_address1 <= zext_ln587_1_fu_273_p1(9 - 1 downto 0);

    photon_data_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            photon_data_ce0 <= ap_const_logic_1;
        else 
            photon_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    photon_data_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            photon_data_ce1 <= ap_const_logic_1;
        else 
            photon_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    photon_data_d0 <= (((((((photon_cache_lane_phase_3 & photon_cache_lane_time) & photon_cache_lane_phase) & photon_cache_lane_time_1) & photon_cache_lane_phase_1) & photon_cache_lane_time_2) & photon_cache_lane_phase_2) & photon_cache_lane_time_3);

    photon_data_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            photon_data_we0 <= ap_const_logic_1;
        else 
            photon_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    photon_out_id_V_1_fu_758_p2 <= (photon_out_id_V_fu_728_p3 or ap_const_lv11_1);
    photon_out_id_V_2_fu_786_p2 <= (photon_out_id_V_fu_728_p3 or ap_const_lv11_2);
    photon_out_id_V_3_fu_814_p2 <= (photon_out_id_V_fu_728_p3 or ap_const_lv11_3);
    photon_out_id_V_fu_728_p3 <= (p_Val2_s_reg_850_pp0_iter2_reg & ap_const_lv2_0);
    photon_out_time_V_1_fu_767_p2 <= std_logic_vector(unsigned(tmp_reg_842_pp0_iter2_reg) - unsigned(zext_ln232_1_fu_764_p1));
    photon_out_time_V_2_fu_795_p2 <= std_logic_vector(unsigned(tmp_reg_842_pp0_iter2_reg) - unsigned(zext_ln232_2_fu_792_p1));
    photon_out_time_V_3_fu_823_p2 <= std_logic_vector(unsigned(tmp_reg_842_pp0_iter2_reg) - unsigned(zext_ln232_3_fu_820_p1));
    photon_out_time_V_fu_738_p2 <= std_logic_vector(unsigned(tmp_reg_842_pp0_iter2_reg) - unsigned(zext_ln232_fu_735_p1));

    photons_lane_0_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, emit_reg_977, ap_enable_reg_pp0_iter4, emit_reg_977_pp0_iter3_reg, photons_lane_0_TREADY_int_regslice)
    begin
        if ((((emit_reg_977_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((emit_reg_977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            photons_lane_0_TDATA_blk_n <= photons_lane_0_TREADY_int_regslice;
        else 
            photons_lane_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    photons_lane_0_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_743_p5),64));
    photons_lane_0_TVALID <= regslice_both_photons_lane_0_U_vld_out;

    photons_lane_0_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, emit_reg_977, ap_block_pp0_stage0_11001)
    begin
        if (((emit_reg_977 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            photons_lane_0_TVALID_int_regslice <= ap_const_logic_1;
        else 
            photons_lane_0_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    photons_lane_1_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, emit_1_reg_981, emit_1_reg_981_pp0_iter3_reg, photons_lane_1_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (emit_1_reg_981_pp0_iter3_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (emit_1_reg_981 = ap_const_lv1_1)))) then 
            photons_lane_1_TDATA_blk_n <= photons_lane_1_TREADY_int_regslice;
        else 
            photons_lane_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    photons_lane_1_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_772_p4),64));
    photons_lane_1_TVALID <= regslice_both_photons_lane_1_U_vld_out;

    photons_lane_1_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, emit_1_reg_981, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (emit_1_reg_981 = ap_const_lv1_1))) then 
            photons_lane_1_TVALID_int_regslice <= ap_const_logic_1;
        else 
            photons_lane_1_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    photons_lane_2_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, emit_2_reg_985, emit_2_reg_985_pp0_iter3_reg, photons_lane_2_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (emit_2_reg_985_pp0_iter3_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (emit_2_reg_985 = ap_const_lv1_1)))) then 
            photons_lane_2_TDATA_blk_n <= photons_lane_2_TREADY_int_regslice;
        else 
            photons_lane_2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    photons_lane_2_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_800_p4),64));
    photons_lane_2_TVALID <= regslice_both_photons_lane_2_U_vld_out;

    photons_lane_2_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, emit_2_reg_985, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (emit_2_reg_985 = ap_const_lv1_1))) then 
            photons_lane_2_TVALID_int_regslice <= ap_const_logic_1;
        else 
            photons_lane_2_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    photons_lane_3_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, emit_3_reg_989, emit_3_reg_989_pp0_iter3_reg, photons_lane_3_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (emit_3_reg_989_pp0_iter3_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (emit_3_reg_989 = ap_const_lv1_1)))) then 
            photons_lane_3_TDATA_blk_n <= photons_lane_3_TREADY_int_regslice;
        else 
            photons_lane_3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    photons_lane_3_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_828_p4),64));
    photons_lane_3_TVALID <= regslice_both_photons_lane_3_U_vld_out;

    photons_lane_3_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter3, emit_3_reg_989, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (emit_3_reg_989 = ap_const_lv1_1))) then 
            photons_lane_3_TVALID_int_regslice <= ap_const_logic_1;
        else 
            photons_lane_3_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    photons_lane_time_4_fu_347_p1 <= photon_data_q1(8 - 1 downto 0);
    photons_lane_time_5_fu_598_p3 <= 
        hoffs_1_reg_959 when (trig_1_fu_576_p2(0) = '1') else 
        photons_lane_time_1_reg_917;
    photons_lane_time_6_fu_626_p3 <= 
        hoffs_2_reg_965 when (trig_2_fu_604_p2(0) = '1') else 
        photons_lane_time_2_reg_929;
    photons_lane_time_7_fu_654_p3 <= 
        hoffs_3_reg_971 when (trig_3_fu_632_p2(0) = '1') else 
        photons_lane_time_3_reg_941;
    photons_lane_time_fu_570_p3 <= 
        hoffs_reg_953 when (trig_fu_548_p2(0) = '1') else 
        photons_lane_time_4_reg_905;
    since_data_address0 <= zext_ln587_fu_461_p1(9 - 1 downto 0);
    since_data_address1 <= zext_ln587_1_fu_273_p1(9 - 1 downto 0);

    since_data_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            since_data_ce0 <= ap_const_logic_1;
        else 
            since_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    since_data_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            since_data_ce1 <= ap_const_logic_1;
        else 
            since_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    since_data_d0 <= (((since_cache_since & since_cache_since_1) & since_cache_since_2) & since_cache_since_3);

    since_data_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            since_data_we0 <= ap_const_logic_1;
        else 
            since_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sinces_since_11_fu_647_p3 <= 
        hoffs_3_reg_971 when (trig_3_fu_632_p2(0) = '1') else 
        new_since_3_fu_642_p2;
    sinces_since_5_fu_563_p3 <= 
        hoffs_reg_953 when (trig_fu_548_p2(0) = '1') else 
        new_since_fu_558_p2;
    sinces_since_7_fu_591_p3 <= 
        hoffs_1_reg_959 when (trig_1_fu_576_p2(0) = '1') else 
        new_since_1_fu_586_p2;
    sinces_since_9_fu_619_p3 <= 
        hoffs_2_reg_965 when (trig_2_fu_604_p2(0) = '1') else 
        new_since_2_fu_614_p2;
    sinces_since_fu_313_p1 <= since_data_q1(8 - 1 downto 0);
    threshoffs_address0 <= zext_ln587_1_fu_273_p1(9 - 1 downto 0);

    threshoffs_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            threshoffs_ce0 <= ap_const_logic_1;
        else 
            threshoffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    timestamp_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, timestamp_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            timestamp_TDATA_blk_n <= timestamp_TVALID_int_regslice;
        else 
            timestamp_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    timestamp_TREADY <= regslice_both_timestamp_U_ack_in;

    timestamp_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            timestamp_TREADY_int_regslice <= ap_const_logic_1;
        else 
            timestamp_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_743_p5 <= (((p_Val2_s_reg_850_pp0_iter2_reg & ap_const_lv2_0) & photons_lane_phase_6_reg_911_pp0_iter2_reg) & photon_out_time_V_fu_738_p2);
    tmp_3_fu_772_p4 <= ((photon_out_id_V_1_fu_758_p2 & photons_lane_phase_reg_923_pp0_iter2_reg) & photon_out_time_V_1_fu_767_p2);
    tmp_5_fu_800_p4 <= ((photon_out_id_V_2_fu_786_p2 & photons_lane_phase_4_reg_935_pp0_iter2_reg) & photon_out_time_V_2_fu_795_p2);
    tmp_7_fu_828_p4 <= ((photon_out_id_V_3_fu_814_p2 & photons_lane_phase_5_reg_947_pp0_iter2_reg) & photon_out_time_V_3_fu_823_p2);
    tmp_fu_265_p1 <= timestamp_TDATA_int_regslice(36 - 1 downto 0);
    trig_1_fu_576_p2 <= "1" when (sinces_since_1_reg_884 = ap_const_lv8_0) else "0";
    trig_2_fu_604_p2 <= "1" when (sinces_since_2_reg_891 = ap_const_lv8_0) else "0";
    trig_3_fu_632_p2 <= "1" when (sinces_since_3_reg_898 = ap_const_lv8_0) else "0";
    trig_fu_548_p2 <= "1" when (sinces_since_reg_877 = ap_const_lv8_0) else "0";
    zext_ln232_1_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(photons_lane_time_1_reg_917_pp0_iter2_reg),36));
    zext_ln232_2_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(photons_lane_time_2_reg_929_pp0_iter2_reg),36));
    zext_ln232_3_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(photons_lane_time_3_reg_941_pp0_iter2_reg),36));
    zext_ln232_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(photons_lane_time_4_reg_905_pp0_iter2_reg),36));
    zext_ln587_1_fu_273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(group_V),64));
    zext_ln587_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_group_reg_872),64));
end behav;
