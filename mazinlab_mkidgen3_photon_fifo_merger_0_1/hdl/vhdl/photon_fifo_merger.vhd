-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity photon_fifo_merger is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    photon_fifos_0_dout : IN STD_LOGIC_VECTOR (43 downto 0);
    photon_fifos_0_empty_n : IN STD_LOGIC;
    photon_fifos_0_read : OUT STD_LOGIC;
    photon_fifos_1_dout : IN STD_LOGIC_VECTOR (43 downto 0);
    photon_fifos_1_empty_n : IN STD_LOGIC;
    photon_fifos_1_read : OUT STD_LOGIC;
    photon_fifos_2_dout : IN STD_LOGIC_VECTOR (43 downto 0);
    photon_fifos_2_empty_n : IN STD_LOGIC;
    photon_fifos_2_read : OUT STD_LOGIC;
    photon_fifos_3_dout : IN STD_LOGIC_VECTOR (43 downto 0);
    photon_fifos_3_empty_n : IN STD_LOGIC;
    photon_fifos_3_read : OUT STD_LOGIC;
    photons_TDATA : OUT STD_LOGIC_VECTOR (47 downto 0);
    photons_TVALID : OUT STD_LOGIC;
    photons_TREADY : IN STD_LOGIC );
end;


architecture behav of photon_fifo_merger is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "photon_fifo_merger_photon_fifo_merger,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.663570,HLS_SYN_LAT=5,HLS_SYN_TPT=4,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=185,HLS_SYN_LUT=99,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal photons_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal read_reg_121 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal read_1_reg_135 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal read_2_reg_149 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal read_3_reg_163 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_125 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_015_fu_81_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_photons_U_apdone_blk : STD_LOGIC;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_1_reg_139 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_016_fu_93_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_2_reg_153 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_017_fu_105_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_3_reg_167 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_0_fu_117_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal photon_fifos_0_read_nbread_fu_42_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal photon_fifos_1_read_nbread_fu_55_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal photon_fifos_2_read_nbread_fu_61_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal photon_fifos_3_read_nbread_fu_67_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal photons_TDATA_int_regslice : STD_LOGIC_VECTOR (47 downto 0);
    signal photons_TVALID_int_regslice : STD_LOGIC;
    signal photons_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photons_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component photon_fifo_merger_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_photons_U : component photon_fifo_merger_regslice_both
    generic map (
        DataWidth => 48)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photons_TDATA_int_regslice,
        vld_in => photons_TVALID_int_regslice,
        ack_in => photons_TREADY_int_regslice,
        data_out => photons_TDATA,
        vld_out => regslice_both_photons_U_vld_out,
        ack_out => photons_TREADY,
        apdone_blk => regslice_both_photons_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                read_1_reg_135 <= photon_fifos_1_read_nbread_fu_55_p2_0;
                tmp_1_reg_139 <= photon_fifos_1_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                read_2_reg_149 <= photon_fifos_2_read_nbread_fu_61_p2_0;
                tmp_2_reg_153 <= photon_fifos_2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                read_3_reg_163 <= photon_fifos_3_read_nbread_fu_67_p2_0;
                tmp_3_reg_167 <= photon_fifos_3_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                read_reg_121 <= photon_fifos_0_read_nbread_fu_42_p2_0;
                tmp_reg_125 <= photon_fifos_0_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(read_2_reg_149, ap_enable_reg_pp0_iter1, read_3_reg_163, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(read_2_reg_149, ap_enable_reg_pp0_iter1, read_3_reg_163, ap_block_state5_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(read_2_reg_149, ap_enable_reg_pp0_iter1, read_3_reg_163, ap_block_state5_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(read_reg_121, ap_enable_reg_pp0_iter1, read_3_reg_163, regslice_both_photons_U_apdone_blk, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_photons_U_apdone_blk = ap_const_logic_1) or ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)))) or ((read_reg_121 = ap_const_lv1_1) and (ap_const_logic_1 = ap_const_logic_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(read_reg_121, ap_enable_reg_pp0_iter1, read_3_reg_163, ap_block_state2_io, regslice_both_photons_U_apdone_blk, ap_block_state6_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state6_io) or (regslice_both_photons_U_apdone_blk = ap_const_logic_1) or ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(read_reg_121, ap_enable_reg_pp0_iter1, read_3_reg_163, ap_block_state2_io, regslice_both_photons_U_apdone_blk, ap_block_state6_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state6_io) or (regslice_both_photons_U_apdone_blk = ap_const_logic_1) or ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(read_reg_121, read_1_reg_135, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_const_logic_1 = ap_const_logic_1) and (((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(read_reg_121, read_1_reg_135, ap_block_state3_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_const_logic_1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(read_reg_121, read_1_reg_135, ap_block_state3_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_logic_1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(read_1_reg_135, read_2_reg_149, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_const_logic_1 = ap_const_logic_1) and (((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(read_1_reg_135, read_2_reg_149, ap_block_state4_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_const_logic_1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(read_1_reg_135, read_2_reg_149, ap_block_state4_io, photons_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_logic_1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(read_reg_121, photons_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(read_reg_121, photons_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(read_reg_121, read_1_reg_135, photons_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(read_reg_121, read_1_reg_135, photons_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_reg_121 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(read_1_reg_135, read_2_reg_149, photons_TREADY_int_regslice)
    begin
                ap_block_state4_io <= (((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(read_1_reg_135, read_2_reg_149, photons_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_1_reg_135 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state5_io_assign_proc : process(read_2_reg_149, read_3_reg_163, photons_TREADY_int_regslice)
    begin
                ap_block_state5_io <= (((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage0_iter1_assign_proc : process(read_2_reg_149, read_3_reg_163, photons_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)) or ((read_2_reg_149 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state6_io_assign_proc : process(read_3_reg_163, photons_TREADY_int_regslice)
    begin
                ap_block_state6_io <= ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage1_iter1_assign_proc : process(read_3_reg_163, regslice_both_photons_U_apdone_blk, photons_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage1_iter1 <= ((regslice_both_photons_U_apdone_blk = ap_const_logic_1) or ((read_3_reg_163 = ap_const_lv1_1) and (photons_TREADY_int_regslice = ap_const_logic_0)));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    p_015_fu_81_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_125),48));
    p_016_fu_93_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_139),48));
    p_017_fu_105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_153),48));
    p_0_fu_117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_167),48));

    photon_fifos_0_read_assign_proc : process(photon_fifos_0_empty_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (photon_fifos_0_empty_n = ap_const_logic_1))) then 
            photon_fifos_0_read <= ap_const_logic_1;
        else 
            photon_fifos_0_read <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_0_read_nbread_fu_42_p2_0 <= (0=>(photon_fifos_0_empty_n), others=>'-');

    photon_fifos_1_read_assign_proc : process(photon_fifos_1_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (photon_fifos_1_empty_n = ap_const_logic_1))) then 
            photon_fifos_1_read <= ap_const_logic_1;
        else 
            photon_fifos_1_read <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_1_read_nbread_fu_55_p2_0 <= (0=>(photon_fifos_1_empty_n), others=>'-');

    photon_fifos_2_read_assign_proc : process(photon_fifos_2_empty_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1) and (photon_fifos_2_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            photon_fifos_2_read <= ap_const_logic_1;
        else 
            photon_fifos_2_read <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_2_read_nbread_fu_61_p2_0 <= (0=>(photon_fifos_2_empty_n), others=>'-');

    photon_fifos_3_read_assign_proc : process(photon_fifos_3_empty_n, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_const_logic_1) and (photon_fifos_3_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            photon_fifos_3_read <= ap_const_logic_1;
        else 
            photon_fifos_3_read <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_3_read_nbread_fu_67_p2_0 <= (0=>(photon_fifos_3_empty_n), others=>'-');

    photons_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, read_reg_121, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, read_1_reg_135, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, read_2_reg_149, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, read_3_reg_163, photons_TREADY_int_regslice)
    begin
        if ((((read_3_reg_163 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((read_3_reg_163 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (read_2_reg_149 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((read_2_reg_149 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((read_1_reg_135 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((read_1_reg_135 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((read_reg_121 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((read_reg_121 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            photons_TDATA_blk_n <= photons_TREADY_int_regslice;
        else 
            photons_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    photons_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage1, read_reg_121, ap_CS_fsm_pp0_stage2, read_1_reg_135, ap_CS_fsm_pp0_stage3, read_2_reg_149, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, read_3_reg_163, p_015_fu_81_p1, p_016_fu_93_p1, p_017_fu_105_p1, p_0_fu_117_p1, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001)
    begin
        if (((read_3_reg_163 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            photons_TDATA_int_regslice <= p_0_fu_117_p1;
        elsif (((read_2_reg_149 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            photons_TDATA_int_regslice <= p_017_fu_105_p1;
        elsif (((read_1_reg_135 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            photons_TDATA_int_regslice <= p_016_fu_93_p1;
        elsif (((read_reg_121 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            photons_TDATA_int_regslice <= p_015_fu_81_p1;
        else 
            photons_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    photons_TVALID <= regslice_both_photons_U_vld_out;

    photons_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage1, read_reg_121, ap_CS_fsm_pp0_stage2, read_1_reg_135, ap_CS_fsm_pp0_stage3, read_2_reg_149, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, read_3_reg_163, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((read_3_reg_163 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((read_2_reg_149 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((read_1_reg_135 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((read_reg_121 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            photons_TVALID_int_regslice <= ap_const_logic_1;
        else 
            photons_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

end behav;
