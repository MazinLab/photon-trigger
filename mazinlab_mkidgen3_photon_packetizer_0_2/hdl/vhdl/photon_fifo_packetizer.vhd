-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity photon_fifo_packetizer is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    photon_fifos_0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    photon_fifos_0_TVALID : IN STD_LOGIC;
    photon_fifos_0_TREADY : OUT STD_LOGIC;
    photon_fifos_1_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    photon_fifos_1_TVALID : IN STD_LOGIC;
    photon_fifos_1_TREADY : OUT STD_LOGIC;
    photon_fifos_2_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    photon_fifos_2_TVALID : IN STD_LOGIC;
    photon_fifos_2_TREADY : OUT STD_LOGIC;
    photon_fifos_3_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    photon_fifos_3_TVALID : IN STD_LOGIC;
    photon_fifos_3_TREADY : OUT STD_LOGIC;
    photon_packets_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    photon_packets_TVALID : OUT STD_LOGIC;
    photon_packets_TREADY : IN STD_LOGIC;
    photon_packets_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    photon_packets_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    photon_packets_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of photon_fifo_packetizer is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "photon_fifo_packetizer_photon_fifo_packetizer,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.096062,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=260,HLS_SYN_LUT=363,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal max_photons_per_packet_minus1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ticks_per_packet_minus1 : STD_LOGIC_VECTOR (31 downto 0);
    signal readfrom : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal count_V : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal time_r : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal photon_packets_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal read_reg_488 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal read_reg_488_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ticks_per_packet_minus1_read_reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_photon_packets_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal max_photons_per_packet_minus1_read_reg_479 : STD_LOGIC_VECTOR (16 downto 0);
    signal read_fu_339_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_time_V_reg_494 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_reg_499 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_last_this_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_empty_phi_fu_165_p8 : STD_LOGIC_VECTOR (155 downto 0);
    signal tmp_s_fu_287_p6 : STD_LOGIC_VECTOR (155 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_162 : STD_LOGIC_VECTOR (155 downto 0);
    signal readfrom_load_load_fu_175_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_250_p6 : STD_LOGIC_VECTOR (155 downto 0);
    signal tmp_2_fu_213_p6 : STD_LOGIC_VECTOR (155 downto 0);
    signal tmp_6_fu_324_p6 : STD_LOGIC_VECTOR (155 downto 0);
    signal add_ln886_fu_179_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln886_1_fu_449_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_reset_counters_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln357_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal photon_fifos_2_read_nbread_fu_120_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal photon_fifos_1_read_nbread_fu_126_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal photon_fifos_0_read_nbread_fu_132_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal photon_fifos_3_read_nbread_fu_138_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_7_fu_203_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln164_3_fu_199_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_5_fu_240_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln164_2_fu_236_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_4_fu_277_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln164_1_fu_273_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_3_fu_314_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln164_fu_310_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp_ln342_1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln342_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln342_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1077_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1077_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal enough_time_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1077_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln886_fu_446_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_photon_fifos_0_U_apdone_blk : STD_LOGIC;
    signal photon_fifos_0_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photon_fifos_0_TVALID_int_regslice : STD_LOGIC;
    signal photon_fifos_0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photon_fifos_0_U_ack_in : STD_LOGIC;
    signal regslice_both_photon_fifos_1_U_apdone_blk : STD_LOGIC;
    signal photon_fifos_1_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photon_fifos_1_TVALID_int_regslice : STD_LOGIC;
    signal photon_fifos_1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photon_fifos_1_U_ack_in : STD_LOGIC;
    signal regslice_both_photon_fifos_2_U_apdone_blk : STD_LOGIC;
    signal photon_fifos_2_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photon_fifos_2_TVALID_int_regslice : STD_LOGIC;
    signal photon_fifos_2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photon_fifos_2_U_ack_in : STD_LOGIC;
    signal regslice_both_photon_fifos_3_U_apdone_blk : STD_LOGIC;
    signal photon_fifos_3_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photon_fifos_3_TVALID_int_regslice : STD_LOGIC;
    signal photon_fifos_3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photon_fifos_3_U_ack_in : STD_LOGIC;
    signal photon_packets_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal photon_packets_TVALID_int_regslice : STD_LOGIC;
    signal photon_packets_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_photon_packets_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_photon_packets_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_photon_packets_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_photon_packets_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_photon_packets_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_photon_packets_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_photon_packets_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_photon_packets_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_photon_packets_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_photon_packets_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_165 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component photon_fifo_packetizer_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        max_photons_per_packet_minus1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        ticks_per_packet_minus1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component photon_fifo_packetizer_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component photon_fifo_packetizer_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        max_photons_per_packet_minus1 => max_photons_per_packet_minus1,
        ticks_per_packet_minus1 => ticks_per_packet_minus1);

    regslice_both_photon_fifos_0_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photon_fifos_0_TDATA,
        vld_in => photon_fifos_0_TVALID,
        ack_in => regslice_both_photon_fifos_0_U_ack_in,
        data_out => photon_fifos_0_TDATA_int_regslice,
        vld_out => photon_fifos_0_TVALID_int_regslice,
        ack_out => photon_fifos_0_TREADY_int_regslice,
        apdone_blk => regslice_both_photon_fifos_0_U_apdone_blk);

    regslice_both_photon_fifos_1_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photon_fifos_1_TDATA,
        vld_in => photon_fifos_1_TVALID,
        ack_in => regslice_both_photon_fifos_1_U_ack_in,
        data_out => photon_fifos_1_TDATA_int_regslice,
        vld_out => photon_fifos_1_TVALID_int_regslice,
        ack_out => photon_fifos_1_TREADY_int_regslice,
        apdone_blk => regslice_both_photon_fifos_1_U_apdone_blk);

    regslice_both_photon_fifos_2_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photon_fifos_2_TDATA,
        vld_in => photon_fifos_2_TVALID,
        ack_in => regslice_both_photon_fifos_2_U_ack_in,
        data_out => photon_fifos_2_TDATA_int_regslice,
        vld_out => photon_fifos_2_TVALID_int_regslice,
        ack_out => photon_fifos_2_TREADY_int_regslice,
        apdone_blk => regslice_both_photon_fifos_2_U_apdone_blk);

    regslice_both_photon_fifos_3_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photon_fifos_3_TDATA,
        vld_in => photon_fifos_3_TVALID,
        ack_in => regslice_both_photon_fifos_3_U_ack_in,
        data_out => photon_fifos_3_TDATA_int_regslice,
        vld_out => photon_fifos_3_TVALID_int_regslice,
        ack_out => photon_fifos_3_TREADY_int_regslice,
        apdone_blk => regslice_both_photon_fifos_3_U_apdone_blk);

    regslice_both_photon_packets_V_data_V_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => photon_packets_TDATA_int_regslice,
        vld_in => photon_packets_TVALID_int_regslice,
        ack_in => photon_packets_TREADY_int_regslice,
        data_out => photon_packets_TDATA,
        vld_out => regslice_both_photon_packets_V_data_V_U_vld_out,
        ack_out => photon_packets_TREADY,
        apdone_blk => regslice_both_photon_packets_V_data_V_U_apdone_blk);

    regslice_both_photon_packets_V_keep_V_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => photon_packets_TVALID_int_regslice,
        ack_in => regslice_both_photon_packets_V_keep_V_U_ack_in_dummy,
        data_out => photon_packets_TKEEP,
        vld_out => regslice_both_photon_packets_V_keep_V_U_vld_out,
        ack_out => photon_packets_TREADY,
        apdone_blk => regslice_both_photon_packets_V_keep_V_U_apdone_blk);

    regslice_both_photon_packets_V_strb_V_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => photon_packets_TVALID_int_regslice,
        ack_in => regslice_both_photon_packets_V_strb_V_U_ack_in_dummy,
        data_out => photon_packets_TSTRB,
        vld_out => regslice_both_photon_packets_V_strb_V_U_vld_out,
        ack_out => photon_packets_TREADY,
        apdone_blk => regslice_both_photon_packets_V_strb_V_U_apdone_blk);

    regslice_both_photon_packets_V_last_V_U : component photon_fifo_packetizer_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_last_this_fu_415_p2,
        vld_in => photon_packets_TVALID_int_regslice,
        ack_in => regslice_both_photon_packets_V_last_V_U_ack_in_dummy,
        data_out => photon_packets_TLAST,
        vld_out => regslice_both_photon_packets_V_last_V_U_vld_out,
        ack_out => photon_packets_TREADY,
        apdone_blk => regslice_both_photon_packets_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    count_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_165)) then
                if ((p_reset_counters_fu_422_p2 = ap_const_lv1_1)) then 
                    count_V <= ap_const_lv17_0;
                elsif ((p_reset_counters_fu_422_p2 = ap_const_lv1_0)) then 
                    count_V <= add_ln886_1_fu_449_p2;
                end if;
            end if; 
        end if;
    end process;

    time_r_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_165)) then
                if ((p_reset_counters_fu_422_p2 = ap_const_lv1_1)) then 
                    time_r <= ap_const_lv32_0;
                elsif ((p_reset_counters_fu_422_p2 = ap_const_lv1_0)) then 
                    time_r <= add_ln357_fu_434_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                max_photons_per_packet_minus1_read_reg_479 <= max_photons_per_packet_minus1;
                read_reg_488 <= read_fu_339_p1;
                read_reg_488_pp0_iter1_reg <= read_reg_488;
                ticks_per_packet_minus1_read_reg_473 <= ticks_per_packet_minus1;
                tmp_reg_499 <= ap_phi_mux_empty_phi_fu_165_p8(155 downto 128);
                x_time_V_reg_494 <= ap_phi_mux_empty_phi_fu_165_p8(99 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then
                readfrom <= add_ln886_fu_179_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln357_fu_434_p2 <= std_logic_vector(unsigned(time_r) + unsigned(ap_const_lv32_1));
    add_ln886_1_fu_449_p2 <= std_logic_vector(unsigned(count_V) + unsigned(zext_ln886_fu_446_p1));
    add_ln886_fu_179_p2 <= std_logic_vector(unsigned(readfrom) + unsigned(ap_const_lv2_1));
    and_ln1077_fu_409_p2 <= (xor_ln1077_fu_403_p2 and icmp_ln1069_fu_393_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, read_reg_488, ap_enable_reg_pp0_iter2, read_reg_488_pp0_iter1_reg, regslice_both_photon_packets_V_data_V_U_apdone_blk, photon_packets_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_photon_packets_V_data_V_U_apdone_blk = ap_const_logic_1) or ((read_reg_488_pp0_iter1_reg = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0)))) or ((read_reg_488 = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, read_reg_488, ap_enable_reg_pp0_iter2, read_reg_488_pp0_iter1_reg, ap_block_state2_io, regslice_both_photon_packets_V_data_V_U_apdone_blk, ap_block_state3_io, photon_packets_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_photon_packets_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((read_reg_488_pp0_iter1_reg = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((read_reg_488 = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, read_reg_488, ap_enable_reg_pp0_iter2, read_reg_488_pp0_iter1_reg, ap_block_state2_io, regslice_both_photon_packets_V_data_V_U_apdone_blk, ap_block_state3_io, photon_packets_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_photon_packets_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((read_reg_488_pp0_iter1_reg = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((read_reg_488 = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0)))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(read_reg_488, photon_packets_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((read_reg_488 = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(read_reg_488, photon_packets_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((read_reg_488 = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(read_reg_488_pp0_iter1_reg, photon_packets_TREADY_int_regslice)
    begin
                ap_block_state3_io <= ((read_reg_488_pp0_iter1_reg = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(read_reg_488_pp0_iter1_reg, regslice_both_photon_packets_V_data_V_U_apdone_blk, photon_packets_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_photon_packets_V_data_V_U_apdone_blk = ap_const_logic_1) or ((read_reg_488_pp0_iter1_reg = ap_const_lv1_1) and (photon_packets_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_condition_165_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_165 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_phi_fu_165_p8_assign_proc : process(tmp_s_fu_287_p6, ap_phi_reg_pp0_iter0_empty_reg_162, readfrom_load_load_fu_175_p1, tmp_1_fu_250_p6, tmp_2_fu_213_p6, tmp_6_fu_324_p6)
    begin
        if ((readfrom_load_load_fu_175_p1 = ap_const_lv2_3)) then 
            ap_phi_mux_empty_phi_fu_165_p8 <= tmp_6_fu_324_p6;
        elsif ((readfrom_load_load_fu_175_p1 = ap_const_lv2_2)) then 
            ap_phi_mux_empty_phi_fu_165_p8 <= tmp_2_fu_213_p6;
        elsif ((readfrom_load_load_fu_175_p1 = ap_const_lv2_1)) then 
            ap_phi_mux_empty_phi_fu_165_p8 <= tmp_1_fu_250_p6;
        elsif ((readfrom_load_load_fu_175_p1 = ap_const_lv2_0)) then 
            ap_phi_mux_empty_phi_fu_165_p8 <= tmp_s_fu_287_p6;
        else 
            ap_phi_mux_empty_phi_fu_165_p8 <= ap_phi_reg_pp0_iter0_empty_reg_162;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_empty_reg_162 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    enough_time_fu_387_p2 <= (xor_ln342_fu_381_p2 and icmp_ln342_fu_367_p2);
    icmp_ln1069_fu_393_p2 <= "0" when (max_photons_per_packet_minus1_read_reg_479 = ap_const_lv17_0) else "1";
    icmp_ln1077_fu_398_p2 <= "1" when (unsigned(count_V) < unsigned(max_photons_per_packet_minus1_read_reg_479)) else "0";
    icmp_ln342_1_fu_376_p2 <= "1" when (unsigned(ticks_per_packet_minus1_read_reg_473) < unsigned(time_r)) else "0";
    icmp_ln342_fu_367_p2 <= "0" when (ticks_per_packet_minus1_read_reg_473 = ap_const_lv32_0) else "1";
    p_last_this_fu_415_p2 <= (enough_time_fu_387_p2 or and_ln1077_fu_409_p2);
    p_reset_counters_fu_422_p2 <= (read_reg_488 and p_last_this_fu_415_p2);
    photon_fifos_0_TREADY <= regslice_both_photon_fifos_0_U_ack_in;

    photon_fifos_0_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, readfrom_load_load_fu_175_p1, photon_fifos_0_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (photon_fifos_0_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (readfrom_load_load_fu_175_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            photon_fifos_0_TREADY_int_regslice <= ap_const_logic_1;
        else 
            photon_fifos_0_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_0_read_nbread_fu_132_p2_0 <= (0=>(photon_fifos_0_TVALID_int_regslice), others=>'-');
    photon_fifos_1_TREADY <= regslice_both_photon_fifos_1_U_ack_in;

    photon_fifos_1_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, readfrom_load_load_fu_175_p1, photon_fifos_1_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (photon_fifos_1_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (readfrom_load_load_fu_175_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_const_logic_1))) then 
            photon_fifos_1_TREADY_int_regslice <= ap_const_logic_1;
        else 
            photon_fifos_1_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_1_read_nbread_fu_126_p2_0 <= (0=>(photon_fifos_1_TVALID_int_regslice), others=>'-');
    photon_fifos_2_TREADY <= regslice_both_photon_fifos_2_U_ack_in;

    photon_fifos_2_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, readfrom_load_load_fu_175_p1, photon_fifos_2_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (photon_fifos_2_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (readfrom_load_load_fu_175_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_const_logic_1))) then 
            photon_fifos_2_TREADY_int_regslice <= ap_const_logic_1;
        else 
            photon_fifos_2_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_2_read_nbread_fu_120_p2_0 <= (0=>(photon_fifos_2_TVALID_int_regslice), others=>'-');
    photon_fifos_3_TREADY <= regslice_both_photon_fifos_3_U_ack_in;

    photon_fifos_3_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, readfrom_load_load_fu_175_p1, photon_fifos_3_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (photon_fifos_3_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (readfrom_load_load_fu_175_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_const_logic_1))) then 
            photon_fifos_3_TREADY_int_regslice <= ap_const_logic_1;
        else 
            photon_fifos_3_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    photon_fifos_3_read_nbread_fu_138_p2_0 <= (0=>(photon_fifos_3_TVALID_int_regslice), others=>'-');

    photon_packets_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, read_reg_488, ap_enable_reg_pp0_iter2, read_reg_488_pp0_iter1_reg, photon_packets_TREADY_int_regslice)
    begin
        if ((((read_reg_488_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((read_reg_488 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            photon_packets_TDATA_blk_n <= photon_packets_TREADY_int_regslice;
        else 
            photon_packets_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    photon_packets_TDATA_int_regslice <= (x_time_V_reg_494 & tmp_reg_499);
    photon_packets_TVALID <= regslice_both_photon_packets_V_data_V_U_vld_out;

    photon_packets_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, read_reg_488, ap_block_pp0_stage0_11001)
    begin
        if (((read_reg_488 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            photon_packets_TVALID_int_regslice <= ap_const_logic_1;
        else 
            photon_packets_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    read_fu_339_p1 <= ap_phi_mux_empty_phi_fu_165_p8(1 - 1 downto 0);
    readfrom_load_load_fu_175_p1 <= readfrom;
    tmp_1_fu_250_p6 <= ((((tmp_5_fu_240_p4 & ap_const_lv28_0) & trunc_ln164_2_fu_236_p1) & ap_const_lv63_0) & photon_fifos_1_read_nbread_fu_126_p2_0);
    tmp_2_fu_213_p6 <= ((((tmp_7_fu_203_p4 & ap_const_lv28_0) & trunc_ln164_3_fu_199_p1) & ap_const_lv63_0) & photon_fifos_2_read_nbread_fu_120_p2_0);
    tmp_3_fu_314_p4 <= photon_fifos_3_TDATA_int_regslice(63 downto 36);
    tmp_4_fu_277_p4 <= photon_fifos_0_TDATA_int_regslice(63 downto 36);
    tmp_5_fu_240_p4 <= photon_fifos_1_TDATA_int_regslice(63 downto 36);
    tmp_6_fu_324_p6 <= ((((tmp_3_fu_314_p4 & ap_const_lv28_0) & trunc_ln164_fu_310_p1) & ap_const_lv63_0) & photon_fifos_3_read_nbread_fu_138_p2_0);
    tmp_7_fu_203_p4 <= photon_fifos_2_TDATA_int_regslice(63 downto 36);
    tmp_s_fu_287_p6 <= ((((tmp_4_fu_277_p4 & ap_const_lv28_0) & trunc_ln164_1_fu_273_p1) & ap_const_lv63_0) & photon_fifos_0_read_nbread_fu_132_p2_0);
    trunc_ln164_1_fu_273_p1 <= photon_fifos_0_TDATA_int_regslice(36 - 1 downto 0);
    trunc_ln164_2_fu_236_p1 <= photon_fifos_1_TDATA_int_regslice(36 - 1 downto 0);
    trunc_ln164_3_fu_199_p1 <= photon_fifos_2_TDATA_int_regslice(36 - 1 downto 0);
    trunc_ln164_fu_310_p1 <= photon_fifos_3_TDATA_int_regslice(36 - 1 downto 0);
    xor_ln1077_fu_403_p2 <= (icmp_ln1077_fu_398_p2 xor ap_const_lv1_1);
    xor_ln342_fu_381_p2 <= (icmp_ln342_1_fu_376_p2 xor ap_const_lv1_1);
    zext_ln886_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_reg_488),17));
end behav;
